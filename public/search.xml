<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Maven入门学习</title>
      <link href="/2019/10/08/Maven%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/"/>
      <url>/2019/10/08/Maven%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<!-- build time:Wed Oct 09 2019 13:41:44 GMT+0800 (CST) --><h2 id="Maven简介"><a href="#Maven简介" class="headerlink" title="Maven简介"></a>Maven简介</h2><p>​ Apeache Maven是一种纯Java编写的、开源的、跨平台的、标准化的、基于项目对象模型。</p><p>​ 跨平台：跨os平台、跨IDE(集成开发环境)平台。例如：在Eclipse上写的项目如果要导入到idea中，比较麻烦，而直接使用maven项目，十分顺利。</p><p>​ 标准化：项目构建标准化、项目结构标准化。</p><p>​ 用户画像：更多的属性组成用户画像。比如：你在一个平台上使用的时间越长，这个平台就会根据大数据更加了解你。</p><a id="more"></a><h2 id="Maven工作原理"><a href="#Maven工作原理" class="headerlink" title="Maven工作原理"></a>Maven工作原理</h2><p><img src="https://s2.ax1x.com/2019/10/08/uWcbJx.png" alt="uWcbJx.png"></p><p><img src="https://s2.ax1x.com/2019/10/08/uWRfQf.png" alt="uWRfQf.png"></p><ul><li>Dependency代表依赖：在引入依赖时，先在本地库中查找，如果没有在向上一层寻找，直至找到，再返回到本地的仓库。如果第二次再使用时，直接在本地仓库就可以找到。在公司中，如果一个同事下载好了，会保存到公司的局域网中，会节约带宽。</li><li>防火墙：一般就是对ip和端口号的规则的集合，符合规则或者不负责就可以过或者不能过。</li></ul><h2 id="Maven的安装配置"><a href="#Maven的安装配置" class="headerlink" title="Maven的安装配置"></a>Maven的安装配置</h2><ul><li>maven下载: <a href="http://maven.apache.org/download.cgi" target="_blank" rel="noopener"><a href="http://maven.apache.org/download.cgi" target="_blank" rel="noopener">http://maven.apache.org/download.cgi</a></a></li><li>配置环境变量MAVEN_HOME</li><li>修改conf/settings.xml配置文件,<ul><li>换成国内镜像</li><li>自定义默认代码仓库的位置</li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/repositories/central/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>/media/nianshao/59D5FCE97201B8A75/java/repository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>maven测试命令<ul><li>mvn help:system</li></ul></li></ul><h2 id="Maven的项目结构"><a href="#Maven的项目结构" class="headerlink" title="Maven的项目结构"></a>Maven的项目结构</h2><p><img src="https://s2.ax1x.com/2019/10/08/uW2Oqe.png" alt="uW2Oqe.png"></p><h2 id="package包的命名"><a href="#package包的命名" class="headerlink" title="package包的命名"></a>package包的命名</h2><p><strong>一个项目中的包的名称一般可以分为四到五级：</strong></p><ul><li>第一级：甲方公司域名的倒序，或开发方公司域名的倒序。为了保证项目在全球是唯一的。例如，cn.edu.aynu</li><li>第二级：项目名称，为了保证项目在甲方公司中的唯一性。例如，cn.edu.aynu.sms。</li><li>第三级：项目模块名称，为了保证在当前项目中资源的唯一性。例如，cn.edu.aynu.sms.aaa.bbb.ccc</li><li>第四级：功能顶层包，为了区分各种资源的功能，例如，cn.edu.aynu.sms.aaa.bbb.ccc.service cn.edu.aynu.sms.aaa.bbb.ccc.dao</li><li>第五级：impl包，用于存放接口实现类，例如，cn.edu.aynu.sms.aaa.bbb.ccc.service.impl</li></ul><h2 id="Maven的构建命令"><a href="#Maven的构建命令" class="headerlink" title="Maven的构建命令"></a>Maven的构建命令</h2><ul><li><p>mvn compile</p><ul><li>编译项目</li></ul></li><li><p>mvn test</p><ul><li>test目录测试</li></ul></li><li><p>mvn clean</p><ul><li>清除已经编译过的代码, 即target目录</li></ul><p><strong>组合命令:</strong></p></li><li><p>mvn clean test</p></li><li><p>mvn clean package</p><ul><li>打包</li><li>· 将编译好的代码打包成为可发布的格式，如 JAR，WAR</li></ul></li><li><p>mvn clean install</p><ul><li>安装到本地仓库</li><li>· 将包安装至本地仓库，以让其它项目依赖</li></ul></li></ul><h2 id="Maven的生命周期"><a href="#Maven的生命周期" class="headerlink" title="Maven的生命周期"></a>Maven的生命周期</h2><h3 id="Maven的生命周期与项目生命周期"><a href="#Maven的生命周期与项目生命周期" class="headerlink" title="Maven的生命周期与项目生命周期"></a>Maven的生命周期与项目生命周期</h3><p>​ 一个项目的构建过程需要经历被编译、被测试、被打包、被发布等生命阶段。这些项目生命阶段的构建是由谁完成的呢？是由Maven生命周期的各个阶段完成的。</p><p>​ Maven只所以非常强大的一个重要的原因是，它拥有十分完善的生命周期模型(Lifecycle)。Maven的生命周期是对所有项目的构建过程进行的抽象和统一，包含了项目的清理、初始化、编译、测试、打包、集成测试、验证、部署和站点生成等几乎所有的构建步骤。所以，Maven的生命周期是用于管理项目生命周期的。</p><p>​ Maven有三套相互独立的生命周期，分别是Clean、Default和Site，分别用于完成三类完全不同的任务。每个生命周期又包含多个生命阶段（Phase），这些生命阶段是有时间先后顺序的。即后面的阶段的执行，必定是执行过了前面的阶段。</p><h3 id="Default生命周期"><a href="#Default生命周期" class="headerlink" title="Default生命周期"></a>Default生命周期</h3><pre><code>Default生命周期是Maven最重要的生命周期，用于构建项目，其中定义了构建项目时所需要执行的所有阶段。下面列出了比较重要和常用的阶段。</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">validate</span><br><span class="line">generate-sources</span><br><span class="line">process-sources</span><br><span class="line">generate-resources</span><br><span class="line">process-resources   复制并处理资源文件，至目标目录，准备打包</span><br><span class="line">compile   编译项目的源代码</span><br><span class="line">process-classes</span><br><span class="line">generate-test-sources</span><br><span class="line">process-test-sources</span><br><span class="line">generate-test-resources</span><br><span class="line">process-test-resources   复制并处理资源文件，至目标测试目录</span><br><span class="line">test-compile   编译测试源代码</span><br><span class="line">process-test-classes</span><br><span class="line">test   使用合适的单元测试框架运行测试。这些测试代码不会被打包或部署</span><br><span class="line">prepare-package</span><br><span class="line">package   将编译好的代码打包成为可发布的格式，如 JAR，WAR</span><br><span class="line">pre-integration-test</span><br><span class="line">integration-test</span><br><span class="line">post-integration-test</span><br><span class="line">verify</span><br><span class="line">install   将包安装至本地仓库，以让其它项目依赖</span><br><span class="line">deploy   将最终的包复制到远程的仓库，以让其它开发人员与项目共享</span><br></pre></td></tr></table></figure><h3 id="Clean生命周期"><a href="#Clean生命周期" class="headerlink" title="Clean生命周期"></a>Clean生命周期</h3><p>​ Clean生命周期用于清除之前指令执行结果 。其包含三个生命阶段。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pre-clean   执行一些需要在clean之前完成的工作</span><br><span class="line">clean   移除所有上一次构建生成的文件</span><br><span class="line">post-clean   执行一些需要在clean之后立刻完成的工作</span><br></pre></td></tr></table></figure><h3 id="Site生命周期"><a href="#Site生命周期" class="headerlink" title="Site生命周期"></a>Site生命周期</h3><p>​ Site生命周期用于建立和发布项目站点。其包含四个生命阶段。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pre-site   执行一些需要在生成站点文档之前完成的工作</span><br><span class="line">site   生成项目的站点文档</span><br><span class="line">post-site   执行一些需要在生成站点文档之后完成的工作，并且为部署做准备</span><br><span class="line">site-deploy   将生成的站点文档部署到特定的服务器上</span><br></pre></td></tr></table></figure><h2 id="项目依赖管理"><a href="#项目依赖管理" class="headerlink" title="项目依赖管理"></a>项目依赖管理</h2><h3 id="直接依赖与间接依赖"><a href="#直接依赖与间接依赖" class="headerlink" title="直接依赖与间接依赖"></a>直接依赖与间接依赖</h3><h3 id="以来传递"><a href="#以来传递" class="headerlink" title="以来传递"></a>以来传递</h3><h3 id="jar包分类"><a href="#jar包分类" class="headerlink" title="jar包分类"></a>jar包分类</h3><h4 id="（1）编译、运行、打包时均不需要的Jar包"><a href="#（1）编译、运行、打包时均不需要的Jar包" class="headerlink" title="（1）编译、运行、打包时均不需要的Jar包"></a><strong>（1）编译、运行、打包时均不需要的Jar包</strong></h4><h4 id="（2）编译、运行时需要，但打包时不需要的Jar包"><a href="#（2）编译、运行时需要，但打包时不需要的Jar包" class="headerlink" title="（2）编译、运行时需要，但打包时不需要的Jar包"></a><strong>（2）编译、运行时需要，但打包时不需要的Jar包</strong></h4><h4 id="（3）编译时不需要，但运行、打包时需要的Jar包"><a href="#（3）编译时不需要，但运行、打包时需要的Jar包" class="headerlink" title="（3）编译时不需要，但运行、打包时需要的Jar包"></a><strong>（3）编译时不需要，但运行、打包时需要的Jar包</strong></h4><h4 id="（4）编译、运行、打包时均需要的Jar包"><a href="#（4）编译、运行、打包时均需要的Jar包" class="headerlink" title="（4）编译、运行、打包时均需要的Jar包"></a><strong>（4）编译、运行、打包时均需要的Jar包</strong></h4><h3 id="依赖传递范围的设定"><a href="#依赖传递范围的设定" class="headerlink" title="依赖传递范围的设定"></a>依赖传递范围的设定</h3><h4 id="（1）test"><a href="#（1）test" class="headerlink" title="（1）test"></a><strong>（1）test</strong></h4><h4 id="（2）provided"><a href="#（2）provided" class="headerlink" title="（2）provided"></a><strong>（2）provided</strong></h4><h4 id="（3）runtime"><a href="#（3）runtime" class="headerlink" title="（3）runtime"></a><strong>（3）runtime</strong></h4><h4 id="（4）-compile"><a href="#（4）-compile" class="headerlink" title="（4）**compile**"></a><strong>（4）**</strong>compile**</h4><h4 id="（5）system"><a href="#（5）system" class="headerlink" title="（5）system"></a><strong>（5）system</strong></h4><ul><li>&lt;systemPath&gt;${basedir}/lib/xxx.jar&lt;/systemPath&gt;</li></ul><h4 id="（6）import"><a href="#（6）import" class="headerlink" title="（6）import"></a><strong>（6）import</strong></h4><h3 id="可选依赖与排除依赖"><a href="#可选依赖与排除依赖" class="headerlink" title="可选依赖与排除依赖"></a>可选依赖与排除依赖</h3><h3 id="依赖冲突"><a href="#依赖冲突" class="headerlink" title="依赖冲突"></a>依赖冲突</h3><h3 id="直接依赖冲突"><a href="#直接依赖冲突" class="headerlink" title="直接依赖冲突"></a>直接依赖冲突</h3><h3 id="统一管理版本号"><a href="#统一管理版本号" class="headerlink" title="统一管理版本号"></a>统一管理版本号</h3><h3 id="依赖的继承"><a href="#依赖的继承" class="headerlink" title="依赖的继承"></a>依赖的继承</h3><h3 id="直接继承"><a href="#直接继承" class="headerlink" title="直接继承"></a>直接继承</h3><h3 id="可选继承"><a href="#可选继承" class="headerlink" title="可选继承"></a>可选继承</h3><h3 id="聚合"><a href="#聚合" class="headerlink" title="聚合"></a>聚合</h3><h3 id="具有可选依赖的聚合父工程"><a href="#具有可选依赖的聚合父工程" class="headerlink" title="具有可选依赖的聚合父工程"></a>具有可选依赖的聚合父工程</h3><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis多对一、一对多查询</title>
      <link href="/2019/09/23/mybatis%E5%A4%9A%E5%AF%B9%E4%B8%80%E3%80%81%E4%B8%80%E5%AF%B9%E5%A4%9A%E6%9F%A5%E8%AF%A2/"/>
      <url>/2019/09/23/mybatis%E5%A4%9A%E5%AF%B9%E4%B8%80%E3%80%81%E4%B8%80%E5%AF%B9%E5%A4%9A%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<!-- build time:Wed Oct 09 2019 13:41:44 GMT+0800 (CST) --><h2 id="数据库备份文件"><a href="#数据库备份文件" class="headerlink" title="数据库备份文件"></a>数据库备份文件</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`user`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`user`</span> (</span><br><span class="line">  <span class="string">`uid`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`uname`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`usex`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`uid`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of user</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span> <span class="keyword">VALUES</span> (<span class="string">'1'</span>, <span class="string">'张三'</span>, <span class="string">'男'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span> <span class="keyword">VALUES</span> (<span class="string">'2'</span>, <span class="string">'李四'</span>, <span class="string">'男'</span>);</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`friend`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`friend`</span> (</span><br><span class="line">  <span class="string">`friend_id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`friend_name`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`friend_sex`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`user_id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`friend_id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`fk`</span> (<span class="string">`user_id`</span>),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> <span class="string">`fk`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`user_id`</span>) <span class="keyword">REFERENCES</span> <span class="string">`user`</span> (<span class="string">`uid`</span>) <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">CASCADE</span></span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of friend</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`friend`</span> <span class="keyword">VALUES</span> (<span class="string">'1'</span>, <span class="string">'小明'</span>, <span class="string">'男'</span>, <span class="string">'1'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`friend`</span> <span class="keyword">VALUES</span> (<span class="string">'2'</span>, <span class="string">'小红'</span>, <span class="string">'女'</span>, <span class="string">'1'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`friend`</span> <span class="keyword">VALUES</span> (<span class="string">'3'</span>, <span class="string">'小兰'</span>, <span class="string">'女'</span>, <span class="string">'2'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`friend`</span> <span class="keyword">VALUES</span> (<span class="string">'4'</span>, <span class="string">'小光'</span>, <span class="string">'男'</span>, <span class="string">'1'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`friend`</span> <span class="keyword">VALUES</span> (<span class="string">'5'</span>, <span class="string">'小天'</span>, <span class="string">'男'</span>, <span class="string">'2'</span>);</span><br></pre></td></tr></table></figure><h2 id="maven创建项目"><a href="#maven创建项目" class="headerlink" title="maven创建项目"></a>maven创建项目</h2><ul><li>依赖jar包</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.43<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--      &lt;scope&gt;test&lt;/scope&gt;--&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="一对多查询"><a href="#一对多查询" class="headerlink" title="一对多查询"></a>一对多查询</h2><ul><li>详细代码请到码云查看</li><li><a href="https://gitee.com/gitsilence/mybatis_learning" target="_blank" rel="noopener">点次跳转代码仓库</a></li></ul><h2 id="多对一查询"><a href="#多对一查询" class="headerlink" title="多对一查询"></a>多对一查询</h2><ul><li>User.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lacknb.beans;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer uid;</span><br><span class="line">    <span class="keyword">private</span> String uname;</span><br><span class="line">    <span class="keyword">private</span> String usex;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String uname, String usex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.uname = uname;</span><br><span class="line">        <span class="keyword">this</span>.usex = usex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getUid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> uid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUid</span><span class="params">(Integer uid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.uid = uid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> uname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUname</span><span class="params">(String uname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.uname = uname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> usex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsex</span><span class="params">(String usex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.usex = usex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"User&#123;"</span> +</span><br><span class="line">                <span class="string">"uid="</span> + uid +</span><br><span class="line">                <span class="string">", uname='"</span> + uname + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", usex='"</span> + usex + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Friend.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lacknb.beans;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Friend</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer friend_id;</span><br><span class="line">    <span class="keyword">private</span> String friend_name;</span><br><span class="line">    <span class="keyword">private</span> String friend_sex;</span><br><span class="line">    <span class="keyword">private</span> Integer user_id;</span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Friend</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Friend</span><span class="params">(String friend_name, String friend_sex, Integer user_id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.friend_name = friend_name;</span><br><span class="line">        <span class="keyword">this</span>.friend_sex = friend_sex;</span><br><span class="line">        <span class="keyword">this</span>.user_id = user_id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getFriend_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> friend_id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFriend_id</span><span class="params">(Integer friend_id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.friend_id = friend_id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFriend_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> friend_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFriend_name</span><span class="params">(String friend_name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.friend_name = friend_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFriend_sex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> friend_sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFriend_sex</span><span class="params">(String friend_sex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.friend_sex = friend_sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getUser_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> user_id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_id</span><span class="params">(Integer user_id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.user_id = user_id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.user = user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Friend&#123;"</span> +</span><br><span class="line">                <span class="string">"friend_id="</span> + friend_id +</span><br><span class="line">                <span class="string">", friend_name='"</span> + friend_name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", friend_sex='"</span> + friend_sex + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", user_id="</span> + user_id +</span><br><span class="line">                <span class="string">", user="</span> + user +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>IFriendDao.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lacknb.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.lacknb.beans.Friend;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IFriendDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Friend&gt; <span class="title">selectFriend</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>mapper.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"cn.lacknb.dao.IFriendDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectById"</span> <span class="attr">resultType</span>=<span class="string">"cn.lacknb.beans.User"</span>&gt;</span></span><br><span class="line">        select * from user where uid = #&#123;uid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"friendMap"</span> <span class="attr">type</span>=<span class="string">"cn.lacknb.beans.Friend"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"friend_name"</span> <span class="attr">property</span>=<span class="string">"friend_name"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"friend_sex"</span> <span class="attr">property</span>=<span class="string">"friend_sex"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"user_id"</span> <span class="attr">property</span>=<span class="string">"user_id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"user"</span> <span class="attr">javaType</span>=<span class="string">"cn.lacknb.beans.User"</span> <span class="attr">column</span>=<span class="string">"user_id"</span> <span class="attr">select</span>=<span class="string">"selectById"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    多对一--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectFriend"</span> <span class="attr">resultMap</span>=<span class="string">"friendMap"</span>&gt;</span></span><br><span class="line">        select * from friend</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>其他代码不变</li></ul><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag>  mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>maven创建spring入门项目</title>
      <link href="/2019/09/21/maven%E5%88%9B%E5%BB%BAspring%E5%85%A5%E9%97%A8%E9%A1%B9%E7%9B%AE/"/>
      <url>/2019/09/21/maven%E5%88%9B%E5%BB%BAspring%E5%85%A5%E9%97%A8%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<!-- build time:Wed Oct 09 2019 13:41:44 GMT+0800 (CST) --><h2 id="导入依赖jar包-使用的是org-spring-framewok-5-1-5-RELEASE"><a href="#导入依赖jar包-使用的是org-spring-framewok-5-1-5-RELEASE" class="headerlink" title="导入依赖jar包, 使用的是org.spring.framewok 5.1.5 RELEASE"></a>导入依赖jar包, 使用的是org.spring.framewok 5.1.5 RELEASE</h2><ul><li>pom.xm文件的dependencies<a id="more"></a><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--      &lt;scope&gt;test&lt;/scope&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-core --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-beans --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-context --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-expression<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    第三方jar--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="创建xml文件-beans-xml"><a href="#创建xml文件-beans-xml" class="headerlink" title="创建xml文件, beans.xml"></a>创建xml文件, beans.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">          http://www.springframework.org/schema/beans                         http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- bean definitions here --&gt;</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="创建接口"><a href="#创建接口" class="headerlink" title="创建接口"></a>创建接口</h2><ul><li>DoSomething.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lacknb.iml;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DoSomething</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">find</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>创建实现类DoImpl.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lacknb.spring;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.lacknb.iml.DoSomething;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DoImpl</span> <span class="keyword">implements</span> <span class="title">DoSomething</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"添加成功"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"删除成功"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">find</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"查询成功"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"修改成功"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 传统方式</span></span><br><span class="line"><span class="comment">//        DoSomething doing = new DoImpl();</span></span><br><span class="line"><span class="comment">//        doing.add();</span></span><br><span class="line"><span class="comment">//        doing.delete();</span></span><br><span class="line">        <span class="comment">// spring方式</span></span><br><span class="line">        <span class="comment">// 加载容器</span></span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"xml/beans.xml"</span>);</span><br><span class="line">        DoImpl doing = (DoImpl) context.getBean(<span class="string">"dosomething"</span>);</span><br><span class="line">        doing.find();</span><br><span class="line">        doing.update();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maven </tag>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux服务器和tomcat部署</title>
      <link href="/2019/09/21/linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%92%8Ctomcat%E9%83%A8%E7%BD%B2/"/>
      <url>/2019/09/21/linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%92%8Ctomcat%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<!-- build time:Wed Oct 09 2019 13:41:44 GMT+0800 (CST) --><h2 id="Centos-解决Tomcat-Manager-App无法访问问题"><a href="#Centos-解决Tomcat-Manager-App无法访问问题" class="headerlink" title="Centos 解决Tomcat Manager App无法访问问题"></a>Centos 解决Tomcat Manager App无法访问问题</h2><p>以前在使用Windows中安装Tomcat时，只需要配置Tomcat目录下/conf/tomcat-user.xml文件就可以，在文件中增加以下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;role rolename=&quot;admin&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;admin-gui&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;admin-script&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;manager&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;manager-gui&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;manager-script&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;manager-jmx&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;manager-status&quot;/&gt;</span><br><span class="line">&lt;user username=&quot;admin&quot; password=&quot;admin&quot; roles=&quot;admin,admin-gui,admin-script,manager,manager-gui,manager-script,manager-jmx,manager-status&quot;/&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><p>添加以上内容，并重启Tomcat之后，就可以，但在Centos中添加了内容，重启之后，发现还是无法访问，还是展示错误提示，又经过N久，查了很多资料，发现还有一项需要配置的。</p><p>就是在Tomcat目录下/conf/Catalina/localhost/下创建 manager.xml，并在文件中添加以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Context privileged=&quot;true&quot; antiResourceLocking=&quot;false&quot;   </span><br><span class="line">         docBase=&quot;$&#123;catalina.home&#125;/webapps/manager&quot;&gt;  </span><br><span class="line">    &lt;Valve className=&quot;org.apache.catalina.valves.RemoteAddrValve&quot; allow=&quot;^.*$&quot; /&gt;  </span><br><span class="line">&lt;/Context&gt;</span><br></pre></td></tr></table></figure><p>完成以上内容之后， 并重启Tomcat之后生，发现Manager App就可以正确访问，展示正常的内容了。</p><h2 id="将maven项目部署到Linux服务器"><a href="#将maven项目部署到Linux服务器" class="headerlink" title="将maven项目部署到Linux服务器"></a>将maven项目部署到Linux服务器</h2><ul><li>在pom.xml配置tomcat插件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置Tomcat插件 --&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">port</span>&gt;</span>80<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://服务器地址:端口号/manager/text<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">username</span>&gt;</span>conf/tomcat-users.xml中的账号<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">password</span>&gt;</span>服务器tomcat密码<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">update</span>&gt;</span>true<span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>maven命令<ul><li>mvn tomcat7:deploy 这是第一次上传的时候</li><li>mvn tomcat7:redeploy 以后需要修改项目的时候,使用这个.</li></ul></li></ul><h2 id="linux后台任务"><a href="#linux后台任务" class="headerlink" title="linux后台任务"></a>linux后台任务</h2><p>fg、bg、jobs、&amp;、ctrl + z都是跟系统任务有关的，虽然现在基本上不怎么需要用到这些命令，但学会了也是很实用的<br>一。&amp; 最经常被用到<br>这个用在一个命令的最后，可以把这个命令放到后台执行<br>二。ctrl + z<br>可以将一个正在前台执行的命令放到后台，并且暂停<br>三。jobs<br>查看当前有多少在后台运行的命令<br>四。fg<br>将后台中的命令调至前台继续运行<br>如果后台中有多个命令，可以用 fg %jobnumber将选中的命令调出，%jobnumber是通过jobs命令查到的后台正在执行的命令的序号(不是pid)<br>五。bg<br>将一个在后台暂停的命令，变成继续执行<br>如果后台中有多个命令，可以用bg %jobnumber将选中的命令调出，%jobnumber是通过jobs命令查到的后台正在执行的命令的序号(不是pid)</p><p><strong>#</strong>Linux下使用Shell命令控制任务Jobs执行</p><p>下列命令可以用来操纵进程任务：<br>ps 列出系统中正在运行的进程；<br>kill 发送信号给一个或多个进程（经常用来杀死一个进程）；<br>jobs 列出当前shell环境中已启动的任务状态，若未指定jobsid，则显示所有活动的任务状态信息；如果报告了一个任务的终止(即任务的状态被标记为Terminated)，shell 从当前的shell环境已知的列表中删除任务的进程标识；<br>bg 将进程搬到后台运行（Background）；<br>fg 将进程搬到前台运行（Foreground）；<br>将job转移到后台运行<br>如果你经常在X图形下工作，你可能有这样的经历：通过终端命令运行一个GUI程序，GUI界面出来了，但是你的终端还停留在原地，你不能在shell中继续执行其他命令了，除非将GUI程序关掉。<br>为了使程序执行后终端还能继续接受命令，你可以将进程移到后台运行，使用如下命令运行程序： #假设要运行xmms<br>$xmms &amp;<br>这样打开xmms后，终端的提示又回来了。现在xmms在后台运行着呢；但万一你运行程序时忘记使用“&amp;”了，又不想重新执行；你可以先使用ctrl+z挂起程序，然后敲入bg命令，这样程序就在后台继续运行了。<br>概念：当前任务<br>如果后台的任务号有2个，[1],[2]；如果当第一个后台任务顺利执行完毕，第二个后台任务还在执行中时，当前任务便会自动变成后台任务号码“[2]”的后台任务。所以可以得出一点，即当前任务是会变动的。当用户输入“fg”、“bg”和“stop”等命令时，如果不加任何引号，则所变动的均是当前任务。<br>察看jobs<br>使用jobs或ps命令可以察看正在执行的jobs。<br>jobs命令执行的结果，＋表示是一个当前的作业，减号表是是一个当前作业之后的一个作业，jobs -l选项可显示所有任务的PID,jobs的状态可以是running, stopped, Terminated,但是如果任务被终止了（kill），shell 从当前的shell环境已知的列表中删除任务的进程标识；也就是说，jobs命令显示的是当前shell环境中所起的后台正在运行或者被挂起的任务信息；<br>进程的挂起<br>后台进程的挂起：<br>在solaris中通过stop命令执行，通过jobs命令查看job号(假设为num)，然后执行stop %num；<br>在redhat中，不存在stop命令，可通过执行命令kill -stop PID，将进程挂起；<br>当要重新执行当前被挂起的任务时，通过bg %num 即可将挂起的job的状态由stopped改为running，仍在后台执行；当需要改为在前台执行时，执行命令fg %num即可；<br>前台进程的挂起：<br>ctrl+Z;<br>进程的终止<br>后台进程的终止：<br>方法一：<br>通过jobs命令查看job号（假设为num），然后执行kill %num<br>方法二：<br>通过ps命令查看job的进程号（PID，假设为pid），然后执行kill pid<br>前台进程的终止：<br>ctrl+c<br>kill的其他作用<br>kill除了可以终止进程，还能给进程发送其它信号，使用kill -l 可以察看kill支持的信号。<br>SIGTERM是不带参数时kill发送的信号，意思是要进程终止运行，但执行与否还得看进程是否支持。如果进程还没有终止，可以使用kill -SIGKILL pid，这是由内核来终止进程，进程不能监听这个信号。</p><p>===================</p><p>Unix/Linux下一般想让某个程序在后台运行，很多都是使用 &amp; 在程序结尾来让程序自动运行。比如我们要运行mysql在后台：</p><p>/usr/local/mysql/bin/mysqld_safe –user=mysql &amp;</p><p>但是我们很多程序并不象mysqld一样可以做成守护进程，可能我们的程序只是普通程序而已，一般这种程序即使使用 &amp; 结尾，如果终端关闭，那么程序也会被关闭。为了能够后台运行，我们需要使用nohup这个命令，比如我们有个start.sh需要在后台运行，并且希望在后台能够一直运行，那么就使用nohup：</p><figure class="highlight plain"><figcaption><span>/root/start.sh &```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">在shell中回车后提示：</span><br><span class="line"></span><br><span class="line">[~]$ appending output to nohup.out</span><br><span class="line"></span><br><span class="line">原程序的的标准输出被自动改向到当前目录下的nohup.out文件，起到了log的作用。</span><br><span class="line"></span><br><span class="line">但是有时候在这一步会有问题，当把终端关闭后，进程会自动被关闭，察看nohup.out可以看到在关闭终端瞬间服务自动关闭。</span><br><span class="line"></span><br><span class="line">咨询红旗Linux工程师后，他也不得其解，在我的终端上执行后，他启动的进程竟然在关闭终端后依然运行。</span><br><span class="line"></span><br><span class="line">在第二遍给我演示时，我才发现我和他操作终端时的一个细节不同：他是在当shell中提示了nohup成功后还需要按终端上键盘任意键退回到shell输入命令窗口，然后通过在shell中输入exit来退出终端；而我是每次在nohup执行成功后直接点关闭程序按钮关闭终端.。所以这时候会断掉该命令所对应的session，导致nohup对应的进程被通知需要一起shutdown。</span><br><span class="line"></span><br><span class="line">这个细节有人和我一样没注意到，所以在这儿记录一下了。</span><br><span class="line"></span><br><span class="line">附：nohup命令参考</span><br><span class="line"></span><br><span class="line">nohup 命令</span><br><span class="line"></span><br><span class="line">　　用途：不挂断地运行命令。</span><br><span class="line"></span><br><span class="line">　　语法：nohup Command [ Arg ... ] [　&amp; ]</span><br><span class="line"></span><br><span class="line">　　描述：nohup 命令运行由 Command 参数和任何相关的 Arg 参数指定的命令，忽略所有挂断（SIGHUP）信号。在注销后使用 nohup 命令运行后台中的程序。要运行后台中的 nohup 命令，添加 &amp; （ 表示&quot;and&quot;的符号）到命令的尾部。</span><br><span class="line"></span><br><span class="line">　　无论是否将 nohup 命令的输出重定向到终端，输出都将附加到当前目录的 nohup.out 文件中。如果当前目录的 nohup.out 文件不可写，输出重定向到 $HOME/nohup.out 文件中。如果没有文件能创建或打开以用于追加，那么 Command 参数指定的命令不可调用。如果标准错误是一个终端，那么把指定的命令写给标准错误的所有输出作为标准输出重定向到相同的文件描述符。</span><br><span class="line"></span><br><span class="line">　　退出状态：该命令返回下列出口值：</span><br><span class="line"></span><br><span class="line">　　126 可以查找但不能调用 Command 参数指定的命令。</span><br><span class="line"></span><br><span class="line">　　127 nohup 命令发生错误或不能查找由 Command 参数指定的命令。</span><br><span class="line"></span><br><span class="line">　　否则，nohup 命令的退出状态是 Command 参数指定命令的退出状态。</span><br><span class="line"></span><br><span class="line">　　nohup命令及其输出文件</span><br><span class="line"></span><br><span class="line">　　nohup命令：如果你正在运行一个进程，而且你觉得在退出帐户时该进程还不会结束，那么可以使用nohup命令。该命令可以在你退出帐户/关闭终端之后继续运行相应的进程。nohup就是不挂起的意思( n ohang up)。</span><br><span class="line"></span><br><span class="line">　　该命令的一般形式为：nohup command &amp;</span><br><span class="line"></span><br><span class="line">　　使用nohup命令提交作业</span><br><span class="line"></span><br><span class="line">　　如果使用nohup命令提交作业，那么在缺省情况下该作业的所有输出都被重定向到一个名为nohup.out的文件中，除非另外指定了输出文件：</span><br><span class="line"></span><br><span class="line">　　nohup command &gt; myout.file 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line">　　在上面的例子中，输出被重定向到myout.file文件中。</span><br><span class="line"></span><br><span class="line">　　使用 jobs 查看任务。</span><br><span class="line"></span><br><span class="line">　　使用 fg %n　关闭。</span><br><span class="line"></span><br><span class="line">　　另外有两个常用的ftp工具ncftpget和ncftpput，可以实现后台的ftp上传和下载，这样就可以利用这些命令在后台上传和下载文件了。</span><br><span class="line"></span><br><span class="line">简单而有用的nohup命令在UNIX/LINUX中，普通进程用&amp;符号放到后台运行，如果启动该程序的控制台logout，则该进程随即终止。</span><br><span class="line"></span><br><span class="line">　　要实现守护进程，一种方法是按守护进程的规则去编程（本站有文章介绍过），比较麻烦；另一种方法是仍然用普通方法编程，然后用nohup命令启动程序：</span><br><span class="line"></span><br><span class="line">　　nohup＜程序名＞&amp;</span><br><span class="line"></span><br><span class="line">　　则控制台logout后，进程仍然继续运行，起到守护进程的作用（虽然它不是严格意义上的守护进程）。</span><br><span class="line"></span><br><span class="line">　　使用nohup命令后，原程序的的标准输出被自动改向到当前目录下的nohup.out文件，起到了log的作用，实现了完整的守护进程功能。</span><br><span class="line"></span><br><span class="line">　　ygwu @ 2005年04月18日 上午10:03</span><br><span class="line"></span><br><span class="line">　　For example：</span><br><span class="line"></span><br><span class="line">　　如何远程启动WebLogic服务?</span><br><span class="line"></span><br><span class="line">　　用telnet远程控制服务器，远程启动WEBLOGIC服务，启动后关闭telnet，WebLogic服务也跟着停止，这是因为使用telnet启动的进程会随着telnet进程的关闭而关闭。所以我们可以使用一些UNIX下的命令来做到不关闭。</span><br><span class="line"></span><br><span class="line">　　使用如下命令：</span><br><span class="line"></span><br><span class="line">　　```nohup startWeblogic.sh&amp;</span><br></pre></td></tr></table></figure><p>如果想要监控标准输出可以使用：</p><p></p><figure class="highlight plain"><figcaption><span>-f nohup.out```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">　　当在后台运行了程序的时候，可以用jobs命令来查看后台作业的状态。在有多个后台程序时，要使用来参数的fg命令将不同序号的后台作业切换到前台上运行。</span><br><span class="line"></span><br><span class="line">　　当用户启动一个进程的时候，这个进程是运行在前台，使用与相应控制终端相联系的标准输入、输出进行输入和输出。即使将进程的输入输出重定向，并将进程放在后台执行，进程仍然和当前终端设备有关系。正因为如此，在当前的登录会话结束时，控制终端设备将和登录进程相脱离，那么系统就向所有与这个终端相联系的进程发送SIGHUP的信号，通知进程线路已经挂起了，如果程序没有接管这个信号的处理，那么缺省的反应是进程结束。因此普通的程序并不能真正脱离登录会话而运行进程，为了使得在系统登录后还可以正常执行，只有使用命令nohup来启动相应程序。</span><br><span class="line"></span><br><span class="line">　　使用命令nohup当然可以启动这样的程序，但nohup启动的程序在进程执行完毕就退出，而常见的一些服务进程通常永久的运行在后台，不向屏幕输出结果。在Unix中这些永久的后台进程称为守护进程（daemon）。守护进程通常从系统启动时自动开始执行，系统关闭时才停止。</span><br><span class="line"></span><br><span class="line">　　在守护进程中，最重要的一个是超级守护进程inetd，这个进程接管了大部分网络服务，但并不是对每个服务都自己进行处理，而是依据连接请求，启动不同的服务程序与客户机打交道。inetd支持网络服务种类在它的设置文件/etc/inet.conf中定义。inet.conf文件中的每一行就对应一个端口地址，当inetd接受到连接这个端口的连接请求时，就启动相应的进程进行处理。使用inetd的好处是系统不必启动很多守护进程，从而节约了系统资源，然而使用inetd启动守护进程相应反应会迟缓一些，不适合用于被密集访问的服务进程</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## centos的防火墙的开启与关闭</span><br><span class="line"></span><br><span class="line">开启端口</span><br><span class="line"></span><br><span class="line">```[root@centos7 ~]# firewall-cmd --zone=public --add-port=80/tcp --permanent</span><br></pre></td></tr></table></figure><p></p><p>查询端口号80 是否开启：</p><figure class="highlight plain"><figcaption><span>~]# firewall-cmd --query-port</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">重启防火墙：</span><br><span class="line"></span><br><span class="line">```[root@centos7 ~]# firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>查询有哪些端口是开启的:</p><p><code>[root@centos7 ~]# firewall-cmd --list-port</code></p><p>命令含义：</p><p>–zone #作用域<br>–add-port=80/tcp #添加端口，格式为：端口/通讯协议<br>–permanent #永久生效，没有此参数重启后失效</p><p>关闭firewall：</p><p>systemctl stop firewalld.service #停止firewall</p><p>systemctl disable firewalld.service #禁止firewall开机启动</p><!-- rebuild by neat -->]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图解MySQL 内连接、外连接、左连接、右连接、全连接……太多了</title>
      <link href="/2019/09/15/%E5%9B%BE%E8%A7%A3MySQL-%E5%86%85%E8%BF%9E%E6%8E%A5%E3%80%81%E5%A4%96%E8%BF%9E%E6%8E%A5%E3%80%81%E5%B7%A6%E8%BF%9E%E6%8E%A5%E3%80%81%E5%8F%B3%E8%BF%9E%E6%8E%A5%E3%80%81%E5%85%A8%E8%BF%9E%E6%8E%A5%E2%80%A6%E2%80%A6%E5%A4%AA%E5%A4%9A%E4%BA%86/"/>
      <url>/2019/09/15/%E5%9B%BE%E8%A7%A3MySQL-%E5%86%85%E8%BF%9E%E6%8E%A5%E3%80%81%E5%A4%96%E8%BF%9E%E6%8E%A5%E3%80%81%E5%B7%A6%E8%BF%9E%E6%8E%A5%E3%80%81%E5%8F%B3%E8%BF%9E%E6%8E%A5%E3%80%81%E5%85%A8%E8%BF%9E%E6%8E%A5%E2%80%A6%E2%80%A6%E5%A4%AA%E5%A4%9A%E4%BA%86/</url>
      
        <content type="html"><![CDATA[<!-- build time:Wed Oct 09 2019 13:41:44 GMT+0800 (CST) --><h2 id="左内连接"><a href="#左内连接" class="headerlink" title="左内连接"></a>左内连接</h2><h2 id="左外连接"><a href="#左外连接" class="headerlink" title="左外连接"></a>左外连接</h2><p><a href="https://blog.csdn.net/plg17/article/details/78758593" target="_blank" rel="noopener">点击跳转到CSDN</a></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装Docker</title>
      <link href="/2019/09/14/%E5%AE%89%E8%A3%85Docker/"/>
      <url>/2019/09/14/%E5%AE%89%E8%A3%85Docker/</url>
      
        <content type="html"><![CDATA[<!-- build time:Wed Oct 09 2019 13:41:44 GMT+0800 (CST) --><h1 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h1><p>​ 安装curl</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install curl libcurl3 libcurl3-dev</span><br></pre></td></tr></table></figure><p>​ 获取docker并安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line"></span><br><span class="line">sudo sh get-docker.sh</span><br></pre></td></tr></table></figure><a id="more"></a><p>​ 安装完成查看docker版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker -v</span><br></pre></td></tr></table></figure><p>​ 确认安装成功后执行这条命令，重启后就可以不用sudo直接使用docker命令了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -aG docker  你的用户名</span><br></pre></td></tr></table></figure><p>​ 更换docker镜像源（阿里云）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><p>​ 将以下配置信息copy到编辑器中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;registry-mirrors&quot;: [</span><br><span class="line">&quot;https://kfwkfulq.mirror.aliyuncs.com&quot;,</span><br><span class="line">&quot;https://2lqq34jg.mirror.aliyuncs.com&quot;,</span><br><span class="line">&quot;https://pee6w651.mirror.aliyuncs.com&quot;,</span><br><span class="line">&quot;https://registry.docker-cn.com&quot;,</span><br><span class="line">&quot;http://hub-mirror.c.163.com&quot;</span><br><span class="line">],</span><br><span class="line">&quot;dns&quot;: [&quot;8.8.8.8&quot;,&quot;8.8.4.4&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>by Loki.C</p><h1 id="修改镜像的默认下载位置"><a href="#修改镜像的默认下载位置" class="headerlink" title="修改镜像的默认下载位置"></a>修改镜像的默认下载位置</h1><p>默认情况下docker的存放位置为: <code>/var/lib/docker</code>，一般根下分区我们不会给太大。所以这个时候我们要考虑挂载大分区到 <code>/var/lib/docker</code>，具体的操作步骤如下：</p><ol><li>停掉 Docker</li><li>拷贝 Docker 文件到目录 <code>cp -r /var/lib/docker/* /mnt/</code></li><li>删除 Docker 原始目录 <code>rm -rf /var/lib/docker</code></li><li>挂载分区为 Docker 目录：<code>mount /dev/vdb1 /var/lib/docker</code></li><li>启动 Docker，使用 <code>docker ps</code> 和 <code>docker images</code> 确定迁移成功</li></ol><!-- rebuild by neat -->]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis的动态SQL</title>
      <link href="/2019/09/11/MyBatis%E7%9A%84%E5%8A%A8%E6%80%81SQL/"/>
      <url>/2019/09/11/MyBatis%E7%9A%84%E5%8A%A8%E6%80%81SQL/</url>
      
        <content type="html"><![CDATA[<!-- build time:Wed Oct 09 2019 13:41:44 GMT+0800 (CST) --><h1 id="动态SQL"><a href="#动态SQL" class="headerlink" title="动态SQL"></a>动态SQL</h1><h2 id="lt-if-gt-元素"><a href="#lt-if-gt-元素" class="headerlink" title="&lt; if &gt;元素"></a>&lt; if &gt;元素</h2><ul><li><blockquote><p>通过对姓名的模糊搜索，使用if判断姓名是否为空，如果为空，则是查询所有用户</p></blockquote></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    使用if元素根据条件动态查询用户信息--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUserByIf"</span> <span class="attr">resultType</span>=<span class="string">"cn.test.beans.MyUser"</span> <span class="attr">parameterType</span>=<span class="string">"cn.test.beans.MyUser"</span>&gt;</span></span><br><span class="line">        select * from user where 1 = 1</span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"uname != null and uname != ''"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 这里是根据姓名模糊查找 --&gt;</span></span><br><span class="line">            and uname like concat('%', #&#123;uname&#125;, '%')</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- concat()函数， 将多个字符串连接成一个字符串 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="lt-choose-gt-、-lt-when-gt-、-lt-otherwise-gt-元素"><a href="#lt-choose-gt-、-lt-when-gt-、-lt-otherwise-gt-元素" class="headerlink" title="&lt; choose &gt;、&lt; when &gt;、&lt; otherwise&gt;元素"></a>&lt; choose &gt;、&lt; when &gt;、&lt; otherwise&gt;元素</h2><blockquote><p>有的时候不想用到所有的条件语句，而只想从中择取一二，针对这种情况，MyBatis提供了&lt;choose&gt;元素，它有点像java中的switch语句。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    使用choose、when、otherwise元素根据条件动态查询用户信息--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUserByChoose"</span> <span class="attr">resultType</span>=<span class="string">"cn.test.beans.MyUser"</span> <span class="attr">parameterType</span>=<span class="string">"cn.test.beans.MyUser"</span>&gt;</span></span><br><span class="line">        select * from user where 1 = 1</span><br><span class="line">        <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"uname != null and uname != ''"</span>&gt;</span></span><br><span class="line">                and uname like concat('%', #&#123;uname&#125;, '%')</span><br><span class="line">            <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"usex != null and usex != ''"</span>&gt;</span></span><br><span class="line">                and usex = #&#123;usex&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">                and uid &gt; 10</span><br><span class="line">            <span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/09/11/nwCCc9.png" alt></p><h2 id="lt-trim-gt-、-lt-where-gt-、-lt-set-gt-元素"><a href="#lt-trim-gt-、-lt-where-gt-、-lt-set-gt-元素" class="headerlink" title="&lt; trim&gt;、&lt; where&gt;、&lt; set&gt;元素"></a>&lt; trim&gt;、&lt; where&gt;、&lt; set&gt;元素</h2><ul><li>&lt; trim&gt;元素<ul><li>&lt; trim&gt;元素的主要功能是可以在自己包含的内容前加上某些前缀，也可以是在其后加上某些后缀，与之对应的属性是prefix和suffix; 可以把包含内容的首部某些内容覆盖，即忽略，也可以把尾部的某些内容覆盖，对应的属性是prefixOverrides和suffixOverrides。正因为&lt;trim&gt;元素有这样的功能，所以也可以非常简单地利用&lt; trim&gt;来代替&lt; where&gt;元素的个功能。</li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    使用trim元素根据条件动态查询用户信息--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUserByTrim"</span> <span class="attr">resultType</span>=<span class="string">"cn.test.beans.MyUser"</span> <span class="attr">parameterType</span>=<span class="string">"cn.test.beans.MyUser"</span>&gt;</span></span><br><span class="line">        select * from user</span><br><span class="line">        <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">"where"</span> <span class="attr">prefixOverrides</span>=<span class="string">"and | or"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"uname != null and uname != ''"</span>&gt;</span></span><br><span class="line">                and uname like concat('%', #&#123;uname&#125;, '%')</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"usex != null and usex != ''"</span>&gt;</span></span><br><span class="line">                and usex = #&#123;usex&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/09/11/nwPOiT.png" alt></p><ul><li>&lt; where&gt;元素<ul><li>&lt; where&gt;元素的作用是会在写入&lt; where&gt;元素的地方输出一个where语句，另一个好处是不需要考虑&lt; where&gt;元素里面的条件输出是什么样子的，MyBatis将智能处理。如果所有的条件都不满足，那么MyBatis就会查出所有的记录，如果输出是以and开头的，MyBatis会把地一个and忽略，当然如果是以or开头的，MyBatis也会把它忽略; 此外，在&lt; where&gt;元素中不需要考虑空格的问题，MyBatis将智能加上。</li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    使用where元素根据条件动态查询用户信息--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUserByWhere"</span> <span class="attr">resultType</span>=<span class="string">"cn.test.beans.MyUser"</span> <span class="attr">parameterType</span>=<span class="string">"cn.test.beans.MyUser"</span>&gt;</span></span><br><span class="line">        select * from user</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"uname != null and uname != ''"</span>&gt;</span></span><br><span class="line">                and uname like concat('%', #&#123;uname&#125;, '%')</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"usex != null and usex != ''"</span>&gt;</span></span><br><span class="line">                and usex = #&#123;usex&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>运行结果和sql语句同上</strong></p><ul><li>&lt; set&gt;元素<ul><li>在动态update语句中可以使用&lt; set&gt;元素动态更新序列。</li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    使用set元素动态修改一个用户--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateUserBySet"</span> <span class="attr">parameterType</span>=<span class="string">"cn.test.beans.MyUser"</span>&gt;</span></span><br><span class="line">        update user</span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"uname != null"</span>&gt;</span></span><br><span class="line">                uname = #&#123;uname&#125;, <span class="comment">&lt;!--这里的逗号不能少--&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"usex != null"</span>&gt;</span></span><br><span class="line">                usex = #&#123;usex&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">        where uid = #&#123;uid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/09/11/nwEjKg.png" alt></p><ul><li>&lt; foreach&gt;元素<ul><li>&lt; foreach&gt;元素主要用 在构建in条件中，它可以在SQL语句中迭代一个集合。&lt; foreach&gt;元素的属性有item、index、collection、open、separator、close、。item表示集合中每个元素进行迭代时的别名，index指定一个名字，用于表示在迭代过程中每次迭代到的位置，open表示该语句以什么开始，separator表示在每次进行迭代之间以什么符号作为间隔符，close表示以什么结束。在使用&lt; foreach&gt;元素时，最关键、最容易出错的是collection属性，该属性是必选的，但在不同情况下该属性的值是不一样的，主要有一下三种情况：<ul><li>如果传入的是单参数且参数类型是一个List，collection属性值为list</li><li>如果传入的是单参数且参数类型是一个array数组，collection属性值为array</li><li>如果传入的参数是多个，需要把它们封装成一个Map，当然单参数也可以封装成Map。Map的key是参数名， collection属性值是传入的List或Array对象在自己封装的Map中的key</li></ul></li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    使用foreach元素查询用户信息--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUserByForeach"</span> <span class="attr">resultType</span>=<span class="string">"cn.test.beans.MyUser"</span> <span class="attr">parameterType</span>=<span class="string">"List"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        select * from user where uid in</span><br><span class="line">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"list"</span> <span class="attr">item</span>=<span class="string">"item"</span> <span class="attr">index</span>=<span class="string">"index"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">separator</span>=<span class="string">","</span> <span class="attr">close</span>=<span class="string">")"</span>&gt;</span></span><br><span class="line">            #&#123;item&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/09/11/nweOxK.png" alt></p><p><img src="https://s2.ax1x.com/2019/09/11/nwmUo9.png" alt></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用foreach元素查询用户信息</span></span><br><span class="line">List&lt;Integer&gt; listId = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">listId.add(<span class="number">34</span>);</span><br><span class="line">listId.add(<span class="number">37</span>);</span><br><span class="line">listId.add(<span class="number">39</span>);</span><br><span class="line">List&lt;MyUser&gt; listByForeach = dao.selectUserByForeach(listId);</span><br><span class="line">System.out.println(<span class="string">"foreach元素==============="</span>);</span><br><span class="line"><span class="keyword">for</span> (MyUser myUser : listByForeach)&#123;</span><br><span class="line">    System.out.println(myUser);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="lt-bind-gt-元素"><a href="#lt-bind-gt-元素" class="headerlink" title="&lt; bind&gt;元素"></a>&lt; bind&gt;元素</h2><ul><li>在进行模糊查询时，如果使用”${}”拼接字符串，则无法防止SQL注入问题; 如果使用字符串拼接函数或连接符号，但不同数据库的拼接函数或连接符号不同，例如Mysql的concat()函数、Oracle的连接符号“||”, 这样SQL映射文件就需要根据不同的数据库提供不同的实现，显然比较麻烦，且不利于代码的移植。幸运的是，MyBatis提供了&lt; bind&gt;元素来解决这一问题。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    使用bind元素进行模糊查询--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUserByBind"</span> <span class="attr">resultType</span>=<span class="string">"cn.test.beans.MyUser"</span> <span class="attr">parameterType</span>=<span class="string">"cn.test.beans.MyUser"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--bind中的uname是cn.test.beans.MyUser的属性名 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bind</span> <span class="attr">name</span>=<span class="string">"paran_uname"</span> <span class="attr">value</span>=<span class="string">"'%' + uname + '%'"</span>/&gt;</span></span><br><span class="line">        select * from user where uname like #&#123;paran_uname&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/09/11/nwnNX8.png" alt></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git笔记</title>
      <link href="/2019/09/11/Git%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/09/11/Git%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<!-- build time:Wed Oct 09 2019 13:41:44 GMT+0800 (CST) --><h1 id="Git笔记"><a href="#Git笔记" class="headerlink" title="Git笔记"></a>Git笔记</h1><p><strong>工作区（写代码）—&gt; git add 暂存区（临时存储） —&gt; git commit 本地库（历史版本）</strong></p><h2 id="初始化-git-init"><a href="#初始化-git-init" class="headerlink" title="初始化 git init"></a>初始化 git init</h2><ul><li>会生成 .git隐藏目录<ul><li><img src="https://s2.ax1x.com/2019/09/10/naSAmT.png" alt></li></ul></li></ul><h2 id="形式-设置签名"><a href="#形式-设置签名" class="headerlink" title="形式 (设置签名)"></a>形式 (设置签名)</h2><ol><li><p>用户名：</p></li><li><p>Email地址：</p></li><li><p>作用：</p><a id="more"></a><ol><li>区分不同开发人员的身份</li></ol></li><li><p>辨析：</p><ol><li>这里设置的签名和登录远程库（代码托管中心）的帐号、密码 没有任何关系</li></ol></li><li><p>命令：</p><ol><li><p>项目级别/仓库级别：</p><ol><li>仅在当前本地库范围内有效<ol><li>git config user.name xxx</li><li>git config user.email <a href="mailto:xxx@xx.com" target="_blank" rel="noopener">xxx@xx.com</a></li></ol></li></ol></li><li><p>系统用户级别：</p><ol><li><p>登录当前操作系统的用户范围</p><ol><li><p>git config –global user.name xxx</p></li><li><p>git config –global user.email <a href="mailto:xxx@xx.com" target="_blank" rel="noopener">xxx@xx.com</a></p></li><li><p><img src="https://s2.ax1x.com/2019/09/10/na98Fe.png" alt></p></li></ol></li></ol></li></ol></li></ol><ol start="3"><li><p>优先级：</p><ol><li>就近原则：项目级别优先于系统级别，二者都有时采用项目级别的签名</li><li>如果只有系统用户级别的签名，就以系统用户级别的签名为准<ol><li>二者都没有 是不允许的</li></ol></li></ol></li><li><p>设置之后的值就会显示 在config文件中. /.git/config</p><ol><li><img src="https://s2.ax1x.com/2019/09/10/napqZ8.png" alt></li></ol></li></ol><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><ul><li>git status 状态查看操作<ul><li>查看工作区、暂存区状态</li></ul></li></ul><blockquote><p>在vim 编辑器中 : set nu 显示行号。 如果提交的时候 用的nano编辑器，可以在config文件中，在core中后面添加 editor=vim 即可使用vim编辑器了。</p></blockquote><ul><li><p>添加操作</p><ul><li>git add filename</li><li>将工作去的 “新建/修改” 添加到暂存区</li></ul></li><li><p>git commit 提交到仓库</p><ul><li><p>将暂存区的内容提交到本地库</p></li><li><p><img src="https://s2.ax1x.com/2019/09/10/nakmbq.png" alt></p></li></ul></li></ul><ul><li>git commit -m “需要附加的信息” 文件名</li></ul><h2 id="怎么实现版本的前进与后退"><a href="#怎么实现版本的前进与后退" class="headerlink" title="怎么实现版本的前进与后退"></a>怎么实现版本的前进与后退</h2><blockquote><p>*<em>git log *</em>查看历史版本</p></blockquote><ul><li>多屏显示控制方式：<ul><li>空格向下翻页</li><li>b向上翻页</li><li>q退出</li></ul></li></ul><p><img src="https://s2.ax1x.com/2019/09/10/naVZKH.png" alt></p><ul><li>git log –pretty=oneline</li><li>git log –oneline<ul><li>只显示当前使用版本的 以后的旧版本</li></ul></li><li>git reflog</li></ul><h2 id="前进后退"><a href="#前进后退" class="headerlink" title="前进后退"></a>前进后退</h2><ul><li>HEAD - &gt; 的移动</li><li>基于索引值的操作<ul><li>git reset –hard hash索引值<ul><li><img src="https://s2.ax1x.com/2019/09/10/naeEBd.png" alt></li></ul></li></ul></li><li>使用^符号进行操作（只能后退）<ul><li>git reset –hard HEAD^ （回退一个版本）</li><li>git reset –hard HEAD^^^ （回退三个版本）</li></ul></li><li>使用~符号进行操作 （也是只能后退的）<ul><li>git reset –hard HEAD~3 （回退三个版本）</li><li>~n 就是后退n步</li></ul></li></ul><hr><h2 id="reset命令的三个参数对比"><a href="#reset命令的三个参数对比" class="headerlink" title="reset命令的三个参数对比"></a>reset命令的三个参数对比</h2><ul><li>–soft参数<ul><li>仅仅在本地库移动HEAD指针</li></ul></li><li>–mixed参数<ul><li>在本地库移动HEAD指针</li><li>重置暂存区</li></ul></li><li>–hard参数<ul><li>在本地库移动HEAD指针</li><li>重置暂存区</li><li>重置工作区</li></ul></li></ul><h2 id="删除文件找回"><a href="#删除文件找回" class="headerlink" title="删除文件找回"></a>删除文件找回</h2><ul><li>前提： 删除前，文件存在时的状态提交到了本地库</li><li>操作：git reset –hard 指针位置<ul><li>删除操作已经提交到本地库： 指针位置指向历史记录</li><li>删除操作未提交到本地库： 指针位置使用HEAD</li></ul></li></ul><h2 id="比较文件差异"><a href="#比较文件差异" class="headerlink" title="比较文件差异"></a>比较文件差异</h2><ul><li>git diff [文件名]<ul><li>将工作区中的文件和暂存区进行比较</li></ul></li><li>git diff [本地库中历史版本]..[文件名]<ul><li>将工作区中的文件和本地库历史记录比较</li></ul></li><li>不带文件名比较多个文件</li></ul><h1 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h1><ul><li>Master</li></ul><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis使用注解入门案例</title>
      <link href="/2019/09/06/Mybatis%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8B/"/>
      <url>/2019/09/06/Mybatis%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<!-- build time:Wed Oct 09 2019 13:41:44 GMT+0800 (CST) --><hr><h1 id="创建Maven工程"><a href="#创建Maven工程" class="headerlink" title="创建Maven工程"></a>创建Maven工程</h1><ul><li><p>数据库另一个文章的、<a href="http://gitsilence.gitee.io:4000/2019/09/01/Untitled/#%E9%85%8D%E7%BD%AEpow-xml">点击进入</a></p></li><li><p>目录结构如图所示<img src="https://s2.ax1x.com/2019/09/06/nMFqpD.png" alt></p><ul><li>在resources中创建包的时候，不要直接创建com.config.xml, 正确方式应该是：　com/config/xml</li></ul></li><li><p>pow.xml的配置、　<a href="http://gitsilence.gitee.io:4000/2019/09/01/Untitled/#%E9%85%8D%E7%BD%AEpow-xml">点击进入</a></p></li><li><p><strong>使用注解方式，不需要创建Mapper.xml, 忘了删除了…</strong></p><a id="more"></a></li><li><p>实体类User.java</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lacknb.beans;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String uname;</span><br><span class="line">    <span class="keyword">private</span> String usex;</span><br><span class="line">    <span class="keyword">private</span> Integer uid;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> uname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUname</span><span class="params">(String uname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.uname = uname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> usex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsex</span><span class="params">(String usex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.usex = usex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getUid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> uid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUid</span><span class="params">(Integer uid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.uid = uid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"User&#123;"</span> +</span><br><span class="line">                <span class="string">"uname='"</span> + uname + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", usex='"</span> + usex + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", uid="</span> + uid +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>创建接口IUserDao.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lacknb.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.lacknb.beans.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IUserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"select * from user"</span>)</span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>创建测试类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lacknb.mybatis02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.lacknb.beans.User;</span><br><span class="line"><span class="keyword">import</span> cn.lacknb.dao.IUserDao;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取配置文件</span></span><br><span class="line">        InputStream config = Resources.getResourceAsStream(<span class="string">"com/config/xml/mybatis-config.xml"</span>);</span><br><span class="line">        <span class="comment">// 创建SqlSessionFactory</span></span><br><span class="line">        SqlSessionFactoryBuilder builder = <span class="keyword">new</span> SqlSessionFactoryBuilder();</span><br><span class="line">        SqlSessionFactory factory = builder.build(config);</span><br><span class="line">        <span class="comment">// 使用工厂类生产SqlSession对象</span></span><br><span class="line">        SqlSession session = factory.openSession();</span><br><span class="line">        <span class="comment">// 使用Sqlsession创建Dao接口的代理对象</span></span><br><span class="line">        IUserDao dao = session.getMapper(IUserDao.class);</span><br><span class="line">        <span class="comment">// 使用代理对象执行方法</span></span><br><span class="line">        List&lt;User&gt; users = dao.findAll();</span><br><span class="line">        <span class="keyword">for</span> (User user: users)&#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">        session.close();</span><br><span class="line">        config.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>mybatis-config.xml文件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    配置环境--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--       配置mysql的环境， 和default保持一致--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--           配置事务的类型　ＪＤＢＣ  --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            配置数据源（连接池）--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/mybatis?characterEncoding=utf8"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        映射文件的位置--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;mapper resource="com/config/xml/Mapper.xml"/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        使用注解的方式--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">"cn.lacknb.dao.IUserDao"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>显示日志文件log4j.properties</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># global logging configuration</span><br><span class="line">log4j.rootLogger=ERROR, stdout</span><br><span class="line"># Mybatis logging configuration...</span><br><span class="line"># 将包com.mybatis下的日志等级设为DEBUG</span><br><span class="line">log4j.logger.com.mybatis=DEBUG</span><br><span class="line"># Console output ...</span><br><span class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</span><br><span class="line"></span><br><span class="line">log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MybatisUtils工具类</title>
      <link href="/2019/09/06/MybatisUtils%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
      <url>/2019/09/06/MybatisUtils%E5%B7%A5%E5%85%B7%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<!-- build time:Wed Oct 09 2019 13:41:44 GMT+0800 (CST) --><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><ul><li><blockquote><h2 id="SqlSession"><a href="#SqlSession" class="headerlink" title="SqlSession"></a>SqlSession</h2><p>每个线程都应该有它自己的 SqlSession 实例。<strong>SqlSession 的实例不是线程安全的</strong>，因此是不能被共享的，所以它的最佳的作用域是请求或方法作用域。<strong>绝对不能将 SqlSession 实例的引用放在一个类的静态域</strong>，甚至一个类的实例变量也不行。 也绝不能将 SqlSession 实例的引用放在任何类型的托管作用域中，比如 Servlet 框架中的 HttpSession。 如果你现在正在使用一种 Web 框架，要考虑 SqlSession 放在一个和 HTTP 请求对象相似的作用域中。 换句话说，每次收到的 HTTP 请求，就可以打开一个 SqlSession，返回一个响应，就关闭它。 这个关闭操作是很重要的，你应该把这个关闭操作放到 finally 块中以确保每次都能执行关闭。</p></blockquote></li></ul><p><a href="http://gitsilence.gitee.io/2019/09/05/Mybatis%E4%B8%80%E4%BA%9B%E7%BB%86%E8%8A%82%E8%AF%A6%E8%A7%A3-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/">Mybatis一些细节详解-持续更新</a></p><a id="more"></a><h2 id="MybatisUtils-java"><a href="#MybatisUtils-java" class="headerlink" title="MybatisUtils.java"></a>MybatisUtils.java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mybatis.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory factory;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream in = Resources.getResourceAsStream(<span class="string">"mybatis-config.xml"</span>);</span><br><span class="line">            factory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSession <span class="title">getSession</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> factory.openSession();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis一些细节详解[持续更新]</title>
      <link href="/2019/09/05/Mybatis%E4%B8%80%E4%BA%9B%E7%BB%86%E8%8A%82%E8%AF%A6%E8%A7%A3-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/"/>
      <url>/2019/09/05/Mybatis%E4%B8%80%E4%BA%9B%E7%BB%86%E8%8A%82%E8%AF%A6%E8%A7%A3-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/</url>
      
        <content type="html"><![CDATA[<!-- build time:Wed Oct 09 2019 13:41:44 GMT+0800 (CST) --><h2 id="原文来自mybatis官网，点此进入"><a href="#原文来自mybatis官网，点此进入" class="headerlink" title="原文来自mybatis官网，点此进入"></a><a href="http://www.mybatis.org/mybatis-3/zh/getting-started.html" target="_blank" rel="noopener">原文来自mybatis官网，点此进入</a></h2><h1 id="mybatis中的命名解析"><a href="#mybatis中的命名解析" class="headerlink" title="mybatis中的命名解析"></a>mybatis中的命名解析</h1><p><strong>为了减少输入量，MyBatis中，命名空间(Namespaces)的作用并不大，是可选的。但现在，随着命名空间越发重要，你必须指定命名空间</strong></p><p><strong><em>命名空间的作用有两个，一个是利用更长的完全限定名来将不同的语句隔离开来，同时也实现了你上面见到的接口绑定。就算你觉得暂时用不到接口绑定，你也应该遵循这里的规定，以防哪天你改变了注意。长远看来,只要将命名空间置于合适的Java包命名空间之中，你的代码会变得更加整洁，也有利于你更方便地使用Mybatis。</em></strong></p><a id="more"></a><p>*<em>命名解析: *</em>　为了减少输入量，MyBatis对所有的命名配置元素（包括语句，结果映射，缓存等）使用如下的命名解析规则。</p><ul><li><p>完全限定名 (比如　“com.mypackage.MyMapper.selectAllThings”)将被直接用于查找及使用。</p></li><li><p>短名称　(比如　“selectAllThings”)如果全局唯一也可以作为一个单独的引用。如果不唯一，有两个或两个以上的相同名称（比如　“com.foo.selectAllThings” 和　“com.bar.selectAllThings”, 那么使用时就会产生”短名称不唯一”的错误，这种情况下就必须使用完全限定名。</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.mybatis.example;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogMapper</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Select</span>(<span class="string">"SELECT * FROM blog WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">  <span class="function">Blog <span class="title">selectBlog</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><blockquote><p>使用注解来映射简单语句会使代码显得更加简洁，然而对于稍微复杂一点的语句，Java 注解就力不从心了，并且会显得更加混乱。<br>因此，如果你需要完成很复杂的事情，那么最好使用 XML 来映射语句。选择何种方式来配置映射，以及认为映射语句定义的一致性是否重要，这些完全取决于你和你的团队。 换句话说，永远不要拘泥于一种方式，你可以很轻松的在基于注解和 XML 的语句映射方式间自由移植和切换。</p></blockquote></li></ul><h1 id="作用域（Scope）和生命周期"><a href="#作用域（Scope）和生命周期" class="headerlink" title="作用域（Scope）和生命周期"></a>作用域（Scope）和生命周期</h1><p>理解我们目前已经讨论过的不同作用域和生命周期类是至关重要的，因为错误的使用会导致非常严重的并发问题。</p><hr><p>提示 对象生命周期和依赖注入框架</p><p>依赖注入框架可以创建线程安全的、基于事务的 SqlSession 和映射器，并将它们直接注入到你的 bean 中，因此可以直接忽略它们的生命周期。 如果对如何通过依赖注入框架来使用 MyBatis 感兴趣，可以研究一下 MyBatis-Spring 或 MyBatis-Guice 两个子项目。</p><hr><h2 id="SqlSessionFactoryBuilder"><a href="#SqlSessionFactoryBuilder" class="headerlink" title="SqlSessionFactoryBuilder"></a>SqlSessionFactoryBuilder</h2><p>这个类可以被实例化、使用和丢弃，一旦创建了 SqlSessionFactory，就不再需要它了。 因此 SqlSessionFactoryBuilder 实例的最佳作用域是方法作用域（也就是局部方法变量）。 你可以重用 SqlSessionFactoryBuilder 来创建多个 SqlSessionFactory 实例，但是最好还是不要让其一直存在，以保证所有的 XML 解析资源可以被释放给更重要的事情。</p><h2 id="SqlSessionFactory"><a href="#SqlSessionFactory" class="headerlink" title="SqlSessionFactory"></a>SqlSessionFactory</h2><p>SqlSessionFactory 一旦被创建就应该在应用的运行期间一直存在，没有任何理由丢弃它或重新创建另一个实例。 使用 SqlSessionFactory 的最佳实践是在应用运行期间不要重复创建多次，多次重建 SqlSessionFactory 被视为一种代码“坏味道（bad smell）”。因此 SqlSessionFactory 的最佳作用域是应用作用域。 有很多方法可以做到，最简单的就是使用单例模式或者静态单例模式。</p><h2 id="SqlSession"><a href="#SqlSession" class="headerlink" title="SqlSession"></a>SqlSession</h2><p>每个线程都应该有它自己的 SqlSession 实例。SqlSession 的实例不是线程安全的，因此是不能被共享的，所以它的最佳的作用域是请求或方法作用域。 绝对不能将 SqlSession 实例的引用放在一个类的静态域，甚至一个类的实例变量也不行。 也绝不能将 SqlSession 实例的引用放在任何类型的托管作用域中，比如 Servlet 框架中的 HttpSession。 如果你现在正在使用一种 Web 框架，要考虑 SqlSession 放在一个和 HTTP 请求对象相似的作用域中。 换句话说，每次收到的 HTTP 请求，就可以打开一个 SqlSession，返回一个响应，就关闭它。 这个关闭操作是很重要的，你应该把这个关闭操作放到 finally 块中以确保每次都能执行关闭。 下面的示例就是一个确保 SqlSession 关闭的标准模式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> (SqlSession session = sqlSessionFactory.openSession()) &#123;</span><br><span class="line">  <span class="comment">// 你的应用逻辑代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在你的所有的代码中一致地使用这种模式来保证所有数据库资源都能被正确地关闭。</p><h2 id="映射器实例"><a href="#映射器实例" class="headerlink" title="映射器实例"></a>映射器实例</h2><p>映射器是一些由你创建的、绑定你映射的语句的接口。映射器接口的实例是从 SqlSession 中获得的。因此从技术层面讲，任何映射器实例的最大作用域是和请求它们的 SqlSession 相同的。尽管如此，映射器实例的最佳作用域是方法作用域。 也就是说，映射器实例应该在调用它们的方法中被请求，用过之后即可丢弃。 并不需要显式地关闭映射器实例，尽管在整个请求作用域保持映射器实例也不会有什么问题，但是你很快会发现，像 SqlSession 一样，在这个作用域上管理太多的资源的话会难于控制。 为了避免这种复杂性，最好把映射器放在方法作用域内。下面的示例就展示了这个实践：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> (SqlSession session = sqlSessionFactory.openSession()) &#123;</span><br><span class="line">  BlogMapper mapper = session.getMapper(BlogMapper.class);</span><br><span class="line">  <span class="comment">// 你的应用逻辑代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Resource属性、url属性、uri属性"><a href="#Resource属性、url属性、uri属性" class="headerlink" title="Resource属性、url属性、uri属性"></a>Resource属性、url属性、uri属性</h2><ul><li><p>resource属性：</p><ul><li>常用的，用于指定配置文件的位置，是按照类路径的写法来写，并且必须存在于类路径下。</li></ul></li><li><p>url属性：</p><ul><li><p>是要求按照Url的写法来写地址</p></li><li><p>URL: Uniform Resource Locator 统一资源定位符。它是可以唯一标识一个资源的位置。‘</p></li><li><p>例如写法：</p><ul><li><properties url="file:///media/nianshao/59D5FCE97201B8A7/java/apache-maven-3.6.1/conf/settings.xml"></properties></li></ul></li></ul></li></ul><ul><li><p>它的写法：</p><ul><li><a href="http://localhost:8080/mybatis/demo01Servlet" target="_blank" rel="noopener">http://localhost:8080/mybatis/demo01Servlet</a></li><li>协议 主机 端口 URI</li></ul></li></ul><ul><li>URI： Uniform Resource Identifier 统一资源标识符。它是在应用中可以唯一定位一个资源的。</li></ul><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis入门案例与入过的坑Maven项目</title>
      <link href="/2019/09/01/Untitled/"/>
      <url>/2019/09/01/Untitled/</url>
      
        <content type="html"><![CDATA[<!-- build time:Wed Oct 09 2019 13:41:44 GMT+0800 (CST) --><hr><h1 id="1-创建数据库"><a href="#1-创建数据库" class="headerlink" title="1. 创建数据库"></a>1. 创建数据库</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`user`</span> (</span><br><span class="line">  <span class="string">`uid`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`uname`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`usex`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`uid`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">2</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4;</span><br></pre></td></tr></table></figure><h1 id="2-创建Maven项目"><a href="#2-创建Maven项目" class="headerlink" title="2. 创建Maven项目"></a>2. 创建Maven项目</h1><h3 id="创建mybatis-config-xml和log4j-properties"><a href="#创建mybatis-config-xml和log4j-properties" class="headerlink" title="创建mybatis-config.xml和log4j.properties"></a>创建mybatis-config.xml和log4j.properties</h3><blockquote><ul><li>log4j.properties文件</li></ul></blockquote><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">log4j.rootLogger=DEBUG,console</span><br><span class="line">log4j.additivity.org.apache=true</span><br><span class="line"># 控制台(console)</span><br><span class="line">log4j.appender.console=org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.console.Threshold=DEBUG</span><br><span class="line">log4j.appender.console.ImmediateFlush=true</span><br><span class="line">log4j.appender.console.Target=System.err</span><br><span class="line">log4j.appender.console.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.console.layout.ConversionPattern=[%-5p] %d(%r) --&gt; [%t] %l: %m %x %n</span><br></pre></td></tr></table></figure><blockquote><ul><li>mybatis-config.xml文件</li></ul></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    配置环境--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/mybatis?characterEncoding=utf8"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        映射文件的位置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/mybatis/mapper/UserMapper.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>将上面两个文件放到src/main/resources中</strong></p><ul><li><blockquote><p>下面的两个目录如果不存在，一定要创建</p></blockquote></li></ul><ul><li>src/main/java</li><li>src/main/resources</li></ul></blockquote><h2 id="创建包com-mybatis-po和com-mybatis-mapper"><a href="#创建包com-mybatis-po和com-mybatis-mapper" class="headerlink" title="创建包com.mybatis.po和com.mybatis.mapper"></a>创建包com.mybatis.po和com.mybatis.mapper</h2><ul><li><blockquote><p>在com.mybatis.po创建实体类MyUser</p></blockquote></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mybatis.po;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyUser</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer uid;</span><br><span class="line">    <span class="keyword">private</span> String uname;</span><br><span class="line">    <span class="keyword">private</span> String usex;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getUid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> uid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUid</span><span class="params">(Integer uid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.uid = uid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> uname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUname</span><span class="params">(String uname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.uname = uname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> usex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsex</span><span class="params">(String usex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.usex = usex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"MyUser&#123;"</span> +</span><br><span class="line">                <span class="string">"uid="</span> + uid +</span><br><span class="line">                <span class="string">", uname='"</span> + uname + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", usex='"</span> + usex + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><blockquote><p>在com.mybatis.mapper中创建UserMapper.xml</p></blockquote></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    #&#123;uname&#125;表示一个占位符 相当于?, 接收参数uname--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.mybatis.mapper.UserMapper"</span> &gt;</span></span><br><span class="line"><span class="comment">&lt;!--    根据uid查询一个用户信息--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUserId"</span> <span class="attr">parameterType</span>=<span class="string">"Integer"</span> <span class="attr">resultType</span>=<span class="string">"com.mybatis.po.MyUser"</span>&gt;</span></span><br><span class="line">            select * from user where uid = #&#123;uid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    查询所有用户信息--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectAllUser"</span> <span class="attr">resultType</span>=<span class="string">"com.mybatis.po.MyUser"</span>&gt;</span></span><br><span class="line">        select * from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    添加一个用户 #&#123;uname&#125; 为com.mybatis.po.MyUser属性值--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"addUser"</span> <span class="attr">parameterType</span>=<span class="string">"com.mybatis.po.MyUser"</span>&gt;</span></span><br><span class="line">        insert into user (uname, usex) value (#&#123;uname&#125;, #&#123;usex&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    修改一个用户--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateUser"</span> <span class="attr">parameterType</span>=<span class="string">"com.mybatis.po.MyUser"</span>&gt;</span></span><br><span class="line">        update user set uname = #&#123;uname&#125;, usex = #&#123;usex&#125; where uid = #&#123;uid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    删除一个用户--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"deleteUser"</span> <span class="attr">parameterType</span>=<span class="string">"Integer"</span>&gt;</span></span><br><span class="line">        delete from user where uid = #&#123;uid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><blockquote><p>创建测试类MybatisTest</p></blockquote></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mybatis.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mybatis.po.MyUser;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    在测试类中首先使用输入流读取配置文件，然后</span></span><br><span class="line"><span class="comment">    根据配置信息构建SqlSessionFactory对象</span></span><br><span class="line"><span class="comment">    通过这个对象创建SqlSession对象，并使用SqlSession</span></span><br><span class="line"><span class="comment">    对象的方法执行数据库操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//WARNING: Illegal reflective access by org.apache.ibatis.reflection.Reflector</span></span><br><span class="line"><span class="comment">// 非法反射，mybatis版本太低， 或者改成jdk1.8即可</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取配置文件mybatis-config.xml</span></span><br><span class="line">        InputStream config = Resources.getResourceAsStream(<span class="string">"mybatis-config.xml"</span>);</span><br><span class="line">        <span class="comment">// 根据配置文件构建SqlSessionFactory</span></span><br><span class="line">        SqlSessionFactory ssf = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(config);</span><br><span class="line">        config.close();</span><br><span class="line">        <span class="comment">// 通过SqlSessionFactory创建SqlSession</span></span><br><span class="line">        SqlSession ss = ssf.openSession();</span><br><span class="line">        <span class="comment">// SqlSession执行映射文件中定义的SQL，并返回映射结果.</span></span><br><span class="line">        System.out.println(<span class="string">"---------添加数据"</span>);</span><br><span class="line">        MyUser user = <span class="keyword">new</span> MyUser();</span><br><span class="line">        user.setUname(<span class="string">"小红"</span>);</span><br><span class="line">        user.setUsex(<span class="string">"女"</span>);</span><br><span class="line">        <span class="keyword">int</span> num = ss.insert(<span class="string">"com.mybatis.mapper.UserMapper.addUser"</span>, user);</span><br><span class="line">        <span class="comment">// 删除数据</span></span><br><span class="line">        System.out.println(<span class="string">"删除数据"</span>);</span><br><span class="line">        ss.delete(<span class="string">"com.mybatis.mapper.UserMapper.deleteUser"</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 修改数据</span></span><br><span class="line">        System.out.println(<span class="string">"修改数据"</span>);</span><br><span class="line">        MyUser upUser = <span class="keyword">new</span> MyUser();</span><br><span class="line">        upUser.setUid(<span class="number">3</span>);</span><br><span class="line">        upUser.setUname(<span class="string">"张三"</span>);</span><br><span class="line">        upUser.setUsex(<span class="string">"不男不女"</span>);</span><br><span class="line">        ss.update(<span class="string">"com.mybatis.mapper.UserMapper.updateUser"</span>, upUser);</span><br><span class="line">        <span class="comment">// 查询所有数据</span></span><br><span class="line">        System.out.printf(<span class="string">"查询数据"</span>);</span><br><span class="line">        List&lt;MyUser&gt; userList = ss.selectList(<span class="string">"com.mybatis.mapper.UserMapper.selectAllUser"</span>);</span><br><span class="line">        <span class="keyword">for</span> (MyUser users: userList)&#123;</span><br><span class="line">            System.out.println(users);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"查询单个用户信息"</span>);</span><br><span class="line">        MyUser oneUser = ss.selectOne(<span class="string">"com.mybatis.mapper.UserMapper.selectUserId"</span>, <span class="number">4</span>);</span><br><span class="line">        System.out.println(oneUser);</span><br><span class="line">        <span class="comment">// 提交事务</span></span><br><span class="line">        ss.commit();</span><br><span class="line">        <span class="comment">// 关闭SqlSession</span></span><br><span class="line">        ss.close();</span><br><span class="line">        System.out.println(num);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置pow-xml"><a href="#配置pow-xml" class="headerlink" title="配置pow.xml"></a>配置pow.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.lacknb.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>MybatisDemo01<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>MybatisDemo01<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- FIXME change it to the project's website --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--      &lt;scope&gt;test&lt;/scope&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.ant<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ant<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>asm<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>asm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cglib<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cglib<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.javassist<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javassist<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.20.0-GA<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--      &lt;scope&gt;test&lt;/scope&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.43<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ognl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ognl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--  这个必须有，否则会加载不到xml配置文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span><span class="comment">&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-clean-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.22.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-jar-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-install-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-deploy-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-site-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.7.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-project-info-reports-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/09/04/nVcMaq.png" alt="图片"></p><h1 id="3-入的坑"><a href="#3-入的坑" class="headerlink" title="3. 入的坑"></a>3. 入的坑</h1><blockquote><ol><li>找不到配置文件的异常</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Exception in thread &quot;main&quot; java.io.IOException: Could not find resource mybatis-config.xml</span><br></pre></td></tr></table></figure><ul><li><blockquote><p>解决办法：<br>将下面代码放到pow.xml中build标签中的开头</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">       <span class="comment">&lt;!--  这个必须有，否则会加载不到xml配置文件--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></blockquote></li></ul><blockquote><ol start="2"><li>如下的异常</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">WARNING: An illegal reflective access operation has occurred</span><br><span class="line">WARNING: Illegal reflective access by org.apache.ibatis.reflection.Reflector (file:/media/nianshao/59D5FCE97201B8A7/java/repository/org/mybatis/mybatis/3.4.5/mybatis-3.4.5.jar) to method java.lang.Class.checkPackageAccess(java.lang.SecurityManager,java.lang.ClassLoader,boolean)</span><br><span class="line">WARNING: Please consider reporting this to the maintainers of org.apache.ibatis.reflection.Reflector</span><br><span class="line">WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations</span><br><span class="line">WARNING: All illegal access operations will be denied in a future release</span><br></pre></td></tr></table></figure><ul><li><blockquote><p>解决方法：<br>非法反射，可以说是mybatis版本和jdk版本不合， 改成jdk1.8试试或者升级mybatis版本。</p></blockquote></li><li><blockquote><p><strong>当解决不了问题的时候i，重启一下IDEA试试</strong></p></blockquote></li></ul><p><img src="https://s2.ax1x.com/2019/09/04/nVcMaq.png" alt="运行结果"></p><h2 id="找不到配置文件"><a href="#找不到配置文件" class="headerlink" title="找不到配置文件"></a>找不到配置文件</h2><ul><li>打开pom.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.lacknb.demo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Mybatis-sql<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>Mybatis-sql<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">项目的打包类型：pom、jar、war</span><br><span class="line"></span><br><span class="line">packing默认是jar类型，</span><br><span class="line"></span><br><span class="line">&lt;packaging&gt;pom&lt;/packaging&gt;   ---------&gt;   父类型都为pom类型</span><br><span class="line"></span><br><span class="line">&lt;packaging&gt;jar&lt;/packaging&gt;      ---------&gt;   内部调用或者是作服务使用</span><br><span class="line"></span><br><span class="line">&lt;packaging&gt;war&lt;/packaging&gt;    ---------&gt;   需要部署的项目</span><br></pre></td></tr></table></figure><p><strong>原因</strong>:</p><ul><li><blockquote><p>是因为创建了maven项目的子模块， 导致<packing>pom</packing>，将pom改成war或者jar就行了。</p></blockquote></li></ul><h2 id="创建resources文件夹"><a href="#创建resources文件夹" class="headerlink" title="创建resources文件夹"></a>创建resources文件夹</h2><p><img src="https://s2.ax1x.com/2019/09/11/ndx2Ie.png" alt></p><p>** 将所有的xml文件或者properties文件放在这里，就不用修改pom.xml中的build标签中的了。**</p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scrapy爬52古装网高清壁纸并下载</title>
      <link href="/2019/08/26/scrapy%E7%88%AC52%E5%8F%A4%E8%A3%85%E7%BD%91%E9%AB%98%E6%B8%85%E5%A3%81%E7%BA%B8%E5%B9%B6%E4%B8%8B%E8%BD%BD/"/>
      <url>/2019/08/26/scrapy%E7%88%AC52%E5%8F%A4%E8%A3%85%E7%BD%91%E9%AB%98%E6%B8%85%E5%A3%81%E7%BA%B8%E5%B9%B6%E4%B8%8B%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<!-- build time:Wed Oct 09 2019 13:41:44 GMT+0800 (CST) --><h2 id="1-创建项目"><a href="#1-创建项目" class="headerlink" title="1. 创建项目"></a>1. 创建项目</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建爬虫项目</span></span><br><span class="line">scrapy startproject GuzhuangWallpaper</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入爬虫项目的目录，生成爬虫文件(模板)</span></span><br><span class="line">scrapy genspider guzhuang www.52guzhuang.com</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="2-setting文件的配置"><a href="#2-setting文件的配置" class="headerlink" title="2. setting文件的配置"></a>2. setting文件的配置</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Scrapy settings for GuzhuangWallpaper project</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For simplicity, this file contains only settings considered important or</span></span><br><span class="line"><span class="comment"># commonly used. You can find more settings consulting the documentation:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     https://doc.scrapy.org/en/latest/topics/settings.html</span></span><br><span class="line"><span class="comment">#     https://doc.scrapy.org/en/latest/topics/downloader-middleware.html</span></span><br><span class="line"><span class="comment">#     https://doc.scrapy.org/en/latest/topics/spider-middleware.html</span></span><br><span class="line"></span><br><span class="line">BOT_NAME = <span class="string">'GuzhuangWallpaper'</span></span><br><span class="line"></span><br><span class="line">SPIDER_MODULES = [<span class="string">'GuzhuangWallpaper.spiders'</span>]</span><br><span class="line">NEWSPIDER_MODULE = <span class="string">'GuzhuangWallpaper.spiders'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Crawl responsibly by identifying yourself (and your website) on the user-agent</span></span><br><span class="line">USER_AGENT = <span class="string">'User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.86 Safari/537.36'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Obey robots.txt rules</span></span><br><span class="line">ROBOTSTXT_OBEY = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">LOG_LEVEL = <span class="string">'WARNING'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置下载参数</span></span><br><span class="line"><span class="comment"># FILES_STORE = "D:"  # 文件的存储路径</span></span><br><span class="line">IMAGES_STORE = <span class="string">"/media/nianshao/59D5FCE97201B8A7/download02/古装壁纸"</span>  <span class="comment"># 图片的存储路径</span></span><br><span class="line"><span class="comment"># 避免下载最近90天已经下载过的文件内容</span></span><br><span class="line">FILES_EXPIRES = <span class="number">90</span></span><br><span class="line"><span class="comment"># 避免下载最近90天已经下载过的图像内容</span></span><br><span class="line">IMAGES_EXPIRES = <span class="number">0</span></span><br><span class="line"><span class="comment"># 设置图片缩略图</span></span><br><span class="line">IMAGES_THUMBS = &#123;</span><br><span class="line">    <span class="string">'small'</span>: (<span class="number">50</span>, <span class="number">50</span>),</span><br><span class="line">    <span class="string">'big'</span>: (<span class="number">250</span>, <span class="number">250</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#该字段的值为xxxItem中定义的存储图片链接的img_urls字段</span></span><br><span class="line">IMAGES_URLS_FIELD = <span class="string">"img_urls"</span></span><br><span class="line"><span class="comment"># 该字段的值为xxxItem中定义的存储图片信息的imgages字段</span></span><br><span class="line">IMAGES_RESULT_FIELD = <span class="string">"images"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 图片过滤器，最小高度和宽度，低于此尺寸不下载</span></span><br><span class="line">IMAGES_MIN_HEIGHT = <span class="number">110</span></span><br><span class="line">IMAGES_MIN_WIDTH = <span class="number">110</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure maximum concurrent requests performed by Scrapy (default: 16)</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS = 32</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure a delay for requests for the same website (default: 0)</span></span><br><span class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/settings.html#download-delay</span></span><br><span class="line"><span class="comment"># See also autothrottle settings and docs</span></span><br><span class="line"><span class="comment">#DOWNLOAD_DELAY = 3</span></span><br><span class="line"><span class="comment"># The download delay setting will honor only one of:</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS_PER_DOMAIN = 16</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS_PER_IP = 16</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable cookies (enabled by default)</span></span><br><span class="line"><span class="comment">#COOKIES_ENABLED = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable Telnet Console (enabled by default)</span></span><br><span class="line"><span class="comment">#TELNETCONSOLE_ENABLED = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Override the default request headers:</span></span><br><span class="line">DEFAULT_REQUEST_HEADERS = &#123;</span><br><span class="line">  <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'</span>,</span><br><span class="line">  <span class="string">'Accept-Language'</span>: <span class="string">'en'</span>,</span><br><span class="line">  <span class="string">'Referer'</span>: <span class="string">'http://www.52guzhuang.com/forum-59-2.html'</span>,</span><br><span class="line">    <span class="string">'Cookie'</span>: <span class="string">'8ZxE_2132_saltkey=It2jtbtX; 8ZxE_2132_lastvisit=1566439893; bdshare_firstime=1566443802012; 8ZxE_2132_atarget=1; security_session_verify=27962fc0952df38b5fd0b1dd5d5b4097; ZDEDebuggerPresent=php,phtml,php3; Qs_lvt_192466=1566443795%2C1566632328; 8ZxE_2132_visitedfid=59D45; 8ZxE_2132_st_t=0%7C1566645295%7C7bc18059531f8726ac78d0664c62a87a; 8ZxE_2132_forum_lastvisit=D_45_1566643250D_59_1566645295; 8ZxE_2132_viewid=tid_58630; 8ZxE_2132_st_p=0%7C1566645504%7C2616708e5e9e0d761d5c513cf26d362a; 8ZxE_2132_sendmail=1; Qs_pv_192466=220429305054871900%2C4055271188718522400%2C577107211184728000%2C1215782351179700500%2C3219074084875213300; 8ZxE_2132_lastact=1566645606%09forum.php%09ajax'</span>,</span><br><span class="line">    <span class="string">'Host'</span>: <span class="string">'www.52guzhuang.com'</span>,</span><br><span class="line">    <span class="string">'Pragma'</span>: <span class="string">'no-cache'</span>,</span><br><span class="line">    <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Opera/9.80 (Windows NT 6.0) Presto/2.12.388 Version/12.14'</span>,</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable spider middlewares</span></span><br><span class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/spider-middleware.html</span></span><br><span class="line"><span class="comment">#SPIDER_MIDDLEWARES = &#123;</span></span><br><span class="line"><span class="comment">#    'GuzhuangWallpaper.middlewares.GuzhuangwallpaperSpiderMiddleware': 543,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable downloader middlewares</span></span><br><span class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/downloader-middleware.html</span></span><br><span class="line"><span class="comment">#DOWNLOADER_MIDDLEWARES = &#123;</span></span><br><span class="line"><span class="comment">#    'GuzhuangWallpaper.middlewares.GuzhuangwallpaperDownloaderMiddleware': 543,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable extensions</span></span><br><span class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/extensions.html</span></span><br><span class="line"><span class="comment">#EXTENSIONS = &#123;</span></span><br><span class="line"><span class="comment">#    'scrapy.extensions.telnet.TelnetConsole': None,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure item pipelines</span></span><br><span class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">   <span class="string">'scrapy.pipelines.images.ImagesPipeline'</span>: <span class="number">1</span>,</span><br><span class="line">   <span class="string">'GuzhuangWallpaper.pipelines.GuzhuangwallpaperPipeline'</span>: <span class="number">300</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable and configure the AutoThrottle extension (disabled by default)</span></span><br><span class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/autothrottle.html</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_ENABLED = True</span></span><br><span class="line"><span class="comment"># The initial download delay</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_START_DELAY = 5</span></span><br><span class="line"><span class="comment"># The maximum download delay to be set in case of high latencies</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_MAX_DELAY = 60</span></span><br><span class="line"><span class="comment"># The average number of requests Scrapy should be sending in parallel to</span></span><br><span class="line"><span class="comment"># each remote server</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_TARGET_CONCURRENCY = 1.0</span></span><br><span class="line"><span class="comment"># Enable showing throttling stats for every response received:</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_DEBUG = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable and configure HTTP caching (disabled by default)</span></span><br><span class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/downloader-middleware.html#httpcache-middleware-settings</span></span><br><span class="line"><span class="comment">#HTTPCACHE_ENABLED = True</span></span><br><span class="line"><span class="comment">#HTTPCACHE_EXPIRATION_SECS = 0</span></span><br><span class="line"><span class="comment">#HTTPCACHE_DIR = 'httpcache'</span></span><br><span class="line"><span class="comment">#HTTPCACHE_IGNORE_HTTP_CODES = []</span></span><br><span class="line"><span class="comment">#HTTPCACHE_STORAGE = 'scrapy.extensions.httpcache.FilesystemCacheStorage'</span></span><br></pre></td></tr></table></figure><h2 id="3-爬虫文件的编写"><a href="#3-爬虫文件的编写" class="headerlink" title="3. 爬虫文件的编写"></a>3. 爬虫文件的编写</h2><blockquote><ul><li><strong>items.py</strong></li></ul></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define here the models for your scraped items</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># See documentation in:</span></span><br><span class="line"><span class="comment"># https://doc.scrapy.org/en/latest/topics/items.html</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GuzhuangwallpaperItem</span><span class="params">(scrapy.Item)</span>:</span></span><br><span class="line">    <span class="comment"># define the fields for your item here like:</span></span><br><span class="line">    <span class="comment"># name = scrapy.Field()</span></span><br><span class="line">    img_urls = scrapy.Field()  <span class="comment"># 固定字段 与 setting中的一致</span></span><br></pre></td></tr></table></figure><blockquote><ul><li><strong>pipelines.py</strong></li></ul></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define your item pipelines here</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Don't forget to add your pipeline to the ITEM_PIPELINES setting</span></span><br><span class="line"><span class="comment"># See: https://doc.scrapy.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> scrapy.exceptions <span class="keyword">import</span> DropItem</span><br><span class="line"><span class="keyword">from</span> scrapy.pipelines.images <span class="keyword">import</span> ImagesPipeline  <span class="comment"># 内置的图片通道</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GuzhuangwallpaperPipeline</span><span class="params">(ImagesPipeline)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">item_completed</span><span class="params">(self, results, item, info)</span>:</span></span><br><span class="line">        image_path = [x[<span class="string">'path'</span>] <span class="keyword">for</span> ok, x <span class="keyword">in</span> results <span class="keyword">if</span> ok]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> image_path:</span><br><span class="line">            <span class="keyword">raise</span> DropItem(<span class="string">'Item contains no images'</span>)</span><br><span class="line">        item[<span class="string">'image_paths'</span>] = image_path</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">        print(<span class="string">"正在下载"</span>, item[<span class="string">'img_urls'</span>])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><blockquote><ul><li><strong>guzhuang.py</strong></li></ul></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> ..items <span class="keyword">import</span> GuzhuangwallpaperItem</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GuzhuangSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">'guzhuang'</span></span><br><span class="line">    allowed_domains = [<span class="string">'www.52guzhuang.com'</span>]</span><br><span class="line">    start_urls = [<span class="string">'http://www.52guzhuang.com/forum-59-1.html'</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.base_url = <span class="string">"http://www.52guzhuang.com/"</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        urls = response.xpath(<span class="string">'//div[@class="v-meta-title"]/a[1]/@href'</span>).extract()</span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(url, callback=self.get_picture, )</span><br><span class="line">            <span class="comment"># break</span></span><br><span class="line">            <span class="comment"># sleep(1)</span></span><br><span class="line">        <span class="comment"># next_page = response.xpath('//a[@class="nxt"]/text()[last()]').extract_first()</span></span><br><span class="line">        <span class="comment"># if next_page == '下一页':</span></span><br><span class="line">        <span class="comment">#     href = response.xpath('//a[@class="nxt"]/@href[last()]').extract_first()</span></span><br><span class="line">        <span class="comment">#     yield scrapy.Request(self.base_url + href, callback=self.parse, )</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_picture</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        item = GuzhuangwallpaperItem()</span><br><span class="line">        img_urls = response.xpath(<span class="string">'//img[@class="zoom"]/@file'</span>).extract()</span><br><span class="line">        next_page = response.xpath(<span class="string">'//div[@class="pg"]/a[last()]/text()'</span>).extract_first()</span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> img_urls:</span><br><span class="line">            item[<span class="string">'img_urls'</span>] = [self.base_url + url]</span><br><span class="line">            print(url)</span><br><span class="line">            <span class="keyword">yield</span> item</span><br><span class="line">        <span class="keyword">if</span> next_page == <span class="string">'下一页'</span>:</span><br><span class="line">            href = response.xpath(<span class="string">'//div[@class="pg"]/a[last()]/@href'</span>).extract_first()</span><br><span class="line">            pic_url = self.base_url + href</span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(pic_url, callback=self.get_picture)</span><br><span class="line">            <span class="comment"># sleep(1)</span></span><br></pre></td></tr></table></figure><h2 id="4-运行爬虫"><a href="#4-运行爬虫" class="headerlink" title="4. 运行爬虫"></a>4. 运行爬虫</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy crawl guzhuang</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
            <tag> scrapy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ognl表达式和值栈</title>
      <link href="/2019/08/20/ognl%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%92%8C%E5%80%BC%E6%A0%88/"/>
      <url>/2019/08/20/ognl%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%92%8C%E5%80%BC%E6%A0%88/</url>
      
        <content type="html"><![CDATA[<!-- build time:Wed Oct 09 2019 13:41:44 GMT+0800 (CST) --><hr><h1 id="OGNL表达式"><a href="#OGNL表达式" class="headerlink" title="OGNL表达式"></a>OGNL表达式</h1><ul><li>OGNL的全称是对象图导航语言，使用这种表达式语言，可以通过某种表达式语法，存取Java对象任意属性，调用Java对象的方法，同时能够自动实现必要的类型转换。</li></ul><ul><li><ul><li>如果把表达式看作是一个带有语义的字符串，那么OGNL无疑成为这个语义字符串与Java对象之间的沟通的桥梁。</li></ul></li></ul><a id="more"></a><h5 id="Struts默认的表达式语言就是OGNL，它具有以下特点："><a href="#Struts默认的表达式语言就是OGNL，它具有以下特点：" class="headerlink" title="Struts默认的表达式语言就是OGNL，它具有以下特点："></a>Struts默认的表达式语言就是OGNL，它具有以下特点：</h5><ul><li><blockquote><p>支持对象方法调用。例如： objName.methodName()。</p></blockquote></li><li><blockquote><p>支持类静态方法调用和值访问，表达式的格式为@类全名(包含包路径)@方法名(值名)。例如：　@java.lang.String@format(‘foo %s’, ‘bar’)。</p></blockquote></li><li><blockquote><p>支持赋值操作和表达式关联。例如： price = 100, discount = 0.8, 在方法calculatePrice()中进行乘法计算会返回80。</p></blockquote></li><li><blockquote><p>访问OGNL上下文(ognl Context) 和　ActionContext。</p></blockquote></li><li><blockquote><p>操作集合对象。</p></blockquote></li><li><blockquote><p>ognl的操作实际上就是围绕着ognl结构的三个要素而进行的，分别是表达式、根对象、上下文环境，　下面分别讲解这三个要素。</p></blockquote></li></ul><h3 id="1-表达式"><a href="#1-表达式" class="headerlink" title="1. 表达式"></a>1. 表达式</h3><ul><li><blockquote><p>ognl的getValue()方法中有两个参数：　第一个参数是是表达式。表达式是整个ognl的核心，ognl会根据表达式去对象中取值。所有ognl操作都针对表达式解析后进行的。它表明了此次ognl操作要　“做什么”。表达式就是一个带有语法含义的字符串，这个字符串规定了操作的类型和操作的内容。ognl支持大量的表达式语法，不仅支持这种　“链式”　对象访问路径，还支持在表达式中进行简单的运算。</p></blockquote></li></ul><hr><h3 id="2-根对象（ROOT）"><a href="#2-根对象（ROOT）" class="headerlink" title="2. 根对象（ROOT）"></a>2. 根对象（ROOT）</h3><ul><li><blockquote><p>OGNL的getValue()方法中的第二个参数就是Root对象，Root对象可以理解为OGNL的操作对象，表达式规定了　“做什么”，　而Root对象则规定了　“对谁操作”。OGNL称为对象图导航语言，所谓对象图，即以任意一个对象为根，通过OGNL可以访问这个对象关联的其他对象。</p></blockquote></li></ul><hr><h3 id="3-Context对象"><a href="#3-Context对象" class="headerlink" title="3. Context对象"></a>3. Context对象</h3><ul><li><blockquote><p>实际上OGNL的取值还需要一个上下文环境。设置了Root对象，OGNL可以对Root对象进行取值或写值等操作，Root对象所在环境就是OGNL的上下文环境（Context）。上下文环境规定了OGNL的操作　“在哪里进行”。上下文环境Context是一个Map类型的对象，在表达式中访问Context对象，需要使用 “#” 号加上对象名称, 即　“＃对象名称”　的形式。</p></blockquote></li></ul><h3 id="例子："><a href="#例子：" class="headerlink" title="例子："></a>例子：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lacknb.ognl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> ognl.Ognl;</span><br><span class="line"><span class="keyword">import</span> ognl.OgnlException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestOgnlContext</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> OgnlException </span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        Group g = <span class="keyword">new</span> Group();</span><br><span class="line">        Branch b = <span class="keyword">new</span> Branch();</span><br><span class="line">        b.setBranchId(<span class="string">"test"</span>);</span><br><span class="line">        g.setBranch(b);</span><br><span class="line">        user.setGroup(g);</span><br><span class="line">        <span class="comment">// 用java来导航访问</span></span><br><span class="line">        System.out.println(<span class="string">"java方式－"</span> + user.getGroup().getBranch().getBranchId());</span><br><span class="line">        <span class="comment">// 利用OGNL表达式访问</span></span><br><span class="line">        System.out.println(<span class="string">"OGNＬ方式－"</span> + Ognl.getValue(<span class="string">"group.branch.branchId"</span>, user));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置user对象的username的属性值为itcast</span></span><br><span class="line">        user.setUsername(<span class="string">"itcast"</span>);</span><br><span class="line">        <span class="comment">// 创建context对象</span></span><br><span class="line">        Map context = <span class="keyword">new</span> HashMap();</span><br><span class="line">        <span class="comment">// 将user对象放入context对象中</span></span><br><span class="line">        context.put(<span class="string">"u"</span>, user);</span><br><span class="line">        <span class="comment">// 输出使用OGNL表达式获取context对象中的user对象的username值</span></span><br><span class="line">        System.out.println(<span class="string">"获取context中数据结果为-"</span> + Ognl.getValue(<span class="string">"#u.username"</span>, context, user));</span><br><span class="line">        System.out.println(<span class="string">"获取context中对象结果为-"</span> + Ognl.getValue(<span class="string">"#u.group.branch.branchId"</span>, context, user));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><blockquote><p>输出结果</p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">java方式－test</span><br><span class="line">OGNＬ方式－test</span><br><span class="line">获取context中数据结果为-itcast</span><br><span class="line">获取context中对象结果为-test</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> struts2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Struts2的拦截器</title>
      <link href="/2019/08/17/Struts2%E7%9A%84%E6%8B%A6%E6%88%AA%E5%99%A8%E6%A0%88/"/>
      <url>/2019/08/17/Struts2%E7%9A%84%E6%8B%A6%E6%88%AA%E5%99%A8%E6%A0%88/</url>
      
        <content type="html"><![CDATA[<!-- build time:Wed Oct 09 2019 13:41:44 GMT+0800 (CST) --><hr><p>拦截器：</p><pre><code>拦截器链　和　拦截器栈</code></pre><hr><hr><h3 id="拦截器的工作原理："><a href="#拦截器的工作原理：" class="headerlink" title="拦截器的工作原理："></a>拦截器的工作原理：</h3><pre><code>通常情况下，拦截器都是以代理的方式调用的，它在一个action执行前后进行拦截围绕着Action和Result的执行而执行首先执行Action配置的拦截器，在Action与Result执行之后，拦截器会再次执行（与先前调用的顺序相反），在此链式执行的过程中，每一个拦截器在执行execute方法之前都可以直接返回。</code></pre><hr><a id="more"></a><h3 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h3><pre><code>    要想要让拦截器起作用，首先要对它进行配置。拦截器的配置在struts.xml文件中完成的，它通常以&lt;interceptor&gt;标签开头，以&lt;/interceptor&gt;标签结束。定义拦截器的语法如下：</code></pre><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"interceptorName"</span> <span class="attr">class</span>=<span class="string">"interceptorClass"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"paramName"</span>&gt;</span>paramValue<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">interceptor</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><ul><li>上述语法格式中，name属性用来指定拦截器的名称，class属性用于指定<br>拦截器的实现类。有时，在定义拦截器时需要传入的参数，这时需要使用<br>param标签，其中name属性用来指定参数的名称，paramValue表示参数的值</li></ul></blockquote><hr><h3 id="拦截器栈"><a href="#拦截器栈" class="headerlink" title="拦截器栈"></a>拦截器栈</h3><pre><code>在实际开发中，经常需要在Action执行前同时执行多个拦截动作，如用户登录检查  、登录日志记录及权限检查等，这时，可以把多个拦截器组成一个拦截器栈。在  使用时，可以将栈内的多个拦截器当成一个整体来引用。当拦截器栈被附加到一  个Action时，在执行Action之前必须执行拦截器栈中的每一个拦截器。</code></pre><blockquote><ul><li>定义拦截器使用<interceptors>元素和<interceptor-stack>子元素<br>当配置多个拦截器时，需要使用<interceptor-ref>元素来指定多个拦截器<br>配置语法如下:</interceptor-ref></interceptor-stack></interceptors></li></ul></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">interceptors</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">interceptor-stack</span> <span class="attr">name</span>=<span class="string">"interceptorStackName"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"interceptorName"</span>&gt;</span><span class="tag">&lt;/<span class="name">interceptor-ref</span>&gt;</span></span><br><span class="line">        ....</span><br><span class="line">      <span class="tag">&lt;/<span class="name">interceptor-stack</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">interceptors</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><ul><li>在上述语法中，interceptorStackName值表示配置的拦截器栈的名称<br>interceptorName值表示拦截器的名称。除此之外，在一个拦截器栈中还可以<br>包括另一个拦截器栈。代码如下：</li></ul></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"default"</span> <span class="attr">namespace</span>=<span class="string">"/"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span> &gt;</span></span><br><span class="line">  <span class="comment">&lt;!--声明拦截器--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">interceptors</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"interceptor1"</span> <span class="attr">class</span>=<span class="string">"interceptorClass"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"interceptor2"</span> <span class="attr">class</span>=<span class="string">"interceptorClass"</span> /&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--定义一个拦截器栈myStack，该拦截器栈中包括两个拦截器和一个拦截器栈--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">interceptor-stack</span> <span class="attr">name</span>=<span class="string">"myStack"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"defaultStack"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"interceptor1"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"interceptor1"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">interceptor-stack</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">interceptors</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><ul><li>在上述代码中，定义的拦截器栈是myStack，在myStack栈中，除了引用两个<br>自定义的拦截器interceptor1和interceptor2外，还引用了一个内置拦截器栈<br>defalultStack，这个拦截器是必须要引入的。</li></ul></blockquote><h3 id="默认拦截器"><a href="#默认拦截器" class="headerlink" title="默认拦截器"></a>默认拦截器</h3><blockquote><ul><li>如果想对一个包下的action使用相同的拦截器，则需要为该包中的每一个<br>action都重复指定同一个拦截器，这样写过于繁琐。这时，可以使用默认拦截<br>器，默认拦截器可以对其指定的包中所有的action都能起到拦截的作用。一<br>旦为某一个包指定了默认拦截器，并且该包中的action未显式地指定拦截器<br>则会使用默认拦截器。反之，<strong>若此包中的action中显式地指出了某个拦截器<br>，则该默认拦截器将会被屏蔽。此时，如果还想使用默认拦截器，则需要用<br>户手动配置该默认拦截器的引用。</strong></li></ul></blockquote><blockquote><ul><li>配置默认拦截器需要使用<default-interceptor-ref>元素，此元素为<br><package>元素的子元素。其语法如下</package></default-interceptor-ref></li></ul></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">default-interceptor-ref</span> <span class="attr">name</span>=<span class="string">"拦截器(栈)的名称"</span> /&gt;</span></span><br></pre></td></tr></table></figure><blockquote><ul><li>上述语法格式中，name属性的值必须是已存在的拦截器或拦截器栈的<br>名称。下面用该语法格式配置一个默认拦截器，示例代码如下：</li></ul></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"default"</span> <span class="attr">namespace</span>=<span class="string">"/"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span> &gt;</span></span><br><span class="line">  <span class="comment">&lt;!--声明拦截器--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">interceptors</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"interceptor1"</span> <span class="attr">class</span>=<span class="string">"interceptorClass"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"interceptor2"</span> <span class="attr">class</span>=<span class="string">"interceptorClass"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--定义一个配置默认拦截器栈myStack，该拦截器栈包含两个拦截器和一个拦截器栈--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">interceptor-stack</span> <span class="attr">name</span>=<span class="string">"myStack"</span> &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"interceptor1"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"interceptor2"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"defaultStack"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">interceptor-stack</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置包下的默认配置器，既可以是拦截器，也可以是拦截器栈--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">default-interceptor-ref</span> <span class="attr">name</span>=<span class="string">"myStack"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"login"</span> <span class="attr">class</span>=<span class="string">"cn.itcast.action.LoginAction"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"input"</span>&gt;</span>/login.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">interceptors</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><ul><li>在上面代码中，指定了包下面的的默认拦截器为一个拦截器栈，该拦截器<br>栈将会作于包下所有的action。</li></ul></blockquote><p><strong>注意</strong>：　每一个包下只能定义一个默认拦截器，如果需要多个拦截器作为默<br>认拦截器，则可以将这些拦截器定义为一个拦截器栈，再将这个拦截器作为默认<br>默认拦截器即可。</p><h3 id="自定义拦截器"><a href="#自定义拦截器" class="headerlink" title="自定义拦截器"></a>自定义拦截器</h3><h4 id="实现自定义拦截器"><a href="#实现自定义拦截器" class="headerlink" title="实现自定义拦截器"></a><em>实现自定义拦截器</em></h4><pre><code>在程序开发过程中，如果需要开发自己的拦截器类，就需要直接或间接地实现      com.opensymphony.xwork2.interceptor.Interceptor接口，具体代码如下:</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Interceptor</span> <span class="keyword">extends</span> <span class="title">Serializable</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">String <span class="title">interceptor</span><span class="params">(ActionInvocation invocation)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该接口提供了一下三个方法。</p><blockquote><ul><li>void init(): 该方法在拦截器被创建之后会立即被调用，它在拦截器的生命<br>周期内只能被调用一次。可以在该方法对相关资源进行必要的初始化。</li></ul></blockquote><blockquote><ul><li>void destroy(): 该方法和init()方法相对应，在拦截器实例被销毁之前，将<br>调用该方法来释放与拦截器相关的资源。它在拦截器的生命周期内也只被调用一次</li></ul></blockquote><blockquote><ul><li>String interceptor(ActionInvocation invocation) throws Exception:<br>该方法是拦截器的核心方法，用来添加真正执行拦截工作的代码，实现具体的拦截<br>操作。它返回一个字符串作为逻辑视图，系统根据返回的字符串跳转到对应的视图<br>资源。每拦截一个动作请求，该方法就会被调用一次。该方法的ActionInvocation<br>参数包含了被拦截的Action的引用，可以通过该参数的invoke()方法，将控制权交<br>给下一个拦截器或者转给Action的execute()方法。</li></ul></blockquote><ul><li>如果需要自定义的拦截器，只需要实现Interceptor接口的三个方法即可。然而在<br>实际开发过程中，除了实现Interceptor接口可以自定义拦截器外，更常用的一种<br>方式是继承抽象拦截类AbstractInterceptor。该类实现了Interceptor接口，并且<br>提供了init()方法和destroy()方法的空实现。使用时，可以直接继承该抽象类，而并不用实现那些不必要的方法。拦截器类AbstractInterceptor中定义的方法如下所示：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractInterceptor</span> <span class="keyword">implements</span> <span class="title">Interceptor</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> String <span class="title">interceptor</span><span class="params">(ActionInvocation invocation)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>从上述代码中可以看出，AbstractInterceptor类已经实现了Interceptor接口的<br>所有方法，一般情况下，只需继承AbstractInterceptor类，实现interceptor()方法<br>就可以创建自定义拦截器。</li></ul><blockquote><ul><li>只有当自定义拦截器<strong><em>需要打开系统资源时</em></strong>，才需要<strong><em>覆盖AbstractInterceptor类<br>的init()方法和destroy()方法。</em></strong>与实现Interceptor接口相比，继承AbstractInte-rceptor类的方法更为简单。</li></ul></blockquote><!-- rebuild by neat -->]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Struts2的执行流程分析</title>
      <link href="/2019/08/04/Struts2%E7%9A%84%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90/"/>
      <url>/2019/08/04/Struts2%E7%9A%84%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<!-- build time:Wed Oct 09 2019 13:41:44 GMT+0800 (CST) --><hr><h3 id="Struts介绍"><a href="#Struts介绍" class="headerlink" title="Struts介绍"></a>Struts介绍</h3><pre><code>    Struts2是一个基于MVC设计模式的Web应用框架，它本质上相当于一个servlet，在MVC设计模式中，Struts2作为控制器(Controller)立模型与视图的数据交互。Struts 2是Struts的下一代产品，是在 struts 1和WebWork的技术基础上进行了合并的全新的Struts 2框架。其全新的Struts 2的体系结构与Struts 1的体系结构差别巨大。Struts 2以WebWork为核心，采用拦截器的机制来处理用户的请求，这样的设计也使得业务逻辑控制器能够与ServletAPI完全脱离开，所以Struts 2可以理解为WebWork的更新产品。虽然从Struts 1到Struts 2有着太大的变化，但是相对于WebWork，Struts 2的变化很小。</code></pre><a id="more"></a><hr><h3 id="执行流程分析"><a href="#执行流程分析" class="headerlink" title="执行流程分析"></a>执行流程分析</h3><blockquote><ol><li>浏览器发送一个请求(HttpServletRequest)</li><li>程序会调用StrutsPrepareAndExcuteFilter, 然后询问ActionMapper请求是否需要调用某个Action</li><li>如果ActionMapper决定调用某个Action，StrutsPrepareAndExcuteFilter会把请求的处理交给ActionProxy.</li><li>ActionProxy通过配置管理器(Configuration Manager)从配置文件(struts.xml)中读取框架的配置信息，从而找到需要调用的Action类</li><li>ActionProxy会创建一个ActionInvocation的实例。</li></ol></blockquote><blockquote><ol start="6"><li>ActionInvocation使用命名模式来调用Action，在调用Action前，会依次调用所有配置的拦截器(Intercepter1、Intercepter2、…)。</li><li>一旦Action执行完，返回结果字符串，ActionInvocation就会负责查找结果字符串对应的result，然后执行这个result。通常情况下result会调用一些模板(JSP等)来呈现页面.</li><li>产生的result信息返回给ActionInvocation，此过程中拦截器会被再次执行(顺序与Action执行之前相反).</li><li>产生一个HttpServletResponse的响应行为，通过SrutsPrepareAndExecuteFilter反馈给客户端</li></ol></blockquote><h3 id="xml配置信息模板"><a href="#xml配置信息模板" class="headerlink" title="xml配置信息模板"></a>xml配置信息模板</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE struts PUBLIC</span></span><br><span class="line"><span class="meta">        "-//Apache Software Foundation//DTD Struts Configuration 2.5//EN"</span></span><br><span class="line"><span class="meta">        "http://struts.apache.org/dtds/struts-2.5.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"hello"</span> <span class="attr">namespace</span>=<span class="string">"/"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"HelloAction"</span> <span class="attr">class</span>=<span class="string">"cn.lacknb.TestAction"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span>&gt;</span>/success.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> struts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring入门学习</title>
      <link href="/2019/07/20/Spring%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/"/>
      <url>/2019/07/20/Spring%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<!-- build time:Wed Oct 09 2019 13:41:44 GMT+0800 (CST) --><hr><hr><h2 id="1-编写流程"><a href="#1-编写流程" class="headerlink" title="1. 编写流程"></a>1. 编写流程</h2><blockquote><ul><li>下载Spring的开发包<br>下载地址： <a href="https://repo.spring.io/libs-release-local/org/springframework/spring/" title="Spring开发包下载" target="_blank" rel="noopener">点击跳转</a></li><li>导入Spring的jar包</li></ul></blockquote><a id="more"></a><blockquote><ul><li>配置Spring的核心xml文件</li><li>在程序中读取Spring的配置文件来获取Bean【Bean其实就是一个new好的对象】</li></ul></blockquote><p><strong><em>spring-core-5.0.2.RELEASE.jar</em></strong></p><pre><code>包含Spring框架基本的核心工具类，Spring其他组件都要使用这个包里的类，是其他组件的核心</code></pre><p><strong><em>spring-beans-5.0.2.RELEASE.jar</em></strong></p><pre><code>所有应用都要用到的，它包含访问配置文件、创建和管理Bean，以及进行Inversion of Control(Ioc)/Dependency Injection(DI)操作相关的所有类</code></pre><p><strong><em>spring-context-5.0.2.RELEASE.jar</em></strong></p><pre><code>Spring提供在基础IoC功能上的扩展服务，此外还提供许多企业级服务的支持，如邮件服务、任务调度、JNDI定位、EJB集成、远程访问、缓存以及各种视图层框架的封装等。</code></pre><p><strong><em>spring-expression-5.0.2.RELEASE.jar</em></strong></p><pre><code>Spring表达式语言</code></pre><p><strong><em>commons-logging-1.2.jar</em></strong></p><pre><code>第三方的，主要用于处理日志</code></pre><blockquote><ul><li>写个配置文件beans.xml 在src根目录下 模板在下面</li></ul></blockquote><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;  &lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;         xsi:schemaLocation=&quot;          http://www.springframework.org/schema/beans                         http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt;   &lt;!-- bean definitions here --&gt;&lt;/beans&gt;</code></pre><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><blockquote><ul><li>创建一个UserService接口</li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.spring;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li>创建一个实现类实现add方法 UserImpl</li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.spring;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"添加用户...."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 以前的运行方式</span></span><br><span class="line">        <span class="comment">//UserService add = new UserImpl();</span></span><br><span class="line">       <span class="comment">// add.add();</span></span><br><span class="line">        <span class="comment">// 现在的运行方式</span></span><br><span class="line">        <span class="comment">// 使用UserService方式从spring容器中获取</span></span><br><span class="line">        <span class="comment">// 1. 加载配置文件beans.xml 内部就会创建对象</span></span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line">        <span class="comment">// 2. 从spring容器获取UserService对象</span></span><br><span class="line">        UserImpl add = (UserImpl) context.getBean(<span class="string">"userService"</span>);  </span><br><span class="line">        <span class="comment">// 这里的字符串是beans.xml文件中的id</span></span><br><span class="line">        add.add();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li>beans.xml文件的配置</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</span><br><span class="line">       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">       xsi:schemaLocation=&quot;</span><br><span class="line">http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt; &lt;!-- bean definitions here --&gt;</span><br><span class="line">    &lt;!-- bean in here --&gt;</span><br><span class="line">    &lt;bean id=&quot;userService&quot; class=&quot;com.spring.UserImpl&quot;&gt;&lt;/bean&gt;</span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">spring内部创建对象的原理：</span><br><span class="line">1. 解析xml文件，获取类名、id属性</span><br><span class="line">2. 通过反射，用类型创建对象</span><br><span class="line">3. 给创建的对象赋值</span><br></pre></td></tr></table></figure><h3 id="加载spring容器的三种方式"><a href="#加载spring容器的三种方式" class="headerlink" title="加载spring容器的三种方式"></a>加载spring容器的三种方式</h3><blockquote><ol><li>类路径获得配置文件</li></ol></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line"><span class="comment">// 如果是放在包内</span></span><br><span class="line"><span class="comment">// new ClassPathXmlApplicationContext("com/spring/beans.xml")</span></span><br></pre></td></tr></table></figure><blockquote><ol start="2"><li>文件系统路径获得配置文件</li></ol></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ApplicationContext context = <span class="keyword">new</span> FileSystemXmlApplicationContext(<span class="string">"</span></span><br><span class="line"><span class="string">/home/nianshao/IdeaProjects/Test02/SpringTest01/src/beans.xml</span></span><br><span class="line"><span class="string">"</span>)</span><br></pre></td></tr></table></figure><blockquote><ol start="3"><li>使用BeanFactory(了解)</li></ol></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String path = <span class="string">"/home/nianshao/IdeaProjects/Test02/SpringTest01/src/beans.xml"</span>;</span><br><span class="line">BeanFactory factory = <span class="keyword">new</span> XmlBeanFactory(<span class="keyword">new</span> FileSystemResource(path));</span><br><span class="line">UserImpl add = (UserImpl) factory.getBean(<span class="string">"userService"</span>);</span><br></pre></td></tr></table></figure><h4 id="多配置文件的使用"><a href="#多配置文件的使用" class="headerlink" title="多配置文件的使用"></a>多配置文件的使用</h4><blockquote><ul><li>当开发的项目较大时，使用一个spring配置文件是比较复杂的<br>其中可能具有几千行的配置信息，在其中查找某一个Bean对象的配<br>置是非常困难的。所以在spring中可以定义多个配置文件，将一类<br>配置放在一个文件中。<br>例如：</li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="keyword">new</span> String[]&#123;<span class="string">"applicationContext.xml"</span>, <span class="string">"applicationContext-part2.xml"</span>&#125;);</span><br></pre></td></tr></table></figure><h3 id="BeanFactory与Application对比"><a href="#BeanFactory与Application对比" class="headerlink" title="BeanFactory与Application对比"></a>BeanFactory与Application对比</h3><blockquote><ul><li>BeanFactory采取延迟加载，第一次getBean时才会初始化Bean</li><li>ApplicationContext采用即时加载，是对BeanFactory的扩展，<br>提供了更多的功能</li></ul></blockquote><pre><code>* 国际化处理* 事件传递* Bean自动装配* 各种不同应用层的Context实现</code></pre><h3 id="装配Bean的三种方式，-所谓的装配Bean就是在xml文件中写一个bean标签"><a href="#装配Bean的三种方式，-所谓的装配Bean就是在xml文件中写一个bean标签" class="headerlink" title="装配Bean的三种方式， 所谓的装配Bean就是在xml文件中写一个bean标签"></a>装配Bean的三种方式， 所谓的装配Bean就是在xml文件中写一个bean标签</h3><blockquote><ol><li>通过构造方法实例化（直接new实现类）<br><img src="https://img03.sogoucdn.com/app/a/100520146/9cc7c76ccb90b8d6f792999d8f70e959" alt="第一种方式" title="第一种方式"></li><li>使用静态工厂方法实例化, 创建类UserServiceFactory01<br><img src="https://img04.sogoucdn.com/app/a/100520146/9e68e4acda6ea6ae8ac3a55bf3ad991d" alt="UTOOLS1563677902341.png" title="静态工厂类"><br>xml文件中的bean</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--    第二种方式 通过静态工厂方法UserImpl02--&gt;</span><br><span class="line">    &lt;bean id=&quot;userService01&quot; class=&quot;com.spring.UserServiceFactory01&quot; factory-method=&quot;createUserService&quot;&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br></pre></td></tr></table></figure><blockquote><ol start="3"><li>使用实例工厂方法实例化， 创建类UserServiceFactory02<br><img src="https://img02.sogoucdn.com/app/a/100520146/9ea79d4b1a2b6ad02ccb78116587d6b6" alt="UTOOLS1563678167462.png" title="非静态工厂类"><br>xml文件中的bean</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--    第三种方式 通过实例的工厂方法--&gt;</span><br><span class="line">    &lt;bean id=&quot;userService02&quot; class=&quot;com.spring.UserServiceFactory02&quot;/&gt;</span><br><span class="line">    &lt;bean id=&quot;factory&quot; factory-bean=&quot;userService02&quot; factory-method=&quot;createUserService&quot;/&gt;</span><br></pre></td></tr></table></figure><p><strong><em>代码的实现</em></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.spring;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringTest01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        装配Bean的三种方式， 所谓的装配Bean就是在xml文件中写一个bean标签</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line">        <span class="comment">// 第一种方式 创建对象的方式</span></span><br><span class="line">        UserService user01 = (UserService) context.getBean(<span class="string">"userService"</span>);</span><br><span class="line">        user01.add();</span><br><span class="line">        <span class="comment">// 第二种方式 静态工厂方法</span></span><br><span class="line">        <span class="comment">// UserService user02 = UserServiceFactory01.createUserService();</span></span><br><span class="line">        UserService user02 = (UserService) context.getBean(<span class="string">"userService01"</span>);</span><br><span class="line">        user02.add();</span><br><span class="line">        <span class="comment">// 第三种方式 实例工厂</span></span><br><span class="line">        <span class="comment">// UserServiceFactory02 factory = new UserServiceFactory02();</span></span><br><span class="line">        <span class="comment">// UserService userService03 = context.getBean("userService02");</span></span><br><span class="line">        <span class="comment">// UserService userService03 = factory.createUserService();</span></span><br><span class="line">        <span class="comment">// - ----------------------------------------------------</span></span><br><span class="line">        <span class="comment">// UserServiceFactory02 factory02 = (UserServiceFactory02) context.getBean("userService02");</span></span><br><span class="line">        <span class="comment">// UserService userService03 = factory02.createUserService();</span></span><br><span class="line">        UserService userService03 = (UserService) context.getBean(<span class="string">"factory"</span>);</span><br><span class="line">        userService03.add();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Bean的生命周期"><a href="#Bean的生命周期" class="headerlink" title="Bean的生命周期"></a>Bean的生命周期</h2><pre><code>1. instantiate bean对象实例化2. populate properties封装属性3. 如果Bean实现BeanNameAware 执行setBeanName4. 如果Bean实现BeanFactoryAware 执行setBeanFactory， 获取容器5. 如果存在类实现BeanPostProcessor (后处理Bean)，执行postProcessBeforeInitialization6. 如果Bean实现InitializingBean 执行afterPropertiesSet7. 调用&lt;bean init-method=&quot;init&quot;&gt;执行初始化方法init8. 如果存在类实现BeanPostProcessor(处理bean), 执行postProcessAfterInitialization 执行业务处理  9. 如果Bean实现DisposableBean执行destroy方法  10. 调用&lt;bean destroy-method=&quot;cusomerDestroy&quot;&gt; 指定销毁方法customerDestroy</code></pre><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scrapy爬虫项目的创建和设置</title>
      <link href="/2019/07/20/scrapy%E7%88%AC%E8%99%AB%E9%A1%B9%E7%9B%AE%E7%9A%84%E5%88%9B%E5%BB%BA%E5%92%8C%E8%AE%BE%E7%BD%AE/"/>
      <url>/2019/07/20/scrapy%E7%88%AC%E8%99%AB%E9%A1%B9%E7%9B%AE%E7%9A%84%E5%88%9B%E5%BB%BA%E5%92%8C%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<!-- build time:Wed Oct 09 2019 13:41:44 GMT+0800 (CST) --><h1 id="scrapy爬虫项目的创建基本设置"><a href="#scrapy爬虫项目的创建基本设置" class="headerlink" title="scrapy爬虫项目的创建基本设置"></a>scrapy爬虫项目的创建基本设置</h1><h3 id="一、-创建指令"><a href="#一、-创建指令" class="headerlink" title="一、 创建指令"></a>一、 创建指令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$: scrapy startproject 项目名</span><br><span class="line"><span class="comment"># 例如</span></span><br><span class="line">$: scrapy startproject MySpider</span><br></pre></td></tr></table></figure><a id="more"></a><blockquote><ul><li>cd 项目名</li></ul></blockquote><pre><code>进入爬虫项目的目录生成爬虫文件（模板）</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$: scrapy genspider 爬虫名字 爬虫的网址</span><br><span class="line"><span class="comment"># 例如</span></span><br><span class="line">$: scrapy genspider <span class="built_in">test</span> baidu.com</span><br></pre></td></tr></table></figure><h3 id="二、-setting文件的设置"><a href="#二、-setting文件的设置" class="headerlink" title="二、 setting文件的设置"></a>二、 setting文件的设置</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这里是是否准守爬虫规则， 默认是True， 将这里改成False</span></span><br><span class="line"><span class="comment"># Obey robots.txt rules</span></span><br><span class="line">ROBOTSTXT_OBEY = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置控制台日志的显示，等级低于warning的日志信息，就不会显示出来</span></span><br><span class="line">LOG_LEVEL = <span class="string">'WARNING'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># headers取消注释， 还有UA标识</span></span><br><span class="line">DEFAULT_REQUEST_HEADERS = &#123;</span><br><span class="line">   <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'</span>,</span><br><span class="line">   <span class="string">'Accept-Language'</span>: <span class="string">'en'</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">USER_AGENT = <span class="string">'maoyan (+http://www.yourdomain.com)'</span></span><br><span class="line"><span class="comment"># 将其中的内容换成浏览器标识</span></span><br></pre></td></tr></table></figure><h4 id="下面是爬取并下载一个网站的高清壁纸的setting文件"><a href="#下面是爬取并下载一个网站的高清壁纸的setting文件" class="headerlink" title="下面是爬取并下载一个网站的高清壁纸的setting文件"></a>下面是爬取并下载一个网站的高清壁纸的setting文件</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Scrapy settings for wallpaper project</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For simplicity, this file contains only settings considered important or</span></span><br><span class="line"><span class="comment"># commonly used. You can find more settings consulting the documentation:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     https://doc.scrapy.org/en/latest/topics/settings.html</span></span><br><span class="line"><span class="comment">#     https://doc.scrapy.org/en/latest/topics/downloader-middleware.html</span></span><br><span class="line"><span class="comment">#     https://doc.scrapy.org/en/latest/topics/spider-middleware.html</span></span><br><span class="line"></span><br><span class="line">BOT_NAME = <span class="string">'wallpaper'</span></span><br><span class="line"></span><br><span class="line">SPIDER_MODULES = [<span class="string">'wallpaper.spiders'</span>]</span><br><span class="line">NEWSPIDER_MODULE = <span class="string">'wallpaper.spiders'</span></span><br><span class="line"></span><br><span class="line">LOG_LEVEL = <span class="string">"WARNING"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Crawl responsibly by identifying yourself (and your website) on the user-agent</span></span><br><span class="line">USER_AGENT = <span class="string">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Obey robots.txt rules</span></span><br><span class="line">ROBOTSTXT_OBEY = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure maximum concurrent requests performed by Scrapy (default: 16)</span></span><br><span class="line"><span class="comment"># CONCURRENT_REQUESTS = 32</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure a delay for requests for the same website (default: 0)</span></span><br><span class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/settings.html#download-delay</span></span><br><span class="line"><span class="comment"># See also autothrottle settings and docs</span></span><br><span class="line"><span class="comment"># DOWNLOAD_DELAY = 3</span></span><br><span class="line"><span class="comment"># The download delay setting will honor only one of:</span></span><br><span class="line"><span class="comment"># CONCURRENT_REQUESTS_PER_DOMAIN = 16</span></span><br><span class="line"><span class="comment"># CONCURRENT_REQUESTS_PER_IP = 16</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable cookies (enabled by default)</span></span><br><span class="line"><span class="comment"># COOKIES_ENABLED = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable Telnet Console (enabled by default)</span></span><br><span class="line"><span class="comment"># TELNETCONSOLE_ENABLED = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Override the default request headers:</span></span><br><span class="line">DEFAULT_REQUEST_HEADERS = &#123;</span><br><span class="line">    <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'</span>,</span><br><span class="line">    <span class="string">'Accept-Language'</span>: <span class="string">'en'</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable spider middlewares</span></span><br><span class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/spider-middleware.html</span></span><br><span class="line"><span class="comment"># SPIDER_MIDDLEWARES = &#123;</span></span><br><span class="line"><span class="comment">#    'wallpaper.middlewares.WallpaperSpiderMiddleware': 543,</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable downloader middlewares</span></span><br><span class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/downloader-middleware.html</span></span><br><span class="line"><span class="comment"># DOWNLOADER_MIDDLEWARES = &#123;</span></span><br><span class="line"><span class="comment">#    'wallpaper.middlewares.WallpaperDownloaderMiddleware': 543,</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable extensions</span></span><br><span class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/extensions.html</span></span><br><span class="line"><span class="comment"># EXTENSIONS = &#123;</span></span><br><span class="line"><span class="comment">#    'scrapy.extensions.telnet.TelnetConsole': None,</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure item pipelines</span></span><br><span class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">    <span class="string">'scrapy.pipelines.images.ImagesPipeline'</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="comment"># 'scrapy.pipelines.files.FilesPipeline': 2,</span></span><br><span class="line">    <span class="string">'wallpaper.pipelines.WallpaperPipeline'</span>: <span class="number">300</span>,</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 设置下载参数</span></span><br><span class="line"><span class="comment"># FILES_STORE = "D:"  # 文件的存储路径</span></span><br><span class="line">IMAGES_STORE = <span class="string">"D:/images"</span>  <span class="comment"># 图片的存储路径</span></span><br><span class="line"><span class="comment"># 避免下载最近90天已经下载过的文件内容</span></span><br><span class="line">FILES_EXPIRES = <span class="number">90</span></span><br><span class="line"><span class="comment"># 避免下载最近90天已经下载过的图像内容</span></span><br><span class="line">IMAGES_EXPIRES = <span class="number">0</span></span><br><span class="line"><span class="comment"># 设置图片缩略图</span></span><br><span class="line">IMAGES_THUMBS = &#123;</span><br><span class="line">    <span class="string">'small'</span>: (<span class="number">50</span>, <span class="number">50</span>),</span><br><span class="line">    <span class="string">'big'</span>: (<span class="number">250</span>, <span class="number">250</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#该字段的值为xxxItem中定义的存储图片链接的img_urls字段</span></span><br><span class="line">IMAGES_URLS_FIELD = <span class="string">"img_urls"</span></span><br><span class="line"><span class="comment"># 该字段的值为xxxItem中定义的存储图片信息的imgages字段</span></span><br><span class="line">IMAGES_RESULT_FIELD = <span class="string">"images"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 图片过滤器，最小高度和宽度，低于此尺寸不下载</span></span><br><span class="line">IMAGES_MIN_HEIGHT = <span class="number">110</span></span><br><span class="line">IMAGES_MIN_WIDTH = <span class="number">110</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable and configure the AutoThrottle extension (disabled by default)</span></span><br><span class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/autothrottle.html</span></span><br><span class="line"><span class="comment"># AUTOTHROTTLE_ENABLED = True</span></span><br><span class="line"><span class="comment"># The initial download delay</span></span><br><span class="line"><span class="comment"># AUTOTHROTTLE_START_DELAY = 5</span></span><br><span class="line"><span class="comment"># The maximum download delay to be set in case of high latencies</span></span><br><span class="line"><span class="comment"># AUTOTHROTTLE_MAX_DELAY = 60</span></span><br><span class="line"><span class="comment"># The average number of requests Scrapy should be sending in parallel to</span></span><br><span class="line"><span class="comment"># each remote server</span></span><br><span class="line"><span class="comment"># AUTOTHROTTLE_TARGET_CONCURRENCY = 1.0</span></span><br><span class="line"><span class="comment"># Enable showing throttling stats for every response received:</span></span><br><span class="line"><span class="comment"># AUTOTHROTTLE_DEBUG = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable and configure HTTP caching (disabled by default)</span></span><br><span class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/downloader-middleware.html#httpcache-middleware-settings</span></span><br><span class="line"><span class="comment"># HTTPCACHE_ENABLED = True</span></span><br><span class="line"><span class="comment"># HTTPCACHE_EXPIRATION_SECS = 0</span></span><br><span class="line"><span class="comment"># HTTPCACHE_DIR = 'httpcache'</span></span><br><span class="line"><span class="comment"># HTTPCACHE_IGNORE_HTTP_CODES = []</span></span><br><span class="line"><span class="comment"># HTTPCACHE_STORAGE = 'scrapy.extensions.httpcache.FilesystemCacheStorage'</span></span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
            <tag> scrapy </tag>
            
            <tag> 爬虫框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019年7月20日</title>
      <link href="/2019/07/20/2019%E5%B9%B47%E6%9C%8820%E6%97%A5/"/>
      <url>/2019/07/20/2019%E5%B9%B47%E6%9C%8820%E6%97%A5/</url>
      
        <content type="html"><![CDATA[<!-- build time:Wed Oct 09 2019 13:41:44 GMT+0800 (CST) --><p>title: 2019年7月20日开始我的博客<br>date:<br>tags: [开始, 创建博客]<br>categories: 起始站</p><hr><h1 id="2019年7月20开始博客之旅"><a href="#2019年7月20开始博客之旅" class="headerlink" title="2019年7月20开始博客之旅"></a>2019年7月20开始博客之旅</h1><a id="more"></a><pre><code>2019年7月20日开始我的博客之旅，记录下平时学习的笔记和一些出现的问题，方便日后的使用。</code></pre><h5 id="python高亮的代码显示"><a href="#python高亮的代码显示" class="headerlink" title="python高亮的代码显示"></a>python高亮的代码显示</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">say_hello</span><span class="params">()</span>:</span></span><br><span class="line">print(<span class="string">'hello world'</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">say_hello()</span><br></pre></td></tr></table></figure><h5 id="Java代码的高亮显示"><a href="#Java代码的高亮显示" class="headerlink" title="Java代码的高亮显示"></a>Java代码的高亮显示</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span></span>&#123;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span>&#123;</span><br><span class="line">     System.out.println(<span class="string">"Hello World"</span>);</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h5 id="JavaScript代码显示"><a href="#JavaScript代码显示" class="headerlink" title="JavaScript代码显示"></a>JavaScript代码显示</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">HelloWorld</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   alert(<span class="string">"Hello World"</span>)</span><br><span class="line">   &#125;</span><br><span class="line">   $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   HelloWorld()</span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
