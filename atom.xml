<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>I&#39;m Learning</title>
  
  <subtitle>年复一年, 日复一日.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.lacknb.cn/"/>
  <updated>2019-10-14T13:15:11.446Z</updated>
  <id>https://www.lacknb.cn/</id>
  
  <author>
    <name>代码与我</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mybatis注解开发（以及动态sql）</title>
    <link href="https://www.lacknb.cn/2019/10/14/mybatis%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91%EF%BC%88%E4%BB%A5%E5%8F%8A%E5%8A%A8%E6%80%81sql%EF%BC%89/"/>
    <id>https://www.lacknb.cn/2019/10/14/mybatis注解开发（以及动态sql）/</id>
    <published>2019-10-14T13:14:00.000Z</published>
    <updated>2019-10-14T13:15:11.446Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Oct 17 2019 21:00:00 GMT+0800 (CST) --><h2 id="常用的注解"><a href="#常用的注解" class="headerlink" title="常用的注解"></a>常用的注解</h2><ul><li>@Select</li><li>@Insert</li><li>@Delete</li><li>@Update</li><li>@SelectKey(“statement = “select last_insert_id() 或者（@@identify） “, keyProperty = “id”, before = false, resultType = int.class) // 查询插入数据之后的, 当前主键的值<ul><li>statement SQL语句</li><li>keyProperty 将查询的结果封装到属性</li><li>before 如果为false ， 在插入之后， 进行查询， 否则， 在插入之前查询</li><li>resultType 将查询的结果封装成的类型</li></ul></li><li>@ResultMap</li><li>@Results</li><li>@Result<a id="more"></a></li></ul><h2 id="动态sql"><a href="#动态sql" class="headerlink" title="动态sql"></a>动态sql</h2><h3 id="通过自定义一个类-在方法中写动态sql-然后返回"><a href="#通过自定义一个类-在方法中写动态sql-然后返回" class="headerlink" title="通过自定义一个类, 在方法中写动态sql, 然后返回."></a>通过自定义一个类, 在方法中写动态sql, 然后返回.</h3><ul><li>@SelectProvider(type = MySqlProvider.class, method = 方法名)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MySqlProvider</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">mysql01</span><span class="params">(Student student)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (student.getAge() == <span class="keyword">null</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"select * from student"</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"select * from user where age &gt; #&#123;age&#125;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>模糊查询</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">mysql01</span><span class="params">(Student student)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (student.getName() != <span class="keyword">null</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"select * from student where name like '%' #&#123;name&#125; '%'"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"select * from student"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>按照复合条件查询， 单个传输多个参数时，并且需要用@Param（“name” String name）， 需要用map去接收</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 模糊查询</span></span><br><span class="line">    <span class="meta">@SelectProvider</span>(type = MySqlUtils.class, method = <span class="string">"selectByName"</span>)</span><br><span class="line">    <span class="function">List&lt;Student&gt; <span class="title">selectByName</span><span class="params">(@Param(<span class="string">"name"</span>)</span> String name)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 当 传来的 是单个参数 或 多个参数时, 可以用map接收</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">selectByName</span><span class="params">(Map map)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (map.get(<span class="string">"name"</span>) != <span class="keyword">null</span> &amp;&amp; map.get(<span class="string">"name"</span>) != <span class="string">""</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"select * from student where sname like '%' #&#123;name&#125; '%'"</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"select * from student"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/10/14/KpucOf.png" alt="KpucOf.png"></p><ul><li>@InsertProvider<ul><li>@DeleteProvider</li></ul></li><li>@UpdateProvider</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加数据 动态sql</span></span><br><span class="line">    <span class="meta">@UpdateProvider</span>(type = MySqlUtils.class, method = <span class="string">"studentUpdate"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">studentUpdate</span><span class="params">(Student student)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改数据 动态sql</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">studentUpdate</span><span class="params">(Student student)</span></span>&#123;</span><br><span class="line">    StringBuffer sql = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">    sql.append(<span class="string">"update student set sno = #&#123;sno&#125;"</span>);  <span class="comment">// 这里设置sno = #&#123;sno&#125;是为了更好的拼接sql语句, 不影响最后结果</span></span><br><span class="line">    <span class="keyword">if</span> (student.getSname() != <span class="string">""</span> &amp;&amp; student.getSname() != <span class="keyword">null</span>)&#123;</span><br><span class="line">        sql.append(<span class="string">", sname = #&#123;sname&#125;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (student.getGender() != <span class="string">""</span> &amp;&amp; student.getGender() != <span class="keyword">null</span>)&#123;</span><br><span class="line">        sql.append(<span class="string">", gender = #&#123;gender&#125;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (student.getSage() &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        sql.append(<span class="string">", sage = #&#123;sage&#125;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    sql.append(<span class="string">" where sno = #&#123;sno&#125;"</span>);</span><br><span class="line">    <span class="keyword">return</span> sql.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="动态sql的另一种实现方式"><a href="#动态sql的另一种实现方式" class="headerlink" title="动态sql的另一种实现方式"></a>动态sql的另一种实现方式</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUpdateSql03</span><span class="params">(Student student)</span></span>&#123;</span><br><span class="line">    <span class="comment">// mybatis提供好的sql类 </span></span><br><span class="line">    <span class="comment">// new SQL()表示创建一个SQL类的对象</span></span><br><span class="line">    <span class="comment">// new SQL()&#123;&#125;表示创建一个SQL类的子类对象， 只不过这个子类叫什么名字  不知道， 没有指定</span></span><br><span class="line">    <span class="comment">// 这种写法叫做 匿名内部类</span></span><br><span class="line">    String sql = <span class="keyword">new</span> SQL()&#123;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.UPDATE(<span class="string">"student"</span>);</span><br><span class="line">            <span class="keyword">this</span>.SET(<span class="string">"id = #&#123;id&#125;"</span>);</span><br><span class="line">            <span class="keyword">if</span> (student.getName != <span class="keyword">null</span> &amp;&amp; student.getName != <span class="string">""</span>)&#123;</span><br><span class="line">                <span class="keyword">this</span>.SET(<span class="string">"name = #&#123;name&#125;"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (student.getAge &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">this</span>.SET(<span class="string">"age = #&#123;age&#125;"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (student.getScore &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">this</span>.SET(<span class="string">"score = #&#123;score&#125;"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">this</span>.SET(<span class="string">"where id = #&#123;id&#125;"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;.toString();</span><br><span class="line">    <span class="keyword">return</span> sql;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>模糊查询 动态sql的另外一种方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 模糊查询 的另一种方式</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span></span>&#123;</span><br><span class="line">    StudentDao dao = session.getMapper(StudentDao.class);</span><br><span class="line">    List&lt;Student&gt; students = dao.selectByName01(<span class="string">"二"</span>);</span><br><span class="line">    <span class="keyword">for</span> (Student student : students)&#123;</span><br><span class="line">        System.out.println(student);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 模糊查询的另一种方式</span></span><br><span class="line"><span class="meta">@SelectProvider</span>(type = MySqlUtils.class, method = <span class="string">"selectByName01"</span>) <span class="comment">// 这里的selcetByName是 类MySqlUtils中的方法名.</span></span><br><span class="line">  </span><br><span class="line"><span class="function">List&lt;Student&gt; <span class="title">selectByName01</span><span class="params">(@Param(<span class="string">"name"</span>)</span> String name)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 动态sql的另外一种方式</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">selectByName01</span><span class="params">(Map map)</span></span>&#123;</span><br><span class="line">    <span class="keyword">final</span> String name = (String) map.get(<span class="string">"name"</span>);</span><br><span class="line">     String sql = <span class="keyword">new</span> SQL()&#123;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.SELECT(<span class="string">"*"</span>);</span><br><span class="line">            <span class="keyword">this</span>.FROM(<span class="string">"student"</span>);</span><br><span class="line">            <span class="keyword">if</span> (name != <span class="keyword">null</span> &amp;&amp; name != <span class="string">""</span>)&#123;</span><br><span class="line">                <span class="keyword">this</span>.WHERE(<span class="string">"sname like '%' #&#123;name&#125; '%'"</span>);  <span class="comment">// % 和#&#123;name&#125;之间的空格不能少</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;.toString();</span><br><span class="line">  </span><br><span class="line">     <span class="keyword">return</span> sql;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/10/14/KpNSOJ.png" alt="KpNSOJ.png"></p></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Oct 17 2019 21:00:00 GMT+0800 (CST) --&gt;&lt;h2 id=&quot;常用的注解&quot;&gt;&lt;a href=&quot;#常用的注解&quot; class=&quot;headerlink&quot; title=&quot;常用的注解&quot;&gt;&lt;/a&gt;常用的注解&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;@Select&lt;/li&gt;&lt;li&gt;@Insert&lt;/li&gt;&lt;li&gt;@Delete&lt;/li&gt;&lt;li&gt;@Update&lt;/li&gt;&lt;li&gt;@SelectKey(“statement = “select last_insert_id() 或者（@@identify） “, keyProperty = “id”, before = false, resultType = int.class) // 查询插入数据之后的, 当前主键的值&lt;ul&gt;&lt;li&gt;statement SQL语句&lt;/li&gt;&lt;li&gt;keyProperty 将查询的结果封装到属性&lt;/li&gt;&lt;li&gt;before 如果为false ， 在插入之后， 进行查询， 否则， 在插入之前查询&lt;/li&gt;&lt;li&gt;resultType 将查询的结果封装成的类型&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;@ResultMap&lt;/li&gt;&lt;li&gt;@Results&lt;/li&gt;&lt;li&gt;@Result&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="mybatis" scheme="https://www.lacknb.cn/categories/mybatis/"/>
    
    
      <category term="mybatis" scheme="https://www.lacknb.cn/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>Deepin安装aria2实现百度云高速下载</title>
    <link href="https://www.lacknb.cn/2019/10/11/Deepin%E5%AE%89%E8%A3%85aria2%E5%AE%9E%E7%8E%B0%E7%99%BE%E5%BA%A6%E4%BA%91%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD/"/>
    <id>https://www.lacknb.cn/2019/10/11/Deepin安装aria2实现百度云高速下载/</id>
    <published>2019-10-11T13:07:00.000Z</published>
    <updated>2019-10-11T13:08:20.726Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Oct 17 2019 21:00:00 GMT+0800 (CST) --><h2 id="1-window用户可以使用pandown下载"><a href="#1-window用户可以使用pandown下载" class="headerlink" title="1. window用户可以使用pandown下载"></a>1. window用户可以使用pandown下载</h2><ul><li><a href="http://www.pandownload.com/" target="_blank" rel="noopener">点击跳转到官网</a><ul><li>有window版本</li><li>网页版</li><li>安卓版</li></ul></li></ul><blockquote><p>一般在我们使用百度云链接中baidu后面加上wp, 即可解析高速下载网址</p><p>例如: <a href="https://pan.baidu.com/s/1zjev-MwHpRUzBtEGTpqb-w" target="_blank" rel="noopener">https://pan.baidu.com/s/1zjev-MwHpRUzBtEGTpqb-w</a> 提取码:q736</p><p>修改之后: <a href="https://pan.baiduwp.com/s/1zjev-MwHpRUzBtEGTpqb-w" target="_blank" rel="noopener">https://pan.baiduwp.com/s/1zjev-MwHpRUzBtEGTpqb-w</a> 提取码:q736</p></blockquote><a id="more"></a><p><img src="https://s2.ax1x.com/2019/10/11/uqRdP0.png" alt="uqRdP0.png"></p><p><img src="https://s2.ax1x.com/2019/10/11/uqRsr4.png" alt="uqRsr4.png"></p><h2 id="2-deepin和Ubuntu安装aria2"><a href="#2-deepin和Ubuntu安装aria2" class="headerlink" title="2. deepin和Ubuntu安装aria2"></a>2. deepin和Ubuntu安装aria2</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install aria2</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /etc/aria2    <span class="comment">#新建文件夹  </span></span><br><span class="line">sudo touch /etc/aria2/aria2.session    <span class="comment">#新建session文件</span></span><br><span class="line">sudo chmod 777 /etc/aria2/aria2.session    <span class="comment">#设置aria2.session可写 </span></span><br><span class="line">sudo vi /etc/aria2/aria2.conf    <span class="comment">#创建配置文件</span></span><br></pre></td></tr></table></figure><ul><li>aria2.conf文件配置<ul><li>dir - 文件的保存路径 (需要我们修改一下)</li><li>默认端口是: 6800</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"># 文件的保存路径(可使用绝对路径或相对路径), 默认: 当前启动位置</span><br><span class="line">dir=/media/nianshao/59D5FCE97201B8A71/download02</span><br><span class="line"># NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项</span><br><span class="line">#file-allocation=none</span><br><span class="line"># 断点续传</span><br><span class="line">continue=true</span><br><span class="line"> </span><br><span class="line">## 下载连接相关 ##</span><br><span class="line"> </span><br><span class="line"># 最大同时下载任务数, 运行时可修改, 默认:5</span><br><span class="line">max-concurrent-downloads=300</span><br><span class="line"># 同一服务器连接数, 添加时可指定, 默认:1</span><br><span class="line">max-connection-per-server=15</span><br><span class="line"># 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M</span><br><span class="line"># 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载</span><br><span class="line">min-split-size=10M</span><br><span class="line"># 单个任务最大线程数, 添加时可指定, 默认:5</span><br><span class="line">split=50</span><br><span class="line"># 整体下载速度限制, 运行时可修改, 默认:0</span><br><span class="line">#max-overall-download-limit=0</span><br><span class="line"># 单个任务下载速度限制, 默认:0</span><br><span class="line">#max-download-limit=0</span><br><span class="line"># 整体上传速度限制, 运行时可修改, 默认:0</span><br><span class="line">#max-overall-upload-limit=0</span><br><span class="line"># 单个任务上传速度限制, 默认:0</span><br><span class="line">#max-upload-limit=0</span><br><span class="line"># 禁用IPv6, 默认:false</span><br><span class="line">disable-ipv6=false</span><br><span class="line"> </span><br><span class="line">## 进度保存相关 ##</span><br><span class="line"> </span><br><span class="line"># 从会话文件中读取下载任务</span><br><span class="line">input-file=/etc/aria2/aria2.session</span><br><span class="line"># 在Aria2退出时保存`错误/未完成`下载任务到会话文件</span><br><span class="line">save-session=/etc/aria2/aria2.session</span><br><span class="line"># 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0</span><br><span class="line">save-session-interval=10</span><br><span class="line"> </span><br><span class="line">## RPC相关设置 ##</span><br><span class="line"> </span><br><span class="line"># 启用RPC, 默认:false</span><br><span class="line">enable-rpc=true</span><br><span class="line"># 允许所有来源, 默认:false</span><br><span class="line">rpc-allow-origin-all=true</span><br><span class="line"># 允许非外部访问, 默认:false</span><br><span class="line">rpc-listen-all=true</span><br><span class="line"># 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同</span><br><span class="line">#event-poll=select</span><br><span class="line"># RPC监听端口, 端口被占用时可以修改, 默认:6800</span><br><span class="line">rpc-listen-port=6800</span><br><span class="line"># 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项</span><br><span class="line">rpc-secret=123456</span><br><span class="line"># 设置的RPC访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项</span><br><span class="line">#rpc-user=&lt;USER&gt;</span><br><span class="line"># 设置的RPC访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项</span><br><span class="line">#rpc-passwd=123456</span><br><span class="line"> </span><br><span class="line">## BT/PT下载相关 ##</span><br><span class="line"> </span><br><span class="line"># 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true</span><br><span class="line">follow-torrent=true</span><br><span class="line"># BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999</span><br><span class="line">listen-port=51413</span><br><span class="line"># 单个种子最大连接数, 默认:55</span><br><span class="line">#bt-max-peers=55</span><br><span class="line"># 打开DHT功能, PT需要禁用, 默认:true</span><br><span class="line">enable-dht=true</span><br><span class="line"># 打开IPv6 DHT功能, PT需要禁用</span><br><span class="line">enable-dht6=true</span><br><span class="line"># DHT网络监听端口, 默认:6881-6999</span><br><span class="line">#dht-listen-port=6881-6999</span><br><span class="line"># 本地节点查找, PT需要禁用, 默认:false</span><br><span class="line">bt-enable-lpd=true</span><br><span class="line"># 种子交换, PT需要禁用, 默认:true</span><br><span class="line">enable-peer-exchange=true</span><br><span class="line"># 每个种子限速, 对少种的PT很有用, 默认:50K</span><br><span class="line">#bt-request-peer-speed-limit=50K</span><br><span class="line"># 客户端伪装, PT需要</span><br><span class="line">peer-id-prefix=-TR2770-</span><br><span class="line">user-agent=Transmission/2.77</span><br><span class="line"># 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0</span><br><span class="line">seed-ratio=0</span><br><span class="line"># 强制保存会话, 即使任务已经完成, 默认:false</span><br><span class="line"># 较新的版本开启后会在任务完成后依然保留.aria2文件</span><br><span class="line">force-save=true</span><br><span class="line"># BT校验相关, 默认:true</span><br><span class="line">#bt-hash-check-seed=true</span><br><span class="line"># 继续之前的BT任务时, 无需再次校验, 默认:false</span><br><span class="line">bt-seed-unverified=true</span><br><span class="line"># 保存磁力链接元数据为种子文件(.torrent文件), 默认:false</span><br><span class="line">bt-save-metadata=true</span><br><span class="line">daemon=true</span><br></pre></td></tr></table></figure><ul><li>启动aria2</li></ul><p><code>sudo aria2c --conf-path=/etc/aria2/aria2.conf</code></p><ul><li>如果没有提示错误，按ctrl+c停止运行命令，转为后台运行：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo aria2c --conf-path=/etc/aria2/aria2.conf -D</span><br></pre></td></tr></table></figure><h2 id="Aria2-AriaNg客户端谷歌插件下载"><a href="#Aria2-AriaNg客户端谷歌插件下载" class="headerlink" title="Aria2-AriaNg客户端谷歌插件下载"></a>Aria2-AriaNg客户端谷歌插件下载</h2><p><strong>.可使用”Aria2-AriaNg客户端”</strong></p><p>*<em>下载链接：<a href="https://www.lanzous.com/b928310/" target="_blank" rel="noopener">https://www.lanzous.com/b928310/</a> *</em></p><p><strong>64位系统安装AriaNg.x64、32位系统安装AriaNg.x86或 安装QQ浏览器Aria2扩展组件</strong></p><p><strong>在“应用中心”搜索 “Aria2”在搜索到的“ Aria2 for Chrome ” 点击“立即安装”</strong></p><p><strong>就能安装好“**</strong> Aria2 for Chrome ”扩展组件**</p><p><strong>引用文章:</strong> <a href="https://blog.csdn.net/crazycui/article/details/52205908" target="_blank" rel="noopener">CSDN, 点击跳转</a></p><p>*<em>windows使用ariac吾爱破解论坛相关帖子: *</em></p><ul><li><a href="https://www.52pojie.cn/thread-1025572-1-1.html" target="_blank" rel="noopener"><a href="https://www.52pojie.cn/thread-1025572-1-1.html" target="_blank" rel="noopener">https://www.52pojie.cn/thread-1025572-1-1.html</a></a></li><li><a href="https://www.52pojie.cn/thread-1028273-1-1.html" target="_blank" rel="noopener"><a href="https://www.52pojie.cn/thread-1028273-1-1.html" target="_blank" rel="noopener">https://www.52pojie.cn/thread-1028273-1-1.html</a></a></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Oct 17 2019 21:00:00 GMT+0800 (CST) --&gt;&lt;h2 id=&quot;1-window用户可以使用pandown下载&quot;&gt;&lt;a href=&quot;#1-window用户可以使用pandown下载&quot; class=&quot;headerlink&quot; title=&quot;1. window用户可以使用pandown下载&quot;&gt;&lt;/a&gt;1. window用户可以使用pandown下载&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.pandownload.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;点击跳转到官网&lt;/a&gt;&lt;ul&gt;&lt;li&gt;有window版本&lt;/li&gt;&lt;li&gt;网页版&lt;/li&gt;&lt;li&gt;安卓版&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;一般在我们使用百度云链接中baidu后面加上wp, 即可解析高速下载网址&lt;/p&gt;&lt;p&gt;例如: &lt;a href=&quot;https://pan.baidu.com/s/1zjev-MwHpRUzBtEGTpqb-w&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://pan.baidu.com/s/1zjev-MwHpRUzBtEGTpqb-w&lt;/a&gt; 提取码:q736&lt;/p&gt;&lt;p&gt;修改之后: &lt;a href=&quot;https://pan.baiduwp.com/s/1zjev-MwHpRUzBtEGTpqb-w&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://pan.baiduwp.com/s/1zjev-MwHpRUzBtEGTpqb-w&lt;/a&gt; 提取码:q736&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="高速下载相关" scheme="https://www.lacknb.cn/categories/%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="百度云" scheme="https://www.lacknb.cn/tags/%E7%99%BE%E5%BA%A6%E4%BA%91/"/>
    
      <category term="高速下载" scheme="https://www.lacknb.cn/tags/%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title> mybatis单表的嵌套查询</title>
    <link href="https://www.lacknb.cn/2019/10/10/mybatis%E5%8D%95%E8%A1%A8%E7%9A%84%E5%B5%8C%E5%A5%97%E6%9F%A5%E8%AF%A2/"/>
    <id>https://www.lacknb.cn/2019/10/10/mybatis单表的嵌套查询/</id>
    <published>2019-10-10T12:47:00.000Z</published>
    <updated>2019-10-10T12:48:45.920Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Oct 17 2019 21:00:00 GMT+0800 (CST) --><h2 id="数据库备份文件"><a href="#数据库备份文件" class="headerlink" title="数据库备份文件"></a>数据库备份文件</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS=<span class="number">0</span>;</span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for `newslabel`</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`newslabel`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`newslabel`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">5</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`pid`</span> <span class="built_in">int</span>(<span class="number">5</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">11</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of newslabel</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`newslabel`</span> <span class="keyword">VALUES</span> (<span class="string">'1'</span>, <span class="string">'体育新闻'</span>, <span class="string">'0'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`newslabel`</span> <span class="keyword">VALUES</span> (<span class="string">'2'</span>, <span class="string">'娱乐新闻'</span>, <span class="string">'0'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`newslabel`</span> <span class="keyword">VALUES</span> (<span class="string">'3'</span>, <span class="string">'NBA'</span>, <span class="string">'1'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`newslabel`</span> <span class="keyword">VALUES</span> (<span class="string">'4'</span>, <span class="string">'CBA'</span>, <span class="string">'1'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`newslabel`</span> <span class="keyword">VALUES</span> (<span class="string">'5'</span>, <span class="string">'火箭'</span>, <span class="string">'3'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`newslabel`</span> <span class="keyword">VALUES</span> (<span class="string">'6'</span>, <span class="string">'湖人'</span>, <span class="string">'3'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`newslabel`</span> <span class="keyword">VALUES</span> (<span class="string">'7'</span>, <span class="string">'青岛金星'</span>, <span class="string">'4'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`newslabel`</span> <span class="keyword">VALUES</span> (<span class="string">'8'</span>, <span class="string">'浙江广厦'</span>, <span class="string">'4'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`newslabel`</span> <span class="keyword">VALUES</span> (<span class="string">'9'</span>, <span class="string">'港台明星'</span>, <span class="string">'2'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`newslabel`</span> <span class="keyword">VALUES</span> (<span class="string">'10'</span>, <span class="string">'内地影视'</span>, <span class="string">'2'</span>);</span><br></pre></td></tr></table></figure><a id="more"></a><table><thead><tr><th align="center">id</th><th align="center">name</th><th align="center">pid</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">体育新闻</td><td align="center">0</td></tr><tr><td align="center">2</td><td align="center">娱乐新闻</td><td align="center">0</td></tr><tr><td align="center">3</td><td align="center">NBA</td><td align="center">1</td></tr><tr><td align="center">4</td><td align="center">CBA</td><td align="center">1</td></tr><tr><td align="center">5</td><td align="center">火箭</td><td align="center">3</td></tr><tr><td align="center">6</td><td align="center">湖人</td><td align="center">3</td></tr><tr><td align="center">7</td><td align="center">青岛金星</td><td align="center">4</td></tr><tr><td align="center">8</td><td align="center">浙江广厦</td><td align="center">4</td></tr><tr><td align="center">9</td><td align="center">港台明星</td><td align="center">2</td></tr><tr><td align="center">10</td><td align="center">内地明星</td><td align="center">2</td></tr></tbody></table><h2 id="父栏目-gt-子栏目-gt-孙栏目-gt-…"><a href="#父栏目-gt-子栏目-gt-孙栏目-gt-…" class="headerlink" title="父栏目-&gt; 子栏目 -&gt; 孙栏目 -&gt; …"></a>父栏目-&gt; 子栏目 -&gt; 孙栏目 -&gt; …</h2><p><strong>数据库查询思路:</strong></p><blockquote><p>首先查询父栏目 例如: 体育新闻,</p><p>select * from newslabel where id = 1</p><p>找到体育新闻, 然后用体育新闻的id查询</p><p>select * from newslabel where pid = #{id}</p><p>取结果集的id再次作为条件查询</p><p>select * from neswslabel where pid = #{id}</p><p>反复这样, 直到再也不到结果 结束</p></blockquote><h3 id="创建maven项目"><a href="#创建maven项目" class="headerlink" title="创建maven项目"></a>创建maven项目</h3><ul><li>pom依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/log4j/log4j --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>数据库连接配置文件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--注册属性文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"jdbc.properties"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--定义别名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--给指定类型定义别名--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;typeAlias type="com.abc.beans.Student" alias="Student"/&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--给指定包中所有实体类指定别名，别名默认就是该类的简单类名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.abc.beans"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--可以配置多个environment--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"mySql"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"mySql"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;environment id="Orcale"&gt;</span></span><br><span class="line"><span class="comment">            &lt;transactionManager type="JDBC"/&gt;</span></span><br><span class="line"><span class="comment">            &lt;dataSource type="POOLED"&gt;</span></span><br><span class="line"><span class="comment">                &lt;property name="driver" value="com.mysql.jdbc.Driver"/&gt;</span></span><br><span class="line"><span class="comment">                &lt;property name="url" value="jdbc:mysql:///test"/&gt;</span></span><br><span class="line"><span class="comment">                &lt;property name="username" value="root"/&gt;</span></span><br><span class="line"><span class="comment">                &lt;property name="password" value="12345678"/&gt;</span></span><br><span class="line"><span class="comment">            &lt;/dataSource&gt;</span></span><br><span class="line"><span class="comment">        &lt;/environment&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--注册映射文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--resource配置映射文件--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;mapper resource="com/abc/dao/IStudentDao.xml"/&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--url可以注册本地磁盘上的映射文件（不在项目路径下的文件）--&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- &lt;mapper url="file:///e:/mapper.xml"/&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        使用下面的注册方式需要满足以下三点要求：</span></span><br><span class="line"><span class="comment">        1) 映射文件要与Dao接口在同一个包下</span></span><br><span class="line"><span class="comment">        2) 映射文件名要与Dao接口的简单类名相同</span></span><br><span class="line"><span class="comment">        3) 映射文件的&lt;mapper/&gt;标签的namespace属性值为Dao接口的全限定性类名</span></span><br><span class="line"><span class="comment">        满足以上三个条件，那么这里的class属性值就可以填写Dao接口的全限定性类名</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;mapper class="com.abc.dao.IStudentDao"/&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            使用下面的注册方式需要满足以下四点要求：</span></span><br><span class="line"><span class="comment">        1) 映射文件要与Dao接口在同一个包下</span></span><br><span class="line"><span class="comment">        2) 映射文件名要与Dao接口的简单类名相同</span></span><br><span class="line"><span class="comment">        3) 映射文件的&lt;mapper/&gt;标签的namespace属性值为Dao接口的全限定性类名</span></span><br><span class="line"><span class="comment">        4) 使用动态Mapper</span></span><br><span class="line"><span class="comment">            满足以上四个条件，那么这里的name属性值就可以填写Dao接口所在的包名</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.abc.dao"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>日志显示配置文件log4j.properties</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">##define an appender named console</span><br><span class="line">log4j.appender.console=org.apache.log4j.ConsoleAppender</span><br><span class="line">#The Target value is System.out or System.err</span><br><span class="line">log4j.appender.console.Target=System.out</span><br><span class="line">#set the layout type of the apperder</span><br><span class="line">log4j.appender.console.layout=org.apache.log4j.PatternLayout</span><br><span class="line">#set the layout format pattern</span><br><span class="line">log4j.appender.console.layout.ConversionPattern=[%-5p] %m%n</span><br><span class="line"></span><br><span class="line">##define a logger</span><br><span class="line">#log4j.rootLogger=TRACE,console</span><br><span class="line">log4j.logger.com.abc.dao.INewslabelDao=debug,console</span><br></pre></td></tr></table></figure><ul><li>实体类Newslabel.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.abc.beans;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jdk.nashorn.internal.objects.annotations.Setter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * company: www.abc.com</span></span><br><span class="line"><span class="comment"> * Author: Administrator</span></span><br><span class="line"><span class="comment"> * Create Data: 2019/9/25 0025</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//以一方为主，关联属性定义到一方</span></span><br><span class="line">    <span class="comment">//作为一方</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Newslabel</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关联属性</span></span><br><span class="line">    <span class="keyword">private</span> Set&lt;Newslabel&gt; children;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Newslabel</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Newslabel</span><span class="params">(String name, Set&lt;Newslabel&gt; children)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.children = children;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set&lt;Newslabel&gt; <span class="title">getChildren</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> children;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setChildren</span><span class="params">(Set&lt;Newslabel&gt; children)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.children = children;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Newslabel&#123;"</span> +</span><br><span class="line">                <span class="string">"id="</span> + id +</span><br><span class="line">                <span class="string">", name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", children="</span> + children +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>查询的接口INewslabelDao.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.abc.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.abc.beans.Newslabel;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * company: www.abc.com</span></span><br><span class="line"><span class="comment"> * Author: Administrator</span></span><br><span class="line"><span class="comment"> * Create Data: 2019/9/25 0025</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">INewslabelDao</span> </span>&#123;</span><br><span class="line">    <span class="function">Newslabel <span class="title">selectNewslabelById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>映射文件INewslabelDao.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.abc.dao.INewslabelDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--查询栏目及其子孙栏目的信息--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--多表单独查询--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectNewslabeByParent"</span> <span class="attr">resultMap</span>=<span class="string">"newlabelMap"</span>&gt;</span></span><br><span class="line">        select id,name from newslabel where pid = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"newlabelMap"</span> <span class="attr">type</span>=<span class="string">"Newslabel"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"name"</span> <span class="attr">property</span>=<span class="string">"name"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"children"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">ofType</span>=<span class="string">"Newslabel"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">select</span>=<span class="string">"selectNewslabeByParent"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">column</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectNewslabelById"</span> <span class="attr">resultMap</span>=<span class="string">"newlabelMap"</span>&gt;</span></span><br><span class="line">        select id,name from newslabel where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>工具类MyBatisUtils.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.abc.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> SqlSessionFactory factory = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">//SqlSessionFactory是重量级组件，把它定义为单例对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">getSqlSession</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (factory == <span class="keyword">null</span>)&#123;</span><br><span class="line">            factory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(Resources.getResourceAsStream(<span class="string">"mybatis.xml"</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> factory.openSession();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>测试类MyTest.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.abc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.assertTrue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.abc.beans.Newslabel;</span><br><span class="line"><span class="keyword">import</span> com.abc.dao.INewslabelDao;</span><br><span class="line"><span class="keyword">import</span> com.abc.utils.MyBatisUtil;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.junit.After;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTest</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Rigorous Test :-)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    SqlSession session = <span class="keyword">null</span>;</span><br><span class="line">    INewslabelDao newslabelDao = <span class="keyword">null</span>;</span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        session = MyBatisUtil.getSqlSession();</span><br><span class="line">        newslabelDao = session.getMapper(INewslabelDao.class);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (session != <span class="keyword">null</span>)&#123;</span><br><span class="line">            session.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询栏目及其子孙栏目的信息</span></span><br><span class="line">    <span class="comment">//多表单独查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Newslabel newslabel = newslabelDao.selectNewslabelById(<span class="number">1</span>);</span><br><span class="line">        System.out.println(newslabel);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="https://s2.ax1x.com/2019/10/10/u7kZz8.png" alt="u7kZz8.png"></p><h2 id="只查询子孙栏目"><a href="#只查询子孙栏目" class="headerlink" title="只查询子孙栏目"></a>只查询子孙栏目</h2><blockquote><p>以上代码不变, 变的是映射配置文件</p><p>互相嵌套, 直接通过pid查询</p></blockquote><ul><li>INewslabelDao.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.abc.dao.INewslabelDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--查询栏目的子孙栏目的信息--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--多表单独查询--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectNewslabelByParent"</span> <span class="attr">resultMap</span>=<span class="string">"newlabelMap"</span>&gt;</span></span><br><span class="line">        select id,name from newslabel where pid = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"newlabelMap"</span> <span class="attr">type</span>=<span class="string">"Newslabel"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"name"</span> <span class="attr">property</span>=<span class="string">"name"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"children"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">ofType</span>=<span class="string">"Newslabel"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">select</span>=<span class="string">"selectNewslabelByParent"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">column</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="孙栏目-gt-子栏目-gt-父栏目"><a href="#孙栏目-gt-子栏目-gt-父栏目" class="headerlink" title="孙栏目 -&gt; 子栏目 -&gt; 父栏目"></a>孙栏目 -&gt; 子栏目 -&gt; 父栏目</h2><ul><li>将实体类中的children 换成Newslabel parent</li><li>映射文件INewslabelDao.xml<ul><li>因为是父栏目不再是一个集合, 使用association</li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.abc.dao.INewslabelDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--查询栏目及其父辈栏目的信息--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--多表单独查询--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--&lt;select id="selectNewslabelByChild" resultMap="newslabelMap"&gt;</span></span><br><span class="line"><span class="comment">        select id,name,pid from newslabel where id = #&#123;xx&#125;</span></span><br><span class="line"><span class="comment">    &lt;/select&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"newslabelMap"</span> <span class="attr">type</span>=<span class="string">"Newslabel"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"name"</span> <span class="attr">property</span>=<span class="string">"name"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">javaType</span>=<span class="string">"Newslabel"</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">select</span>=<span class="string">"selectNewslabelById"</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">column</span>=<span class="string">"pid"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectNewslabelById"</span> <span class="attr">resultMap</span>=<span class="string">"newslabelMap"</span>&gt;</span></span><br><span class="line">        select id,name,pid from newslabel where id=#&#123;xx&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>数据库查询思路:</strong></p><blockquote><p>首先查询一个孙栏目通过id,</p><p>select * from newslabel where id = #{id}</p><p>然后找到它pid作为条件, 进行查询</p><p>select * from newslabel where id = #{pid}</p><p>然后一直这样…..查询</p></blockquote><h3 id="运行结果-1"><a href="#运行结果-1" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="https://s2.ax1x.com/2019/10/10/u7ZJAJ.png" alt="u7ZJAJ.png"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Oct 17 2019 21:00:00 GMT+0800 (CST) --&gt;&lt;h2 id=&quot;数据库备份文件&quot;&gt;&lt;a href=&quot;#数据库备份文件&quot; class=&quot;headerlink&quot; title=&quot;数据库备份文件&quot;&gt;&lt;/a&gt;数据库备份文件&lt;/h2&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SET&lt;/span&gt; FOREIGN_KEY_CHECKS=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- ----------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- Table structure for `newslabel`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- ----------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`newslabel`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`newslabel`&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`id`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; AUTO_INCREMENT,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`name`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`pid`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  PRIMARY &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;`id`&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;) &lt;span class=&quot;keyword&quot;&gt;ENGINE&lt;/span&gt;=&lt;span class=&quot;keyword&quot;&gt;InnoDB&lt;/span&gt; AUTO_INCREMENT=&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;CHARSET&lt;/span&gt;=utf8;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- ----------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- Records of newslabel&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- ----------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`newslabel`&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;体育新闻&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`newslabel`&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;2&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;娱乐新闻&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`newslabel`&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;3&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;NBA&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`newslabel`&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;4&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;CBA&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`newslabel`&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;5&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;火箭&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;3&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`newslabel`&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;6&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;湖人&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;3&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`newslabel`&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;7&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;青岛金星&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;4&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`newslabel`&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;8&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;浙江广厦&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;4&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`newslabel`&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;9&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;港台明星&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`newslabel`&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;10&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;内地影视&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="mybatis" scheme="https://www.lacknb.cn/categories/mybatis/"/>
    
    
      <category term="mybatis" scheme="https://www.lacknb.cn/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>docker学习的入门</title>
    <link href="https://www.lacknb.cn/2019/10/09/docker%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%85%A5%E9%97%A8/"/>
    <id>https://www.lacknb.cn/2019/10/09/docker学习的入门/</id>
    <published>2019-10-09T12:40:00.000Z</published>
    <updated>2019-10-17T13:17:49.807Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Oct 17 2019 21:17:49 GMT+0800 (CST) --><p><strong>部分内容摘自:</strong> &lt; Docker技术入门与实践第3版 &gt;</p><h2 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a>核心概念</h2><h3 id="Docker镜像"><a href="#Docker镜像" class="headerlink" title="Docker镜像"></a>Docker镜像</h3><p><code>Docker镜像类似于虚拟机镜像 ,可以将它理解为一个只读的模板</code></p><blockquote><pre><code>例如,一个镜像可以包含一个基本的操作系统环境,里面仅安装了Apache(或用户需要的其他软件).可以把它称为 一个Apache镜像.镜像是创建Docker容器的基础.通过版本管理和增量的文件系统,Docker提供了一套十分简单的机制来创建和更新现有的镜像,用户甚至可以从上网上下载一个已经做好的应用镜像, 并直接使用.</code></pre></blockquote><a id="more"></a><ul><li>docker image + 命令<ul><li>build 从Dockerfile构建一个镜像</li><li>history 显示图镜像的历史信息</li><li>import 从tarball导入内容以创建文件系统镜像</li><li>inspect 显示镜像的详细信息</li><li>ls 镜像列表</li><li>pull 从远程仓库下载镜像到本地</li><li>push 将镜像上传到远程仓库</li><li>prune 批量删除镜像</li><li>rm 输出一个或多个镜像</li><li>save 保存一个或多个镜像<ul><li>docker image save nieubuntu:latest -o docker_ubuntu.tar.gz 导出镜像成压缩包</li></ul></li><li>load 导入镜像<ul><li>docker image load -i docker_ubuntu.tar.gz</li></ul></li><li>tag 创建一个镜像标签<ul><li>docker image tag 镜像id 镜像名:标签</li></ul></li></ul></li></ul><h3 id="Docker容器"><a href="#Docker容器" class="headerlink" title="Docker容器"></a>Docker容器</h3><p><code>Docker容器类似于一个轻量级的沙箱, Docker利用容器来运行和隔离应用.</code></p><blockquote><pre><code>容器是从镜像创建的应用运行实例. 它可以启动, 开始, 停止, 删除, 而这些容器都是彼此相互隔离的, 互不可见的.可以把容器开看作一个简易版的Linux系统环境(包括root用户权限, 进程空间, 用户空间和网络空间等)以及运行在其中的应用程序打包而成的盒子.</code></pre></blockquote><h3 id="Docker仓库"><a href="#Docker仓库" class="headerlink" title="Docker仓库"></a>Docker仓库</h3><p><code>Docker仓库类似于代码仓库, 是Docker集中存放镜像文件的场所.</code></p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt;有时候我们会将Docker仓库和仓库注册服务器(Registry)混为一谈, 并不严格区分. 实际上, 仓库注册服务器是存放仓库的地方, 其上往往存放着许多个仓库. 每个仓库集中存放某一类镜像, 往往包括多个镜像文件, 通过不同的标签(tag)来进行区分. 例如存放Ubuntu操作系统镜像仓库,  被称为Ubuntu仓库, 其中可能包括16.04, 18.04等不同版本的镜像. </span><br><span class="line">&gt;</span><br><span class="line">&gt;根据所存储的镜像公开分享与否, Docker仓库可以分为公开仓库(Public), 和私有仓库(Private)两种形式.</span><br><span class="line">&gt;</span><br><span class="line">&gt;目前最大的公开仓库是官方提供的Docker Hub, 其中存放者数量庞大的镜像供用户下载. 国内不少云服务器提供商(如 腾讯云, 阿里云等) 也提供了仓库 的本地源, 可以提供稳定的国内访问.</span><br><span class="line">&gt;</span><br><span class="line">&gt;当然, 用户如果不希望公开分享自己的镜像文件, Docker也支持用户在本地网络内创建一个只能自己访问的私有仓库.</span><br><span class="line">&gt;</span><br><span class="line">&gt;当用户创建了自己的镜像之后就可以使用push命令将它上传到指定的公有或者私有仓库. 这样用户下次在另外一台机器上 使用该镜像时, 只需要将其从仓库上pull下来就可以了.</span><br><span class="line">&gt;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h2 id="Docker的安装"><a href="#Docker的安装" class="headerlink" title="Docker的安装"></a>Docker的安装</h2><ul><li><a href="http://www.lacknb.cn/2019/09/14/%E5%AE%89%E8%A3%85Docker/">Deepin安装Docker</a></li><li><a href="http://www.lacknb.cn/2019/10/09/CentOS%E5%AE%89%E8%A3%85Dokcer/">CentOS安装Dokce</a></li></ul><h2 id="容器的特点"><a href="#容器的特点" class="headerlink" title="容器的特点"></a>容器的特点</h2><blockquote><p>容器: 共用宿主机内核,容器的第一个进程直接运行服务,损耗少,启动快,性能高.</p></blockquote><blockquote><p>容器虚拟化: 不需要硬件的支持. 不需要模拟硬件, 共用宿主机的内核, 启动时间秒级(没有开机启动的流程)</p></blockquote><p>*<em>总结: *</em></p><ol><li>与宿主机使用同一个内核,性能损耗小</li><li>不需要指令级模拟</li><li>容器可以在CPU核心的本地运行命令, 不需要任何专门的解释机制</li></ol><h2 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h2><ul><li>systemctl enable docker</li></ul><h3 id="docker开启命令"><a href="#docker开启命令" class="headerlink" title="docker开启命令"></a>docker开启命令</h3><ul><li>systemctl start docker</li><li>service docker start</li></ul><h3 id="docker关闭命令"><a href="#docker关闭命令" class="headerlink" title="docker关闭命令"></a>docker关闭命令</h3><ul><li>systemctl stop docker</li><li>service docker stop</li></ul><h2 id="管理镜像"><a href="#管理镜像" class="headerlink" title="管理镜像"></a>管理镜像</h2><ul><li>搜索镜像<ul><li>docker search 镜像名字<ul><li>eg: docker search nginx</li></ul></li></ul></li><li>下载镜像<ul><li>docker pull 镜像名字<ul><li>docker pull nginx</li></ul></li></ul></li><li>删除镜像<ul><li>docker image rm 镜像名字</li><li>docker image rmi 镜像名字<ul><li>支持选项包括<ul><li>-f , -force : 强制删除镜像, 即使有容器依赖它;</li><li>-no-prune : 不要清理未带标签的父镜像</li></ul></li></ul></li></ul></li><li>查看镜像信息<ul><li>docker inspect 镜像名字</li></ul></li><li>使用tag命令添加镜像标签(类似于链接的作用, 或者说快捷方式)<ul><li>docker tag 镜像名字:原来的标签名 自定义镜像名:自定义标签名<ul><li>例如: docker tag ubuntu:18.04 myubuntu:latest</li></ul></li></ul></li></ul><h2 id="运行镜像"><a href="#运行镜像" class="headerlink" title="运行镜像"></a>运行镜像</h2><ul><li><p>docker run -d -p 80:80 nginx:latest</p><ul><li>run (创建并运行一个容器)</li><li>-d 放在后台运行</li><li>-p 端口映射<ul><li>前面的80是宿主机的端口</li><li>后面的80是容器的端口</li></ul></li><li>nginx docker镜像的名字</li></ul></li><li><p>docker run -it –name centos6 centos:6.9 /bin/bash</p><ul><li>-it 分配交互式的终端</li><li>–name 指定容器的名字</li><li>/bin/sh 覆盖容器的初始命令 (不填了话, 就默认执行容器的初始命令 )</li></ul></li></ul><ul><li><p>启动容器</p><ul><li><code>docker run imahe_name</code></li><li>docker run -it image_name CMD</li><li><code>docker run === docker create + docker start</code></li></ul></li><li><p>停止容器</p><ul><li><code>docker stop 容器id</code></li></ul></li><li><p>杀死容器</p><ul><li>docker kill 容器名字</li></ul></li><li><p>查看容器列表</p><ul><li><code>docker ps</code> 查看当前正在运行的容器 或者(docker container ls)</li><li><code>docker ps -a</code>查看所有状态的容器 或者(docker container ls -a)</li></ul></li><li><p>进入容器(目的, 调试, 排错)</p><ul><li><strong>docker exec</strong> -it 容器id或容器名字 /bin/bash (/bin/sh)<ul><li>会分配一个新的终端tty</li></ul></li><li>docker attach 容器id<ul><li>使用同一个终端</li></ul></li><li>nsenter (安装yum install -y util-linux 已弃用)</li></ul></li><li><p>查看所有容器的id</p><ul><li>`docker ps -a -q</li></ul></li><li><p>删除所有容器</p><ul><li><code>docker rm 倒引号 docker ps -a -q 倒引号</code></li></ul></li><li><p>当我们在容器终端时, 我们退出容器, 并让容器在后台运行</p><p><code>我们可以使用docker attach 容器id返回容器</code></p><ul><li>直接输入 exit</li><li>快捷键 <code>ctrl + p, ctrl + q</code>,</li></ul></li><li><p>查看最新使用过的容器</p><ul><li>docker ps -a l</li></ul></li><li><p>退出容器</p><ul><li><code>ctrl + d</code></li></ul></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><code>docker容器内的第一个进程(初始命令)必须一直处于前台运行状态,否则这个容器, 就会处于退出状态!</code></p><h2 id="apt-get仓库换成国内镜像源"><a href="#apt-get仓库换成国内镜像源" class="headerlink" title="apt-get仓库换成国内镜像源"></a>apt-get仓库换成国内镜像源</h2><ul><li><p>换成中科院的</p><ul><li><p>1、原文件备份</p><p><code>sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</code></p><p>2、编辑源列表文件</p><p><code>sudo vim /etc/apt/sources.list</code></p><p>3、将原来的列表删除，添加如下内容（中科大镜像源）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br><span class="line">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><ol start="4"><li>运行 sudo ape-get update</li></ol></li></ul></li></ul><h2 id="容器的网络访问"><a href="#容器的网络访问" class="headerlink" title="容器的网络访问"></a>容器的网络访问</h2><p>电脑-pc —&gt; 虚拟机 —&gt; docker容器(多个)</p><p>端口映射</p><ul><li>指定映射(docker 会自动添加一条iptables规则来实现端口映射)<ul><li>-p hostPort:containerPort</li><li>-p ip:hostPort:containerPort 多个容器都想使用80端口</li><li>-p ip::containerPort(随机端口)</li><li>-p hostPort:containerPort:udp<ul><li>默认都是tcp,</li></ul></li><li>-p 81:80 -p 443:443 可以指定多个 -p</li></ul></li><li>随机映射<ul><li>docker run -p (随机端口)</li></ul></li></ul><h2 id="容器的数据卷挂载"><a href="#容器的数据卷挂载" class="headerlink" title="容器的数据卷挂载"></a>容器的数据卷挂载</h2><blockquote><p>-v 卷名:/data</p><p>-v /src(宿主机的目录):/dist(容器的目录)</p></blockquote><ul><li>docker run -d -p 80:80 –volume(或者 -v ) /opt/nginx:/usr/share/nginx/html<ul><li>/usr/share/nginx/html是nginx容器中默认的站点目录, 将这个目录挂载到当前主机的/opt/nginx目录下</li></ul></li><li>数据卷容器<ul><li>–volumes-from (跟某一个已经存在的容器挂载相同的卷)</li></ul></li><li>多端口多站点nginx<ul><li><img src="https://s2.ax1x.com/2019/10/16/KF62RS.png" alt="KF62RS.png"></li><li>进容器创建.conf文件, 自定义server{***}</li></ul></li></ul><h2 id="查看当前linux是什么版本的"><a href="#查看当前linux是什么版本的" class="headerlink" title="查看当前linux是什么版本的"></a>查看当前linux是什么版本的</h2><ul><li><code>cat /etc/os-release</code></li></ul><h2 id="手动制作镜像"><a href="#手动制作镜像" class="headerlink" title="手动制作镜像"></a>手动制作镜像</h2><ul><li>启动一个基本的容器<ul><li><code>docker run -it -p 22:22 centos:6.9 /bin/bash</code></li></ul></li><li>修改root密码 <code>echo &#39;123456&#39;|passwd --stdin root</code></li><li>安装ssh<ul><li>yum install openssh-server -y</li><li>service sshd restart (start)</li></ul></li><li>docker container commit 容器id centos6.9_ssh:v1</li><li>测试镜像功能<ul><li><code>docker run -it -d -p 22:22 centos6.9_ssh:v1 /usr/sbin/sshd -D</code></li><li>宿主机 ssh 连接, 测试是否连接成功</li></ul></li></ul><h2 id="手动制作一个支持ssh-nginx的镜像"><a href="#手动制作一个支持ssh-nginx的镜像" class="headerlink" title="手动制作一个支持ssh+nginx的镜像"></a>手动制作一个支持ssh+nginx的镜像</h2><ul><li><code>docker run -it -d -p 80:80 -p 22:22 --name nginx_ssh centos6.9_ssh:v1 /bin/bash</code></li><li>安装nginx<ul><li>首先配置repo<ul><li><code>curl -o /etc/yum.repos.d/CentOs-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo</code></li><li><code>curl -o /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-6.repo</code></li></ul></li><li>启动nginx<ul><li>service start nginx</li></ul></li></ul></li><li>使用docker container commit id xxxx</li></ul><h2 id="开机自启-1"><a href="#开机自启-1" class="headerlink" title="开机自启"></a>开机自启</h2><ul><li>systemctl enable docker</li></ul><h3 id="docker开启命令-1"><a href="#docker开启命令-1" class="headerlink" title="docker开启命令"></a>docker开启命令</h3><ul><li>systemctl start docker</li><li>service docker start</li></ul><h3 id="docker关闭命令-1"><a href="#docker关闭命令-1" class="headerlink" title="docker关闭命令"></a>docker关闭命令</h3><ul><li>systemctl stop docker</li><li>service docker stop</li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Oct 17 2019 21:17:49 GMT+0800 (CST) --&gt;&lt;p&gt;&lt;strong&gt;部分内容摘自:&lt;/strong&gt; &amp;lt; Docker技术入门与实践第3版 &amp;gt;&lt;/p&gt;&lt;h2 id=&quot;核心概念&quot;&gt;&lt;a href=&quot;#核心概念&quot; class=&quot;headerlink&quot; title=&quot;核心概念&quot;&gt;&lt;/a&gt;核心概念&lt;/h2&gt;&lt;h3 id=&quot;Docker镜像&quot;&gt;&lt;a href=&quot;#Docker镜像&quot; class=&quot;headerlink&quot; title=&quot;Docker镜像&quot;&gt;&lt;/a&gt;Docker镜像&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Docker镜像类似于虚拟机镜像 ,可以将它理解为一个只读的模板&lt;/code&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;pre&gt;&lt;code&gt;例如,一个镜像可以包含一个基本的操作系统环境,里面仅安装了Apache(或用户需要的其他软件).可以把它称为 一个Apache镜像.
镜像是创建Docker容器的基础.
通过版本管理和增量的文件系统,Docker提供了一套十分简单的机制来创建和更新现有的镜像,用户甚至可以从上网上下载一个已经做好的应用镜像, 并直接使用.&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="docker" scheme="https://www.lacknb.cn/categories/docker/"/>
    
    
      <category term="docker" scheme="https://www.lacknb.cn/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>CentOS安装Dokcer</title>
    <link href="https://www.lacknb.cn/2019/10/09/CentOS%E5%AE%89%E8%A3%85Dokcer/"/>
    <id>https://www.lacknb.cn/2019/10/09/CentOS安装Dokcer/</id>
    <published>2019-10-09T10:07:00.000Z</published>
    <updated>2019-10-09T10:45:54.183Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Oct 17 2019 21:00:00 GMT+0800 (CST) --><h2 id="原文链接-点击跳转"><a href="#原文链接-点击跳转" class="headerlink" title="原文链接,点击跳转"></a><a href="https://www.cnblogs.com/yufeng218/p/8370670.html" target="_blank" rel="noopener">原文链接,点击跳转</a></h2><p>Docker从1.13版本之后采用时间线的方式作为版本号，分为社区版CE和企业版EE。</p><p>社区版是免费提供给个人开发者和小型团体使用的，企业版会提供额外的收费服务，比如经过官方测试认证过的基础设施、容器、插件等。</p><p>社区版按照stable和edge两种方式发布，每个季度更新stable版本，如17.06，17.09；每个月份更新edge版本，如17.09，17.10。</p><h2 id="一、安装docker"><a href="#一、安装docker" class="headerlink" title="一、安装docker"></a>一、安装docker</h2><p>1、Docker 要求 CentOS 系统的内核版本高于 3.10 ，查看本页面的前提条件来验证你的CentOS 版本是否支持 Docker 。</p><p>通过 <strong>uname -r</strong> 命令查看你当前的内核版本</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ uname -r</span><br></pre></td></tr></table></figure><p>2、使用 <code>root</code> 权限登录 Centos。确保 yum 包更新到最新。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum update</span><br></pre></td></tr></table></figure><p>3、卸载旧版本(如果安装过旧版本的话)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum remove docker  docker-common docker-selinux docker-engine</span><br></pre></td></tr></table></figure><p>4、安装需要的软件包， yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><p>5、设置yum源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/10/09/uIksN6.png" alt="img"></p><p>6、可以查看所有仓库中所有docker版本，并选择特定版本安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum list docker-ce --showduplicates | sort -r</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/10/09/uIkIEt.png" alt="img"></p><p>7、安装docker</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install docker-ce  #由于repo中默认只开启stable仓库，故这里安装的是最新稳定版17.12.0</span><br><span class="line">$ sudo yum install &lt;FQPN&gt;  # 例如：sudo yum install docker-ce-17.12.0.ce</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/10/09/uIkXuj.png" alt="img"></p><p>8、启动并加入开机启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl start docker</span><br><span class="line">$ sudo systemctl enable docker</span><br></pre></td></tr></table></figure><p>9、验证安装是否成功(有client和service两部分表示docker安装启动都成功了)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker version</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/10/09/uIkjDs.png" alt="img"></p><h2 id="二、问题"><a href="#二、问题" class="headerlink" title="二、问题"></a>二、问题</h2><p>1、因为之前已经安装过旧版本的docker，在安装的时候报错如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Transaction check error:</span><br><span class="line">  file /usr/bin/docker from install of docker-ce-17.12.0.ce-1.el7.centos.x86_64 conflicts with file from package docker-common-2:1.12.6-68.gitec8512b.el7.centos.x86_64</span><br><span class="line">  file /usr/bin/docker-containerd from install of docker-ce-17.12.0.ce-1.el7.centos.x86_64 conflicts with file from package docker-common-2:1.12.6-68.gitec8512b.el7.centos.x86_64</span><br><span class="line">  file /usr/bin/docker-containerd-shim from install of docker-ce-17.12.0.ce-1.el7.centos.x86_64 conflicts with file from package docker-common-2:1.12.6-68.gitec8512b.el7.centos.x86_64</span><br><span class="line">  file /usr/bin/dockerd from install of docker-ce-17.12.0.ce-1.el7.centos.x86_64 conflicts with file from package docker-common-2:1.12.6-68.gitec8512b.el7.centos.x86_64</span><br></pre></td></tr></table></figure><p>2、卸载旧版本的包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum erase docker-common-2:1.12.6-68.gitec8512b.el7.centos.x86_64</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/10/09/uIAP8U.png" alt="img"></p><p>3、再次安装docker</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install docker-ce</span><br></pre></td></tr></table></figure><h2 id="更换镜像源"><a href="#更换镜像源" class="headerlink" title="更换镜像源"></a>更换镜像源</h2><p><strong>请移步</strong>: <a href="https://www.lacknb.cn/2019/09/14/%E5%AE%89%E8%A3%85Docker/">点击跳转</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Oct 17 2019 21:00:00 GMT+0800 (CST) --&gt;&lt;h2 id=&quot;原文链接-点击跳转&quot;&gt;&lt;a href=&quot;#原文链接-点击跳转&quot; class=&quot;headerlink&quot; title=&quot;原文链接,点击跳转&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.cnblogs.com/yufeng218/p/8370670.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原文链接,点击跳转&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Docker从1.13版本之后采用时间线的方式作为版本号，分为社区版CE和企业版EE。&lt;/p&gt;&lt;p&gt;社区版是免费提供给个人开发者和小型团体使用的，企业版会提供额外的收费服务，比如经过官方测试认证过的基础设施、容器、插件等。&lt;/p&gt;&lt;p&gt;社区版按照stable和edge两种方式发布，每个季度更新stable版本，如17.06，17.09；每个月份更新edge版本，如17.09，17.10。&lt;/p&gt;&lt;h2 id=&quot;一、安装docker&quot;&gt;&lt;a href=&quot;#一、安装docker&quot; class=&quot;headerlink&quot; title=&quot;一、安装docker&quot;&gt;&lt;/a&gt;一、安装docker&lt;/h2&gt;&lt;p&gt;1、Docker 要求 CentOS 系统的内核版本高于 3.10 ，查看本页面的前提条件来验证你的CentOS 版本是否支持 Docker 。&lt;/p&gt;&lt;p&gt;通过 &lt;strong&gt;uname -r&lt;/strong&gt; 命令查看你当前的内核版本&lt;/p&gt;
    
    </summary>
    
    
      <category term="docker" scheme="https://www.lacknb.cn/categories/docker/"/>
    
    
      <category term="docker" scheme="https://www.lacknb.cn/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>linux常用命令</title>
    <link href="https://www.lacknb.cn/2019/10/09/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://www.lacknb.cn/2019/10/09/linux常用命令/</id>
    <published>2019-10-09T09:26:00.000Z</published>
    <updated>2019-10-09T10:07:05.663Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Oct 17 2019 21:00:00 GMT+0800 (CST) --><h2 id="多个linux服务器之间的免密登录"><a href="#多个linux服务器之间的免密登录" class="headerlink" title="多个linux服务器之间的免密登录"></a>多个linux服务器之间的免密登录</h2><p>*<em>三台服务器如下: *</em></p><table><thead><tr><th align="center">IP</th><th align="center">Release</th><th align="center">Hostname</th></tr></thead><tbody><tr><td align="center">192.168.100.1</td><td align="center">centos</td><td align="center">server-01</td></tr><tr><td align="center">192.168.100.2</td><td align="center">centos</td><td align="center">server-02</td></tr><tr><td align="center">192.168.100.3</td><td align="center">centos</td><td align="center">server-03</td></tr></tbody></table><blockquote><p>实现server-01免密登录server-02和server-03</p></blockquote><a id="more"></a><ol><li><p>在服务器server-01中运行指令, 然后一路回车即可.</p><p>指令:</p><figure class="highlight plain"><figcaption><span>-i</span><a href="/root/.ssh/id_rsa.pub">root@192.168.100.2```</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">```bash</span><br><span class="line">root@server-01:/#  ssh-keygen -t rsa</span><br><span class="line"></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/root/.ssh/id_rsa):  # 回车代表无需密码登录</span><br><span class="line"></span><br><span class="line">Enter passphrase (empty for no passphrase):  # 回车</span><br><span class="line"></span><br><span class="line">Enter same passphrase again: </span><br><span class="line"># 回车</span><br><span class="line"></span><br><span class="line">Your identification has been saved in /root/.ssh/id_rsa. # 私匙</span><br><span class="line">Your public key has been saved in /root/.ssh/id_rsa.pub. # 公匙</span><br><span class="line"></span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:*************************************** root@localhost.localdomain</span><br><span class="line">The key&apos;s randomart image is:</span><br><span class="line">+---[RSA 2048]----+</span><br><span class="line">|o.**o.           |</span><br><span class="line">|=. ==.           |</span><br><span class="line">|==++.= +         |</span><br><span class="line">|o.=.+ B          |</span><br><span class="line">|oo ... .S        |</span><br><span class="line">|oo.. . .         |</span><br><span class="line">|+.o.  .          |</span><br><span class="line">|BE++             |</span><br><span class="line">|OO+..            |</span><br><span class="line">+----[SHA256]-----+</span><br><span class="line"></span><br><span class="line">root@server-01:/#  ssh-copy-id -i /root/.ssh/id_rsa.pub root@192.168.100.2</span><br><span class="line"></span><br><span class="line">/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: &quot;/root/.ssh/id_rsa.pub&quot;</span><br><span class="line">The authenticity of host &apos;192.168.100.2 (192.168.100.2)&apos; can&apos;t be established.</span><br><span class="line">ECDSA key fingerprint is SHA256:t3gHkrI7nBW2HNoRoD/9CYAIk1a4DDZ8LybenqXukms.</span><br><span class="line">ECDSA key fingerprint is MD5:d2:11:22:73:ba:e7:67:ad:80:e6:c0:53:32:a6:2e:94.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)?  yes</span><br><span class="line"># 这里直接回答 yes</span><br><span class="line"></span><br><span class="line">/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed</span><br><span class="line">/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys</span><br><span class="line">root@192.168.100.2&apos;s password:  # 这里输入server-02的root密码</span><br><span class="line"></span><br><span class="line">Number of key(s) added: 1</span><br><span class="line"></span><br><span class="line">Now try logging into the machine, with:   &quot;ssh &apos;root@192.168.100.2&apos;&quot;</span><br><span class="line">and check to make sure that only the key(s) you wanted were added.</span><br></pre></td></tr></table></figure><p></p></li></ol><blockquote><p>连接另外一台操作也是一样的</p><p>ssh-copy-id -i /root/.ssh/id_rsa.pub <a href="mailto:root@192.168.100.3" target="_blank" rel="noopener">root@192.168.100.3</a></p><p>后续操作也是一样的….</p></blockquote><h2 id="linux之间传输文件"><a href="#linux之间传输文件" class="headerlink" title="linux之间传输文件"></a>linux之间传输文件</h2><ul><li>scp指令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scp 本机文件 服务器地址@root:服务器的路径</span><br><span class="line"><span class="comment"># 例如, 将douyu.py上传到服务器中/usr/local/python的路径下</span></span><br><span class="line">scp ./douyu.py 192.168.100.2:/usr/<span class="built_in">local</span>/python/</span><br></pre></td></tr></table></figure><h2 id="查看正在运行的任务"><a href="#查看正在运行的任务" class="headerlink" title="查看正在运行的任务"></a>查看正在运行的任务</h2><ul><li>ps<ul><li>ps -ef|grep 任务名 // 搜索正在执行任务, -ef 显示详细信息</li><li>ps -A 显示当前所有正在运行的任务</li></ul></li><li>tail 尾部</li><li>head 头部<ul><li>ps -ef|tail -5 取最后5个正在运行的任务</li><li>ps -ef|head -5 取前4个正在运行的任务</li></ul></li><li>netstat -tnlp 查看当前正在使用的端口号</li></ul><h2 id="screen命令-使任务在服务器退出之后保持运行"><a href="#screen命令-使任务在服务器退出之后保持运行" class="headerlink" title="screen命令, 使任务在服务器退出之后保持运行"></a>screen命令, 使任务在服务器退出之后保持运行</h2><p><strong>安装命令</strong>:</p><figure class="highlight plain"><figcaption><span>install screen -y ```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">```bash</span><br><span class="line">[root@localhost /]# rpm -qa|grep screen</span><br><span class="line">screen-4.1.0-0.25.20120314git3c2946.el7.x86_64</span><br><span class="line"># 显示这个, 则已经安装成功</span><br></pre></td></tr></table></figure><ul><li><p>创建一个名字叫happy的会话</p><ul><li><figure class="highlight plain"><figcaption><span>-S happy```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* 查看已有会话</span><br><span class="line">  * ```screen -ls</span><br></pre></td></tr></table></figure></li></ul></li><li><p>连接会话</p><ul><li><figure class="highlight plain"><figcaption><span>-r happy```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* 保存当前会话,并退出</span><br><span class="line">  * 第一种方式</span><br><span class="line">    * ```screen -d 会话的名字</span><br></pre></td></tr></table></figure></li><li><p>第二种方式</p><ul><li><figure class="highlight plain"><figcaption><span>+ a```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* ```ctrl + d</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Oct 17 2019 21:00:00 GMT+0800 (CST) --&gt;&lt;h2 id=&quot;多个linux服务器之间的免密登录&quot;&gt;&lt;a href=&quot;#多个linux服务器之间的免密登录&quot; class=&quot;headerlink&quot; title=&quot;多个linux服务器之间的免密登录&quot;&gt;&lt;/a&gt;多个linux服务器之间的免密登录&lt;/h2&gt;&lt;p&gt;*&lt;em&gt;三台服务器如下: *&lt;/em&gt;&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;center&quot;&gt;IP&lt;/th&gt;&lt;th align=&quot;center&quot;&gt;Release&lt;/th&gt;&lt;th align=&quot;center&quot;&gt;Hostname&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;192.168.100.1&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;centos&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;server-01&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;192.168.100.2&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;centos&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;server-02&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;192.168.100.3&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;centos&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;server-03&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;blockquote&gt;&lt;p&gt;实现server-01免密登录server-02和server-03&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://www.lacknb.cn/categories/linux/"/>
    
    
      <category term="linux" scheme="https://www.lacknb.cn/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Maven入门学习</title>
    <link href="https://www.lacknb.cn/2019/10/08/Maven%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/"/>
    <id>https://www.lacknb.cn/2019/10/08/Maven入门学习/</id>
    <published>2019-10-08T03:12:00.000Z</published>
    <updated>2019-10-08T03:13:41.174Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Oct 17 2019 21:00:00 GMT+0800 (CST) --><h2 id="Maven简介"><a href="#Maven简介" class="headerlink" title="Maven简介"></a>Maven简介</h2><p>​ Apeache Maven是一种纯Java编写的、开源的、跨平台的、标准化的、基于项目对象模型。</p><p>​ 跨平台：跨os平台、跨IDE(集成开发环境)平台。例如：在Eclipse上写的项目如果要导入到idea中，比较麻烦，而直接使用maven项目，十分顺利。</p><p>​ 标准化：项目构建标准化、项目结构标准化。</p><p>​ 用户画像：更多的属性组成用户画像。比如：你在一个平台上使用的时间越长，这个平台就会根据大数据更加了解你。</p><a id="more"></a><h2 id="Maven工作原理"><a href="#Maven工作原理" class="headerlink" title="Maven工作原理"></a>Maven工作原理</h2><p><img src="https://s2.ax1x.com/2019/10/08/uWcbJx.png" alt="uWcbJx.png"></p><p><img src="https://s2.ax1x.com/2019/10/08/uWRfQf.png" alt="uWRfQf.png"></p><ul><li>Dependency代表依赖：在引入依赖时，先在本地库中查找，如果没有在向上一层寻找，直至找到，再返回到本地的仓库。如果第二次再使用时，直接在本地仓库就可以找到。在公司中，如果一个同事下载好了，会保存到公司的局域网中，会节约带宽。</li><li>防火墙：一般就是对ip和端口号的规则的集合，符合规则或者不负责就可以过或者不能过。</li></ul><h2 id="Maven的安装配置"><a href="#Maven的安装配置" class="headerlink" title="Maven的安装配置"></a>Maven的安装配置</h2><ul><li>maven下载: <a href="http://maven.apache.org/download.cgi" target="_blank" rel="noopener"><a href="http://maven.apache.org/download.cgi" target="_blank" rel="noopener">http://maven.apache.org/download.cgi</a></a></li><li>配置环境变量MAVEN_HOME</li><li>修改conf/settings.xml配置文件,<ul><li>换成国内镜像</li><li>自定义默认代码仓库的位置</li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/repositories/central/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>/media/nianshao/59D5FCE97201B8A75/java/repository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>maven测试命令<ul><li>mvn help:system</li></ul></li></ul><h2 id="Maven的项目结构"><a href="#Maven的项目结构" class="headerlink" title="Maven的项目结构"></a>Maven的项目结构</h2><p><img src="https://s2.ax1x.com/2019/10/08/uW2Oqe.png" alt="uW2Oqe.png"></p><h2 id="package包的命名"><a href="#package包的命名" class="headerlink" title="package包的命名"></a>package包的命名</h2><p><strong>一个项目中的包的名称一般可以分为四到五级：</strong></p><ul><li>第一级：甲方公司域名的倒序，或开发方公司域名的倒序。为了保证项目在全球是唯一的。例如，cn.edu.aynu</li><li>第二级：项目名称，为了保证项目在甲方公司中的唯一性。例如，cn.edu.aynu.sms。</li><li>第三级：项目模块名称，为了保证在当前项目中资源的唯一性。例如，cn.edu.aynu.sms.aaa.bbb.ccc</li><li>第四级：功能顶层包，为了区分各种资源的功能，例如，cn.edu.aynu.sms.aaa.bbb.ccc.service cn.edu.aynu.sms.aaa.bbb.ccc.dao</li><li>第五级：impl包，用于存放接口实现类，例如，cn.edu.aynu.sms.aaa.bbb.ccc.service.impl</li></ul><h2 id="Maven的构建命令"><a href="#Maven的构建命令" class="headerlink" title="Maven的构建命令"></a>Maven的构建命令</h2><ul><li><p>mvn compile</p><ul><li>编译项目</li></ul></li><li><p>mvn test</p><ul><li>test目录测试</li></ul></li><li><p>mvn clean</p><ul><li>清除已经编译过的代码, 即target目录</li></ul><p><strong>组合命令:</strong></p></li><li><p>mvn clean test</p></li><li><p>mvn clean package</p><ul><li>打包</li><li>· 将编译好的代码打包成为可发布的格式，如 JAR，WAR</li></ul></li><li><p>mvn clean install</p><ul><li>安装到本地仓库</li><li>· 将包安装至本地仓库，以让其它项目依赖</li></ul></li></ul><h2 id="Maven的生命周期"><a href="#Maven的生命周期" class="headerlink" title="Maven的生命周期"></a>Maven的生命周期</h2><h3 id="Maven的生命周期与项目生命周期"><a href="#Maven的生命周期与项目生命周期" class="headerlink" title="Maven的生命周期与项目生命周期"></a>Maven的生命周期与项目生命周期</h3><p>​ 一个项目的构建过程需要经历被编译、被测试、被打包、被发布等生命阶段。这些项目生命阶段的构建是由谁完成的呢？是由Maven生命周期的各个阶段完成的。</p><p>​ Maven只所以非常强大的一个重要的原因是，它拥有十分完善的生命周期模型(Lifecycle)。Maven的生命周期是对所有项目的构建过程进行的抽象和统一，包含了项目的清理、初始化、编译、测试、打包、集成测试、验证、部署和站点生成等几乎所有的构建步骤。所以，Maven的生命周期是用于管理项目生命周期的。</p><p>​ Maven有三套相互独立的生命周期，分别是Clean、Default和Site，分别用于完成三类完全不同的任务。每个生命周期又包含多个生命阶段（Phase），这些生命阶段是有时间先后顺序的。即后面的阶段的执行，必定是执行过了前面的阶段。</p><h3 id="Default生命周期"><a href="#Default生命周期" class="headerlink" title="Default生命周期"></a>Default生命周期</h3><pre><code>Default生命周期是Maven最重要的生命周期，用于构建项目，其中定义了构建项目时所需要执行的所有阶段。下面列出了比较重要和常用的阶段。</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">validate</span><br><span class="line">generate-sources</span><br><span class="line">process-sources</span><br><span class="line">generate-resources</span><br><span class="line">process-resources   复制并处理资源文件，至目标目录，准备打包</span><br><span class="line">compile   编译项目的源代码</span><br><span class="line">process-classes</span><br><span class="line">generate-test-sources</span><br><span class="line">process-test-sources</span><br><span class="line">generate-test-resources</span><br><span class="line">process-test-resources   复制并处理资源文件，至目标测试目录</span><br><span class="line">test-compile   编译测试源代码</span><br><span class="line">process-test-classes</span><br><span class="line">test   使用合适的单元测试框架运行测试。这些测试代码不会被打包或部署</span><br><span class="line">prepare-package</span><br><span class="line">package   将编译好的代码打包成为可发布的格式，如 JAR，WAR</span><br><span class="line">pre-integration-test</span><br><span class="line">integration-test</span><br><span class="line">post-integration-test</span><br><span class="line">verify</span><br><span class="line">install   将包安装至本地仓库，以让其它项目依赖</span><br><span class="line">deploy   将最终的包复制到远程的仓库，以让其它开发人员与项目共享</span><br></pre></td></tr></table></figure><h3 id="Clean生命周期"><a href="#Clean生命周期" class="headerlink" title="Clean生命周期"></a>Clean生命周期</h3><p>​ Clean生命周期用于清除之前指令执行结果 。其包含三个生命阶段。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pre-clean   执行一些需要在clean之前完成的工作</span><br><span class="line">clean   移除所有上一次构建生成的文件</span><br><span class="line">post-clean   执行一些需要在clean之后立刻完成的工作</span><br></pre></td></tr></table></figure><h3 id="Site生命周期"><a href="#Site生命周期" class="headerlink" title="Site生命周期"></a>Site生命周期</h3><p>​ Site生命周期用于建立和发布项目站点。其包含四个生命阶段。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pre-site   执行一些需要在生成站点文档之前完成的工作</span><br><span class="line">site   生成项目的站点文档</span><br><span class="line">post-site   执行一些需要在生成站点文档之后完成的工作，并且为部署做准备</span><br><span class="line">site-deploy   将生成的站点文档部署到特定的服务器上</span><br></pre></td></tr></table></figure><h2 id="项目依赖管理"><a href="#项目依赖管理" class="headerlink" title="项目依赖管理"></a>项目依赖管理</h2><h3 id="直接依赖与间接依赖"><a href="#直接依赖与间接依赖" class="headerlink" title="直接依赖与间接依赖"></a>直接依赖与间接依赖</h3><h3 id="以来传递"><a href="#以来传递" class="headerlink" title="以来传递"></a>以来传递</h3><h3 id="jar包分类"><a href="#jar包分类" class="headerlink" title="jar包分类"></a>jar包分类</h3><h4 id="（1）编译、运行、打包时均不需要的Jar包"><a href="#（1）编译、运行、打包时均不需要的Jar包" class="headerlink" title="（1）编译、运行、打包时均不需要的Jar包"></a><strong>（1）编译、运行、打包时均不需要的Jar包</strong></h4><h4 id="（2）编译、运行时需要，但打包时不需要的Jar包"><a href="#（2）编译、运行时需要，但打包时不需要的Jar包" class="headerlink" title="（2）编译、运行时需要，但打包时不需要的Jar包"></a><strong>（2）编译、运行时需要，但打包时不需要的Jar包</strong></h4><h4 id="（3）编译时不需要，但运行、打包时需要的Jar包"><a href="#（3）编译时不需要，但运行、打包时需要的Jar包" class="headerlink" title="（3）编译时不需要，但运行、打包时需要的Jar包"></a><strong>（3）编译时不需要，但运行、打包时需要的Jar包</strong></h4><h4 id="（4）编译、运行、打包时均需要的Jar包"><a href="#（4）编译、运行、打包时均需要的Jar包" class="headerlink" title="（4）编译、运行、打包时均需要的Jar包"></a><strong>（4）编译、运行、打包时均需要的Jar包</strong></h4><h3 id="依赖传递范围的设定"><a href="#依赖传递范围的设定" class="headerlink" title="依赖传递范围的设定"></a>依赖传递范围的设定</h3><h4 id="（1）test"><a href="#（1）test" class="headerlink" title="（1）test"></a><strong>（1）test</strong></h4><h4 id="（2）provided"><a href="#（2）provided" class="headerlink" title="（2）provided"></a><strong>（2）provided</strong></h4><h4 id="（3）runtime"><a href="#（3）runtime" class="headerlink" title="（3）runtime"></a><strong>（3）runtime</strong></h4><h4 id="（4）-compile"><a href="#（4）-compile" class="headerlink" title="（4）**compile**"></a><strong>（4）**</strong>compile**</h4><h4 id="（5）system"><a href="#（5）system" class="headerlink" title="（5）system"></a><strong>（5）system</strong></h4><ul><li>&lt;systemPath&gt;${basedir}/lib/xxx.jar&lt;/systemPath&gt;</li></ul><h4 id="（6）import"><a href="#（6）import" class="headerlink" title="（6）import"></a><strong>（6）import</strong></h4><h3 id="可选依赖与排除依赖"><a href="#可选依赖与排除依赖" class="headerlink" title="可选依赖与排除依赖"></a>可选依赖与排除依赖</h3><h3 id="依赖冲突"><a href="#依赖冲突" class="headerlink" title="依赖冲突"></a>依赖冲突</h3><h3 id="直接依赖冲突"><a href="#直接依赖冲突" class="headerlink" title="直接依赖冲突"></a>直接依赖冲突</h3><h3 id="统一管理版本号"><a href="#统一管理版本号" class="headerlink" title="统一管理版本号"></a>统一管理版本号</h3><h3 id="依赖的继承"><a href="#依赖的继承" class="headerlink" title="依赖的继承"></a>依赖的继承</h3><h3 id="直接继承"><a href="#直接继承" class="headerlink" title="直接继承"></a>直接继承</h3><h3 id="可选继承"><a href="#可选继承" class="headerlink" title="可选继承"></a>可选继承</h3><h3 id="聚合"><a href="#聚合" class="headerlink" title="聚合"></a>聚合</h3><h3 id="具有可选依赖的聚合父工程"><a href="#具有可选依赖的聚合父工程" class="headerlink" title="具有可选依赖的聚合父工程"></a>具有可选依赖的聚合父工程</h3><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Oct 17 2019 21:00:00 GMT+0800 (CST) --&gt;&lt;h2 id=&quot;Maven简介&quot;&gt;&lt;a href=&quot;#Maven简介&quot; class=&quot;headerlink&quot; title=&quot;Maven简介&quot;&gt;&lt;/a&gt;Maven简介&lt;/h2&gt;&lt;p&gt;​ Apeache Maven是一种纯Java编写的、开源的、跨平台的、标准化的、基于项目对象模型。&lt;/p&gt;&lt;p&gt;​ 跨平台：跨os平台、跨IDE(集成开发环境)平台。例如：在Eclipse上写的项目如果要导入到idea中，比较麻烦，而直接使用maven项目，十分顺利。&lt;/p&gt;&lt;p&gt;​ 标准化：项目构建标准化、项目结构标准化。&lt;/p&gt;&lt;p&gt;​ 用户画像：更多的属性组成用户画像。比如：你在一个平台上使用的时间越长，这个平台就会根据大数据更加了解你。&lt;/p&gt;
    
    </summary>
    
    
      <category term="maven" scheme="https://www.lacknb.cn/categories/maven/"/>
    
    
      <category term="maven" scheme="https://www.lacknb.cn/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>mybatis多对一、一对多查询</title>
    <link href="https://www.lacknb.cn/2019/09/23/mybatis%E5%A4%9A%E5%AF%B9%E4%B8%80%E3%80%81%E4%B8%80%E5%AF%B9%E5%A4%9A%E6%9F%A5%E8%AF%A2/"/>
    <id>https://www.lacknb.cn/2019/09/23/mybatis多对一、一对多查询/</id>
    <published>2019-09-23T14:33:00.000Z</published>
    <updated>2019-10-17T13:12:19.729Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Oct 17 2019 21:12:20 GMT+0800 (CST) --><h2 id="数据库备份文件"><a href="#数据库备份文件" class="headerlink" title="数据库备份文件"></a>数据库备份文件</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`user`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`user`</span> (</span><br><span class="line">  <span class="string">`uid`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`uname`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`usex`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`uid`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of user</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span> <span class="keyword">VALUES</span> (<span class="string">'1'</span>, <span class="string">'张三'</span>, <span class="string">'男'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span> <span class="keyword">VALUES</span> (<span class="string">'2'</span>, <span class="string">'李四'</span>, <span class="string">'男'</span>);</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`friend`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`friend`</span> (</span><br><span class="line">  <span class="string">`friend_id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`friend_name`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`friend_sex`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`user_id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`friend_id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`fk`</span> (<span class="string">`user_id`</span>),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> <span class="string">`fk`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`user_id`</span>) <span class="keyword">REFERENCES</span> <span class="string">`user`</span> (<span class="string">`uid`</span>) <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">CASCADE</span></span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of friend</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`friend`</span> <span class="keyword">VALUES</span> (<span class="string">'1'</span>, <span class="string">'小明'</span>, <span class="string">'男'</span>, <span class="string">'1'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`friend`</span> <span class="keyword">VALUES</span> (<span class="string">'2'</span>, <span class="string">'小红'</span>, <span class="string">'女'</span>, <span class="string">'1'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`friend`</span> <span class="keyword">VALUES</span> (<span class="string">'3'</span>, <span class="string">'小兰'</span>, <span class="string">'女'</span>, <span class="string">'2'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`friend`</span> <span class="keyword">VALUES</span> (<span class="string">'4'</span>, <span class="string">'小光'</span>, <span class="string">'男'</span>, <span class="string">'1'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`friend`</span> <span class="keyword">VALUES</span> (<span class="string">'5'</span>, <span class="string">'小天'</span>, <span class="string">'男'</span>, <span class="string">'2'</span>);</span><br></pre></td></tr></table></figure><h2 id="maven创建项目"><a href="#maven创建项目" class="headerlink" title="maven创建项目"></a>maven创建项目</h2><ul><li>依赖jar包</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.43<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--      &lt;scope&gt;test&lt;/scope&gt;--&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="一对多查询"><a href="#一对多查询" class="headerlink" title="一对多查询"></a>一对多查询</h2><ul><li>详细代码请到码云查看</li><li><a href="https://gitee.com/gitsilence/mybatis_learning" target="_blank" rel="noopener">点次跳转代码仓库</a></li></ul><h2 id="多对一查询"><a href="#多对一查询" class="headerlink" title="多对一查询"></a>多对一查询</h2><ul><li>User.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lacknb.beans;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer uid;</span><br><span class="line">    <span class="keyword">private</span> String uname;</span><br><span class="line">    <span class="keyword">private</span> String usex;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String uname, String usex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.uname = uname;</span><br><span class="line">        <span class="keyword">this</span>.usex = usex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getUid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> uid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUid</span><span class="params">(Integer uid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.uid = uid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> uname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUname</span><span class="params">(String uname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.uname = uname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> usex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsex</span><span class="params">(String usex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.usex = usex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"User&#123;"</span> +</span><br><span class="line">                <span class="string">"uid="</span> + uid +</span><br><span class="line">                <span class="string">", uname='"</span> + uname + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", usex='"</span> + usex + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Friend.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lacknb.beans;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Friend</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer friend_id;</span><br><span class="line">    <span class="keyword">private</span> String friend_name;</span><br><span class="line">    <span class="keyword">private</span> String friend_sex;</span><br><span class="line">    <span class="keyword">private</span> Integer user_id;</span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Friend</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Friend</span><span class="params">(String friend_name, String friend_sex, Integer user_id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.friend_name = friend_name;</span><br><span class="line">        <span class="keyword">this</span>.friend_sex = friend_sex;</span><br><span class="line">        <span class="keyword">this</span>.user_id = user_id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getFriend_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> friend_id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFriend_id</span><span class="params">(Integer friend_id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.friend_id = friend_id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFriend_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> friend_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFriend_name</span><span class="params">(String friend_name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.friend_name = friend_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFriend_sex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> friend_sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFriend_sex</span><span class="params">(String friend_sex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.friend_sex = friend_sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getUser_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> user_id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_id</span><span class="params">(Integer user_id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.user_id = user_id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.user = user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Friend&#123;"</span> +</span><br><span class="line">                <span class="string">"friend_id="</span> + friend_id +</span><br><span class="line">                <span class="string">", friend_name='"</span> + friend_name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", friend_sex='"</span> + friend_sex + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", user_id="</span> + user_id +</span><br><span class="line">                <span class="string">", user="</span> + user +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>IFriendDao.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lacknb.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.lacknb.beans.Friend;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IFriendDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Friend&gt; <span class="title">selectFriend</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>mapper.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"cn.lacknb.dao.IFriendDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectById"</span> <span class="attr">resultType</span>=<span class="string">"cn.lacknb.beans.User"</span>&gt;</span></span><br><span class="line">        select * from user where uid = #&#123;uid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"friendMap"</span> <span class="attr">type</span>=<span class="string">"cn.lacknb.beans.Friend"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"friend_name"</span> <span class="attr">property</span>=<span class="string">"friend_name"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"friend_sex"</span> <span class="attr">property</span>=<span class="string">"friend_sex"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"user_id"</span> <span class="attr">property</span>=<span class="string">"user_id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"user"</span> <span class="attr">javaType</span>=<span class="string">"cn.lacknb.beans.User"</span> <span class="attr">column</span>=<span class="string">"user_id"</span> <span class="attr">select</span>=<span class="string">"selectById"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    多对一--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectFriend"</span> <span class="attr">resultMap</span>=<span class="string">"friendMap"</span>&gt;</span></span><br><span class="line">        select * from friend</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>其他代码不变</li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Oct 17 2019 21:12:20 GMT+0800 (CST) --&gt;&lt;h2 id=&quot;数据库备份文件&quot;&gt;&lt;a href=&quot;#数据库备份文件&quot; class=&quot;headerlink&quot; title=&quot;数据库备份文件&quot;&gt;&lt;/a&gt;数据库备份文件&lt;/h2&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`user`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`user`&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`uid`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`uname`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`usex`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  PRIMARY &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;`uid`&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;) &lt;span class=&quot;keyword&quot;&gt;ENGINE&lt;/span&gt;=&lt;span class=&quot;keyword&quot;&gt;InnoDB&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;CHARSET&lt;/span&gt;=utf8mb4;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- ----------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- Records of user&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- ----------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`user`&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;张三&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;男&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`user`&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;2&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;李四&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;男&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="mybatis" scheme="https://www.lacknb.cn/categories/mybatis/"/>
    
    
      <category term=" mybatis" scheme="https://www.lacknb.cn/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>maven创建spring入门项目</title>
    <link href="https://www.lacknb.cn/2019/09/21/maven%E5%88%9B%E5%BB%BAspring%E5%85%A5%E9%97%A8%E9%A1%B9%E7%9B%AE/"/>
    <id>https://www.lacknb.cn/2019/09/21/maven创建spring入门项目/</id>
    <published>2019-09-21T06:12:00.000Z</published>
    <updated>2019-10-17T13:12:29.539Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Oct 17 2019 21:12:29 GMT+0800 (CST) --><h2 id="导入依赖jar包-使用的是org-spring-framewok-5-1-5-RELEASE"><a href="#导入依赖jar包-使用的是org-spring-framewok-5-1-5-RELEASE" class="headerlink" title="导入依赖jar包, 使用的是org.spring.framewok 5.1.5 RELEASE"></a>导入依赖jar包, 使用的是org.spring.framewok 5.1.5 RELEASE</h2><ul><li>pom.xm文件的dependencies<a id="more"></a><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--      &lt;scope&gt;test&lt;/scope&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-core --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-beans --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-context --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-expression<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    第三方jar--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="创建xml文件-beans-xml"><a href="#创建xml文件-beans-xml" class="headerlink" title="创建xml文件, beans.xml"></a>创建xml文件, beans.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">          http://www.springframework.org/schema/beans                         http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- bean definitions here --&gt;</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="创建接口"><a href="#创建接口" class="headerlink" title="创建接口"></a>创建接口</h2><ul><li>DoSomething.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lacknb.iml;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DoSomething</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">find</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>创建实现类DoImpl.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lacknb.spring;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.lacknb.iml.DoSomething;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DoImpl</span> <span class="keyword">implements</span> <span class="title">DoSomething</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"添加成功"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"删除成功"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">find</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"查询成功"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"修改成功"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 传统方式</span></span><br><span class="line"><span class="comment">//        DoSomething doing = new DoImpl();</span></span><br><span class="line"><span class="comment">//        doing.add();</span></span><br><span class="line"><span class="comment">//        doing.delete();</span></span><br><span class="line">        <span class="comment">// spring方式</span></span><br><span class="line">        <span class="comment">// 加载容器</span></span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"xml/beans.xml"</span>);</span><br><span class="line">        DoImpl doing = (DoImpl) context.getBean(<span class="string">"dosomething"</span>);</span><br><span class="line">        doing.find();</span><br><span class="line">        doing.update();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Oct 17 2019 21:12:29 GMT+0800 (CST) --&gt;&lt;h2 id=&quot;导入依赖jar包-使用的是org-spring-framewok-5-1-5-RELEASE&quot;&gt;&lt;a href=&quot;#导入依赖jar包-使用的是org-spring-framewok-5-1-5-RELEASE&quot; class=&quot;headerlink&quot; title=&quot;导入依赖jar包, 使用的是org.spring.framewok 5.1.5 RELEASE&quot;&gt;&lt;/a&gt;导入依赖jar包, 使用的是org.spring.framewok 5.1.5 RELEASE&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;pom.xm文件的dependencies&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="spring" scheme="https://www.lacknb.cn/categories/spring/"/>
    
    
      <category term="maven" scheme="https://www.lacknb.cn/tags/maven/"/>
    
      <category term="spring" scheme="https://www.lacknb.cn/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>linux服务器和tomcat部署</title>
    <link href="https://www.lacknb.cn/2019/09/21/linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%92%8Ctomcat%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.lacknb.cn/2019/09/21/linux服务器和tomcat部署/</id>
    <published>2019-09-21T05:31:00.000Z</published>
    <updated>2019-10-14T13:16:34.783Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Oct 17 2019 21:00:00 GMT+0800 (CST) --><h2 id="Centos-解决Tomcat-Manager-App无法访问问题"><a href="#Centos-解决Tomcat-Manager-App无法访问问题" class="headerlink" title="Centos 解决Tomcat Manager App无法访问问题"></a>Centos 解决Tomcat Manager App无法访问问题</h2><p>以前在使用Windows中安装Tomcat时，只需要配置Tomcat目录下/conf/tomcat-user.xml文件就可以，在文件中增加以下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;role rolename=&quot;admin&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;admin-gui&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;admin-script&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;manager&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;manager-gui&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;manager-script&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;manager-jmx&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;manager-status&quot;/&gt;</span><br><span class="line">&lt;user username=&quot;admin&quot; password=&quot;admin&quot; roles=&quot;admin,admin-gui,admin-script,manager,manager-gui,manager-script,manager-jmx,manager-status&quot;/&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><p>添加以上内容，并重启Tomcat之后，就可以，但在Centos中添加了内容，重启之后，发现还是无法访问，还是展示错误提示，又经过N久，查了很多资料，发现还有一项需要配置的。</p><p>就是在Tomcat目录下/conf/Catalina/localhost/下创建 manager.xml，并在文件中添加以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Context privileged=&quot;true&quot; antiResourceLocking=&quot;false&quot;   </span><br><span class="line">         docBase=&quot;$&#123;catalina.home&#125;/webapps/manager&quot;&gt;  </span><br><span class="line">    &lt;Valve className=&quot;org.apache.catalina.valves.RemoteAddrValve&quot; allow=&quot;^.*$&quot; /&gt;  </span><br><span class="line">&lt;/Context&gt;</span><br></pre></td></tr></table></figure><p>完成以上内容之后， 并重启Tomcat之后生，发现Manager App就可以正确访问，展示正常的内容了。</p><h2 id="将maven项目部署到Linux服务器"><a href="#将maven项目部署到Linux服务器" class="headerlink" title="将maven项目部署到Linux服务器"></a>将maven项目部署到Linux服务器</h2><ul><li>在pom.xml配置tomcat插件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置Tomcat插件 --&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">port</span>&gt;</span>80<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://服务器地址:端口号/manager/text<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">username</span>&gt;</span>conf/tomcat-users.xml中的账号<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">password</span>&gt;</span>服务器tomcat密码<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">update</span>&gt;</span>true<span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>maven命令<ul><li>mvn tomcat7:deploy 这是第一次上传的时候</li><li>mvn tomcat7:redeploy 以后需要修改项目的时候,使用这个.</li></ul></li></ul><h2 id="linux后台任务"><a href="#linux后台任务" class="headerlink" title="linux后台任务"></a>linux后台任务</h2><p>fg、bg、jobs、&amp;、ctrl + z都是跟系统任务有关的，虽然现在基本上不怎么需要用到这些命令，但学会了也是很实用的<br>一。&amp; 最经常被用到<br>这个用在一个命令的最后，可以把这个命令放到后台执行<br>二。ctrl + z<br>可以将一个正在前台执行的命令放到后台，并且暂停<br>三。jobs<br>查看当前有多少在后台运行的命令<br>四。fg<br>将后台中的命令调至前台继续运行<br>如果后台中有多个命令，可以用 fg %jobnumber将选中的命令调出，%jobnumber是通过jobs命令查到的后台正在执行的命令的序号(不是pid)<br>五。bg<br>将一个在后台暂停的命令，变成继续执行<br>如果后台中有多个命令，可以用bg %jobnumber将选中的命令调出，%jobnumber是通过jobs命令查到的后台正在执行的命令的序号(不是pid)</p><p><strong>#</strong>Linux下使用Shell命令控制任务Jobs执行</p><p>下列命令可以用来操纵进程任务：<br>ps 列出系统中正在运行的进程；<br>kill 发送信号给一个或多个进程（经常用来杀死一个进程）；<br>jobs 列出当前shell环境中已启动的任务状态，若未指定jobsid，则显示所有活动的任务状态信息；如果报告了一个任务的终止(即任务的状态被标记为Terminated)，shell 从当前的shell环境已知的列表中删除任务的进程标识；<br>bg 将进程搬到后台运行（Background）；<br>fg 将进程搬到前台运行（Foreground）；<br>将job转移到后台运行<br>如果你经常在X图形下工作，你可能有这样的经历：通过终端命令运行一个GUI程序，GUI界面出来了，但是你的终端还停留在原地，你不能在shell中继续执行其他命令了，除非将GUI程序关掉。<br>为了使程序执行后终端还能继续接受命令，你可以将进程移到后台运行，使用如下命令运行程序： #假设要运行xmms<br>$xmms &amp;<br>这样打开xmms后，终端的提示又回来了。现在xmms在后台运行着呢；但万一你运行程序时忘记使用“&amp;”了，又不想重新执行；你可以先使用ctrl+z挂起程序，然后敲入bg命令，这样程序就在后台继续运行了。<br>概念：当前任务<br>如果后台的任务号有2个，[1],[2]；如果当第一个后台任务顺利执行完毕，第二个后台任务还在执行中时，当前任务便会自动变成后台任务号码“[2]”的后台任务。所以可以得出一点，即当前任务是会变动的。当用户输入“fg”、“bg”和“stop”等命令时，如果不加任何引号，则所变动的均是当前任务。<br>察看jobs<br>使用jobs或ps命令可以察看正在执行的jobs。<br>jobs命令执行的结果，＋表示是一个当前的作业，减号表是是一个当前作业之后的一个作业，jobs -l选项可显示所有任务的PID,jobs的状态可以是running, stopped, Terminated,但是如果任务被终止了（kill），shell 从当前的shell环境已知的列表中删除任务的进程标识；也就是说，jobs命令显示的是当前shell环境中所起的后台正在运行或者被挂起的任务信息；<br>进程的挂起<br>后台进程的挂起：<br>在solaris中通过stop命令执行，通过jobs命令查看job号(假设为num)，然后执行stop %num；<br>在redhat中，不存在stop命令，可通过执行命令kill -stop PID，将进程挂起；<br>当要重新执行当前被挂起的任务时，通过bg %num 即可将挂起的job的状态由stopped改为running，仍在后台执行；当需要改为在前台执行时，执行命令fg %num即可；<br>前台进程的挂起：<br>ctrl+Z;<br>进程的终止<br>后台进程的终止：<br>方法一：<br>通过jobs命令查看job号（假设为num），然后执行kill %num<br>方法二：<br>通过ps命令查看job的进程号（PID，假设为pid），然后执行kill pid<br>前台进程的终止：<br>ctrl+c<br>kill的其他作用<br>kill除了可以终止进程，还能给进程发送其它信号，使用kill -l 可以察看kill支持的信号。<br>SIGTERM是不带参数时kill发送的信号，意思是要进程终止运行，但执行与否还得看进程是否支持。如果进程还没有终止，可以使用kill -SIGKILL pid，这是由内核来终止进程，进程不能监听这个信号。</p><p>===================</p><p>Unix/Linux下一般想让某个程序在后台运行，很多都是使用 &amp; 在程序结尾来让程序自动运行。比如我们要运行mysql在后台：</p><p>/usr/local/mysql/bin/mysqld_safe –user=mysql &amp;</p><p>但是我们很多程序并不象mysqld一样可以做成守护进程，可能我们的程序只是普通程序而已，一般这种程序即使使用 &amp; 结尾，如果终端关闭，那么程序也会被关闭。为了能够后台运行，我们需要使用nohup这个命令，比如我们有个start.sh需要在后台运行，并且希望在后台能够一直运行，那么就使用nohup：</p><figure class="highlight plain"><figcaption><span>/root/start.sh &```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">在shell中回车后提示：</span><br><span class="line"></span><br><span class="line">[~]$ appending output to nohup.out</span><br><span class="line"></span><br><span class="line">原程序的的标准输出被自动改向到当前目录下的nohup.out文件，起到了log的作用。</span><br><span class="line"></span><br><span class="line">但是有时候在这一步会有问题，当把终端关闭后，进程会自动被关闭，察看nohup.out可以看到在关闭终端瞬间服务自动关闭。</span><br><span class="line"></span><br><span class="line">咨询红旗Linux工程师后，他也不得其解，在我的终端上执行后，他启动的进程竟然在关闭终端后依然运行。</span><br><span class="line"></span><br><span class="line">在第二遍给我演示时，我才发现我和他操作终端时的一个细节不同：他是在当shell中提示了nohup成功后还需要按终端上键盘任意键退回到shell输入命令窗口，然后通过在shell中输入exit来退出终端；而我是每次在nohup执行成功后直接点关闭程序按钮关闭终端.。所以这时候会断掉该命令所对应的session，导致nohup对应的进程被通知需要一起shutdown。</span><br><span class="line"></span><br><span class="line">这个细节有人和我一样没注意到，所以在这儿记录一下了。</span><br><span class="line"></span><br><span class="line">附：nohup命令参考</span><br><span class="line"></span><br><span class="line">nohup 命令</span><br><span class="line"></span><br><span class="line">　　用途：不挂断地运行命令。</span><br><span class="line"></span><br><span class="line">　　语法：nohup Command [ Arg ... ] [　&amp; ]</span><br><span class="line"></span><br><span class="line">　　描述：nohup 命令运行由 Command 参数和任何相关的 Arg 参数指定的命令，忽略所有挂断（SIGHUP）信号。在注销后使用 nohup 命令运行后台中的程序。要运行后台中的 nohup 命令，添加 &amp; （ 表示&quot;and&quot;的符号）到命令的尾部。</span><br><span class="line"></span><br><span class="line">　　无论是否将 nohup 命令的输出重定向到终端，输出都将附加到当前目录的 nohup.out 文件中。如果当前目录的 nohup.out 文件不可写，输出重定向到 $HOME/nohup.out 文件中。如果没有文件能创建或打开以用于追加，那么 Command 参数指定的命令不可调用。如果标准错误是一个终端，那么把指定的命令写给标准错误的所有输出作为标准输出重定向到相同的文件描述符。</span><br><span class="line"></span><br><span class="line">　　退出状态：该命令返回下列出口值：</span><br><span class="line"></span><br><span class="line">　　126 可以查找但不能调用 Command 参数指定的命令。</span><br><span class="line"></span><br><span class="line">　　127 nohup 命令发生错误或不能查找由 Command 参数指定的命令。</span><br><span class="line"></span><br><span class="line">　　否则，nohup 命令的退出状态是 Command 参数指定命令的退出状态。</span><br><span class="line"></span><br><span class="line">　　nohup命令及其输出文件</span><br><span class="line"></span><br><span class="line">　　nohup命令：如果你正在运行一个进程，而且你觉得在退出帐户时该进程还不会结束，那么可以使用nohup命令。该命令可以在你退出帐户/关闭终端之后继续运行相应的进程。nohup就是不挂起的意思( n ohang up)。</span><br><span class="line"></span><br><span class="line">　　该命令的一般形式为：nohup command &amp;</span><br><span class="line"></span><br><span class="line">　　使用nohup命令提交作业</span><br><span class="line"></span><br><span class="line">　　如果使用nohup命令提交作业，那么在缺省情况下该作业的所有输出都被重定向到一个名为nohup.out的文件中，除非另外指定了输出文件：</span><br><span class="line"></span><br><span class="line">　　nohup command &gt; myout.file 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line">　　在上面的例子中，输出被重定向到myout.file文件中。</span><br><span class="line"></span><br><span class="line">　　使用 jobs 查看任务。</span><br><span class="line"></span><br><span class="line">　　使用 fg %n　关闭。</span><br><span class="line"></span><br><span class="line">　　另外有两个常用的ftp工具ncftpget和ncftpput，可以实现后台的ftp上传和下载，这样就可以利用这些命令在后台上传和下载文件了。</span><br><span class="line"></span><br><span class="line">简单而有用的nohup命令在UNIX/LINUX中，普通进程用&amp;符号放到后台运行，如果启动该程序的控制台logout，则该进程随即终止。</span><br><span class="line"></span><br><span class="line">　　要实现守护进程，一种方法是按守护进程的规则去编程（本站有文章介绍过），比较麻烦；另一种方法是仍然用普通方法编程，然后用nohup命令启动程序：</span><br><span class="line"></span><br><span class="line">　　nohup＜程序名＞&amp;</span><br><span class="line"></span><br><span class="line">　　则控制台logout后，进程仍然继续运行，起到守护进程的作用（虽然它不是严格意义上的守护进程）。</span><br><span class="line"></span><br><span class="line">　　使用nohup命令后，原程序的的标准输出被自动改向到当前目录下的nohup.out文件，起到了log的作用，实现了完整的守护进程功能。</span><br><span class="line"></span><br><span class="line">　　ygwu @ 2005年04月18日 上午10:03</span><br><span class="line"></span><br><span class="line">　　For example：</span><br><span class="line"></span><br><span class="line">　　如何远程启动WebLogic服务?</span><br><span class="line"></span><br><span class="line">　　用telnet远程控制服务器，远程启动WEBLOGIC服务，启动后关闭telnet，WebLogic服务也跟着停止，这是因为使用telnet启动的进程会随着telnet进程的关闭而关闭。所以我们可以使用一些UNIX下的命令来做到不关闭。</span><br><span class="line"></span><br><span class="line">　　使用如下命令：</span><br><span class="line"></span><br><span class="line">　　```nohup startWeblogic.sh&amp;</span><br></pre></td></tr></table></figure><p>如果想要监控标准输出可以使用：</p><p></p><figure class="highlight plain"><figcaption><span>-f nohup.out```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">　　当在后台运行了程序的时候，可以用jobs命令来查看后台作业的状态。在有多个后台程序时，要使用来参数的fg命令将不同序号的后台作业切换到前台上运行。</span><br><span class="line"></span><br><span class="line">　　当用户启动一个进程的时候，这个进程是运行在前台，使用与相应控制终端相联系的标准输入、输出进行输入和输出。即使将进程的输入输出重定向，并将进程放在后台执行，进程仍然和当前终端设备有关系。正因为如此，在当前的登录会话结束时，控制终端设备将和登录进程相脱离，那么系统就向所有与这个终端相联系的进程发送SIGHUP的信号，通知进程线路已经挂起了，如果程序没有接管这个信号的处理，那么缺省的反应是进程结束。因此普通的程序并不能真正脱离登录会话而运行进程，为了使得在系统登录后还可以正常执行，只有使用命令nohup来启动相应程序。</span><br><span class="line"></span><br><span class="line">　　使用命令nohup当然可以启动这样的程序，但nohup启动的程序在进程执行完毕就退出，而常见的一些服务进程通常永久的运行在后台，不向屏幕输出结果。在Unix中这些永久的后台进程称为守护进程（daemon）。守护进程通常从系统启动时自动开始执行，系统关闭时才停止。</span><br><span class="line"></span><br><span class="line">　　在守护进程中，最重要的一个是超级守护进程inetd，这个进程接管了大部分网络服务，但并不是对每个服务都自己进行处理，而是依据连接请求，启动不同的服务程序与客户机打交道。inetd支持网络服务种类在它的设置文件/etc/inet.conf中定义。inet.conf文件中的每一行就对应一个端口地址，当inetd接受到连接这个端口的连接请求时，就启动相应的进程进行处理。使用inetd的好处是系统不必启动很多守护进程，从而节约了系统资源，然而使用inetd启动守护进程相应反应会迟缓一些，不适合用于被密集访问的服务进程</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## centos的防火墙的开启与关闭</span><br><span class="line"></span><br><span class="line">开启端口</span><br><span class="line"></span><br><span class="line">```[root@centos7 ~]# firewall-cmd --zone=public --add-port=80/tcp --permanent</span><br></pre></td></tr></table></figure><p></p><p>查询端口号80 是否开启：</p><figure class="highlight plain"><figcaption><span>~]# firewall-cmd --query-port</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">重启防火墙：</span><br><span class="line"></span><br><span class="line">```[root@centos7 ~]# firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>查询有哪些端口是开启的:</p><p><code>[root@centos7 ~]# firewall-cmd --list-port</code></p><p>命令含义：</p><p>–zone #作用域<br>–add-port=80/tcp #添加端口，格式为：端口/通讯协议<br>–permanent #永久生效，没有此参数重启后失效</p><p>关闭firewall：</p><p>systemctl stop firewalld.service #停止firewall</p><p>systemctl disable firewalld.service #禁止firewall开机启动</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Oct 17 2019 21:00:00 GMT+0800 (CST) --&gt;&lt;h2 id=&quot;Centos-解决Tomcat-Manager-App无法访问问题&quot;&gt;&lt;a href=&quot;#Centos-解决Tomcat-Manager-App无法访问问题&quot; class=&quot;headerlink&quot; title=&quot;Centos 解决Tomcat Manager App无法访问问题&quot;&gt;&lt;/a&gt;Centos 解决Tomcat Manager App无法访问问题&lt;/h2&gt;&lt;p&gt;以前在使用Windows中安装Tomcat时，只需要配置Tomcat目录下/conf/tomcat-user.xml文件就可以，在文件中增加以下：&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;role rolename=&amp;quot;admin&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;role rolename=&amp;quot;admin-gui&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;role rolename=&amp;quot;admin-script&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;role rolename=&amp;quot;manager&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;role rolename=&amp;quot;manager-gui&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;role rolename=&amp;quot;manager-script&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;role rolename=&amp;quot;manager-jmx&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;role rolename=&amp;quot;manager-status&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;user username=&amp;quot;admin&amp;quot; password=&amp;quot;admin&amp;quot; roles=&amp;quot;admin,admin-gui,admin-script,manager,manager-gui,manager-script,manager-jmx,manager-status&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://www.lacknb.cn/categories/linux/"/>
    
      <category term="tomcat" scheme="https://www.lacknb.cn/categories/linux/tomcat/"/>
    
    
      <category term="linux" scheme="https://www.lacknb.cn/tags/linux/"/>
    
      <category term="tomcat" scheme="https://www.lacknb.cn/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>图解MySQL 内连接、外连接、左连接、右连接、全连接……太多了</title>
    <link href="https://www.lacknb.cn/2019/09/15/%E5%9B%BE%E8%A7%A3MySQL-%E5%86%85%E8%BF%9E%E6%8E%A5%E3%80%81%E5%A4%96%E8%BF%9E%E6%8E%A5%E3%80%81%E5%B7%A6%E8%BF%9E%E6%8E%A5%E3%80%81%E5%8F%B3%E8%BF%9E%E6%8E%A5%E3%80%81%E5%85%A8%E8%BF%9E%E6%8E%A5%E2%80%A6%E2%80%A6%E5%A4%AA%E5%A4%9A%E4%BA%86/"/>
    <id>https://www.lacknb.cn/2019/09/15/图解MySQL-内连接、外连接、左连接、右连接、全连接……太多了/</id>
    <published>2019-09-15T03:28:00.000Z</published>
    <updated>2019-09-15T03:30:14.760Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Oct 17 2019 21:00:00 GMT+0800 (CST) --><h2 id="左内连接"><a href="#左内连接" class="headerlink" title="左内连接"></a>左内连接</h2><h2 id="左外连接"><a href="#左外连接" class="headerlink" title="左外连接"></a>左外连接</h2><p><a href="https://blog.csdn.net/plg17/article/details/78758593" target="_blank" rel="noopener">点击跳转到CSDN</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Thu Oct 17 2019 21:00:00 GMT+0800 (CST) --&gt;&lt;h2 id=&quot;左内连接&quot;&gt;&lt;a href=&quot;#左内连接&quot; class=&quot;headerlink&quot; title=&quot;左内连接&quot;&gt;&lt;/a&gt;左内连接&lt;/h2&gt;&lt;h2 id
      
    
    </summary>
    
    
      <category term="mysql" scheme="https://www.lacknb.cn/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://www.lacknb.cn/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Deepin安装Docker</title>
    <link href="https://www.lacknb.cn/2019/09/14/%E5%AE%89%E8%A3%85Docker/"/>
    <id>https://www.lacknb.cn/2019/09/14/安装Docker/</id>
    <published>2019-09-14T05:35:00.000Z</published>
    <updated>2019-10-09T10:42:28.648Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Oct 17 2019 21:00:00 GMT+0800 (CST) --><h1 id="Deepin安装docker"><a href="#Deepin安装docker" class="headerlink" title="Deepin安装docker"></a>Deepin安装docker</h1><p>​ 安装curl</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install curl libcurl3 libcurl3-dev</span><br></pre></td></tr></table></figure><p>​ 获取docker并安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line"></span><br><span class="line">sudo sh get-docker.sh</span><br></pre></td></tr></table></figure><a id="more"></a><p>​ 安装完成查看docker版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker -v</span><br></pre></td></tr></table></figure><p>​ 确认安装成功后执行这条命令，重启后就可以不用sudo直接使用docker命令了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -aG docker  你的用户名</span><br></pre></td></tr></table></figure><p>​ 更换docker镜像源（阿里云）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><p>​ 将以下配置信息copy到编辑器中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;registry-mirrors&quot;: [</span><br><span class="line">&quot;https://kfwkfulq.mirror.aliyuncs.com&quot;,</span><br><span class="line">&quot;https://2lqq34jg.mirror.aliyuncs.com&quot;,</span><br><span class="line">&quot;https://pee6w651.mirror.aliyuncs.com&quot;,</span><br><span class="line">&quot;https://registry.docker-cn.com&quot;,</span><br><span class="line">&quot;http://hub-mirror.c.163.com&quot;</span><br><span class="line">],</span><br><span class="line">&quot;dns&quot;: [&quot;8.8.8.8&quot;,&quot;8.8.4.4&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>by Loki.C</p><h1 id="修改镜像的默认下载位置"><a href="#修改镜像的默认下载位置" class="headerlink" title="修改镜像的默认下载位置"></a>修改镜像的默认下载位置</h1><p>默认情况下docker的存放位置为: <code>/var/lib/docker</code>，一般根下分区我们不会给太大。所以这个时候我们要考虑挂载大分区到 <code>/var/lib/docker</code>，具体的操作步骤如下：</p><ol><li>停掉 Docker</li><li>拷贝 Docker 文件到目录 <code>cp -r /var/lib/docker/* /mnt/</code></li><li>删除 Docker 原始目录 <code>rm -rf /var/lib/docker</code></li><li>挂载分区为 Docker 目录：<code>mount /dev/vdb1 /var/lib/docker</code></li><li>启动 Docker，使用 <code>docker ps</code> 和 <code>docker images</code> 确定迁移成功</li></ol><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Oct 17 2019 21:00:00 GMT+0800 (CST) --&gt;&lt;h1 id=&quot;Deepin安装docker&quot;&gt;&lt;a href=&quot;#Deepin安装docker&quot; class=&quot;headerlink&quot; title=&quot;Deepin安装docker&quot;&gt;&lt;/a&gt;Deepin安装docker&lt;/h1&gt;&lt;p&gt;​ 安装curl&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install curl libcurl3 libcurl3-dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​ 获取docker并安装&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -fsSL https://get.docker.com -o get-docker.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sh get-docker.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="docker" scheme="https://www.lacknb.cn/categories/docker/"/>
    
    
      <category term="docker" scheme="https://www.lacknb.cn/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis的动态SQL</title>
    <link href="https://www.lacknb.cn/2019/09/11/MyBatis%E7%9A%84%E5%8A%A8%E6%80%81SQL/"/>
    <id>https://www.lacknb.cn/2019/09/11/MyBatis的动态SQL/</id>
    <published>2019-09-11T10:41:00.000Z</published>
    <updated>2019-10-17T13:12:36.897Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Oct 17 2019 21:12:37 GMT+0800 (CST) --><h1 id="动态SQL"><a href="#动态SQL" class="headerlink" title="动态SQL"></a>动态SQL</h1><h2 id="lt-if-gt-元素"><a href="#lt-if-gt-元素" class="headerlink" title="&lt; if &gt;元素"></a>&lt; if &gt;元素</h2><ul><li><blockquote><p>通过对姓名的模糊搜索，使用if判断姓名是否为空，如果为空，则是查询所有用户</p></blockquote></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    使用if元素根据条件动态查询用户信息--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUserByIf"</span> <span class="attr">resultType</span>=<span class="string">"cn.test.beans.MyUser"</span> <span class="attr">parameterType</span>=<span class="string">"cn.test.beans.MyUser"</span>&gt;</span></span><br><span class="line">        select * from user where 1 = 1</span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"uname != null and uname != ''"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 这里是根据姓名模糊查找 --&gt;</span></span><br><span class="line">            and uname like concat('%', #&#123;uname&#125;, '%')</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- concat()函数， 将多个字符串连接成一个字符串 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="lt-choose-gt-、-lt-when-gt-、-lt-otherwise-gt-元素"><a href="#lt-choose-gt-、-lt-when-gt-、-lt-otherwise-gt-元素" class="headerlink" title="&lt; choose &gt;、&lt; when &gt;、&lt; otherwise&gt;元素"></a>&lt; choose &gt;、&lt; when &gt;、&lt; otherwise&gt;元素</h2><blockquote><p>有的时候不想用到所有的条件语句，而只想从中择取一二，针对这种情况，MyBatis提供了&lt;choose&gt;元素，它有点像java中的switch语句。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    使用choose、when、otherwise元素根据条件动态查询用户信息--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUserByChoose"</span> <span class="attr">resultType</span>=<span class="string">"cn.test.beans.MyUser"</span> <span class="attr">parameterType</span>=<span class="string">"cn.test.beans.MyUser"</span>&gt;</span></span><br><span class="line">        select * from user where 1 = 1</span><br><span class="line">        <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"uname != null and uname != ''"</span>&gt;</span></span><br><span class="line">                and uname like concat('%', #&#123;uname&#125;, '%')</span><br><span class="line">            <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"usex != null and usex != ''"</span>&gt;</span></span><br><span class="line">                and usex = #&#123;usex&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">                and uid &gt; 10</span><br><span class="line">            <span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/09/11/nwCCc9.png" alt></p><h2 id="lt-trim-gt-、-lt-where-gt-、-lt-set-gt-元素"><a href="#lt-trim-gt-、-lt-where-gt-、-lt-set-gt-元素" class="headerlink" title="&lt; trim&gt;、&lt; where&gt;、&lt; set&gt;元素"></a>&lt; trim&gt;、&lt; where&gt;、&lt; set&gt;元素</h2><ul><li>&lt; trim&gt;元素<ul><li>&lt; trim&gt;元素的主要功能是可以在自己包含的内容前加上某些前缀，也可以是在其后加上某些后缀，与之对应的属性是prefix和suffix; 可以把包含内容的首部某些内容覆盖，即忽略，也可以把尾部的某些内容覆盖，对应的属性是prefixOverrides和suffixOverrides。正因为&lt;trim&gt;元素有这样的功能，所以也可以非常简单地利用&lt; trim&gt;来代替&lt; where&gt;元素的个功能。</li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    使用trim元素根据条件动态查询用户信息--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUserByTrim"</span> <span class="attr">resultType</span>=<span class="string">"cn.test.beans.MyUser"</span> <span class="attr">parameterType</span>=<span class="string">"cn.test.beans.MyUser"</span>&gt;</span></span><br><span class="line">        select * from user</span><br><span class="line">        <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">"where"</span> <span class="attr">prefixOverrides</span>=<span class="string">"and | or"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"uname != null and uname != ''"</span>&gt;</span></span><br><span class="line">                and uname like concat('%', #&#123;uname&#125;, '%')</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"usex != null and usex != ''"</span>&gt;</span></span><br><span class="line">                and usex = #&#123;usex&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/09/11/nwPOiT.png" alt></p><ul><li>&lt; where&gt;元素<ul><li>&lt; where&gt;元素的作用是会在写入&lt; where&gt;元素的地方输出一个where语句，另一个好处是不需要考虑&lt; where&gt;元素里面的条件输出是什么样子的，MyBatis将智能处理。如果所有的条件都不满足，那么MyBatis就会查出所有的记录，如果输出是以and开头的，MyBatis会把地一个and忽略，当然如果是以or开头的，MyBatis也会把它忽略; 此外，在&lt; where&gt;元素中不需要考虑空格的问题，MyBatis将智能加上。</li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    使用where元素根据条件动态查询用户信息--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUserByWhere"</span> <span class="attr">resultType</span>=<span class="string">"cn.test.beans.MyUser"</span> <span class="attr">parameterType</span>=<span class="string">"cn.test.beans.MyUser"</span>&gt;</span></span><br><span class="line">        select * from user</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"uname != null and uname != ''"</span>&gt;</span></span><br><span class="line">                and uname like concat('%', #&#123;uname&#125;, '%')</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"usex != null and usex != ''"</span>&gt;</span></span><br><span class="line">                and usex = #&#123;usex&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>运行结果和sql语句同上</strong></p><ul><li>&lt; set&gt;元素<ul><li>在动态update语句中可以使用&lt; set&gt;元素动态更新序列。</li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    使用set元素动态修改一个用户--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateUserBySet"</span> <span class="attr">parameterType</span>=<span class="string">"cn.test.beans.MyUser"</span>&gt;</span></span><br><span class="line">        update user</span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"uname != null"</span>&gt;</span></span><br><span class="line">                uname = #&#123;uname&#125;, <span class="comment">&lt;!--这里的逗号不能少--&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"usex != null"</span>&gt;</span></span><br><span class="line">                usex = #&#123;usex&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">        where uid = #&#123;uid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/09/11/nwEjKg.png" alt></p><ul><li>&lt; foreach&gt;元素<ul><li>&lt; foreach&gt;元素主要用 在构建in条件中，它可以在SQL语句中迭代一个集合。&lt; foreach&gt;元素的属性有item、index、collection、open、separator、close、。item表示集合中每个元素进行迭代时的别名，index指定一个名字，用于表示在迭代过程中每次迭代到的位置，open表示该语句以什么开始，separator表示在每次进行迭代之间以什么符号作为间隔符，close表示以什么结束。在使用&lt; foreach&gt;元素时，最关键、最容易出错的是collection属性，该属性是必选的，但在不同情况下该属性的值是不一样的，主要有一下三种情况：<ul><li>如果传入的是单参数且参数类型是一个List，collection属性值为list</li><li>如果传入的是单参数且参数类型是一个array数组，collection属性值为array</li><li>如果传入的参数是多个，需要把它们封装成一个Map，当然单参数也可以封装成Map。Map的key是参数名， collection属性值是传入的List或Array对象在自己封装的Map中的key</li></ul></li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    使用foreach元素查询用户信息--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUserByForeach"</span> <span class="attr">resultType</span>=<span class="string">"cn.test.beans.MyUser"</span> <span class="attr">parameterType</span>=<span class="string">"List"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        select * from user where uid in</span><br><span class="line">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"list"</span> <span class="attr">item</span>=<span class="string">"item"</span> <span class="attr">index</span>=<span class="string">"index"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">separator</span>=<span class="string">","</span> <span class="attr">close</span>=<span class="string">")"</span>&gt;</span></span><br><span class="line">            #&#123;item&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/09/11/nweOxK.png" alt></p><p><img src="https://s2.ax1x.com/2019/09/11/nwmUo9.png" alt></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用foreach元素查询用户信息</span></span><br><span class="line">List&lt;Integer&gt; listId = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">listId.add(<span class="number">34</span>);</span><br><span class="line">listId.add(<span class="number">37</span>);</span><br><span class="line">listId.add(<span class="number">39</span>);</span><br><span class="line">List&lt;MyUser&gt; listByForeach = dao.selectUserByForeach(listId);</span><br><span class="line">System.out.println(<span class="string">"foreach元素==============="</span>);</span><br><span class="line"><span class="keyword">for</span> (MyUser myUser : listByForeach)&#123;</span><br><span class="line">    System.out.println(myUser);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="lt-bind-gt-元素"><a href="#lt-bind-gt-元素" class="headerlink" title="&lt; bind&gt;元素"></a>&lt; bind&gt;元素</h2><ul><li>在进行模糊查询时，如果使用”${}”拼接字符串，则无法防止SQL注入问题; 如果使用字符串拼接函数或连接符号，但不同数据库的拼接函数或连接符号不同，例如Mysql的concat()函数、Oracle的连接符号“||”, 这样SQL映射文件就需要根据不同的数据库提供不同的实现，显然比较麻烦，且不利于代码的移植。幸运的是，MyBatis提供了&lt; bind&gt;元素来解决这一问题。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    使用bind元素进行模糊查询--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUserByBind"</span> <span class="attr">resultType</span>=<span class="string">"cn.test.beans.MyUser"</span> <span class="attr">parameterType</span>=<span class="string">"cn.test.beans.MyUser"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--bind中的uname是cn.test.beans.MyUser的属性名 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bind</span> <span class="attr">name</span>=<span class="string">"paran_uname"</span> <span class="attr">value</span>=<span class="string">"'%' + uname + '%'"</span>/&gt;</span></span><br><span class="line">        select * from user where uname like #&#123;paran_uname&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/09/11/nwnNX8.png" alt></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Oct 17 2019 21:12:37 GMT+0800 (CST) --&gt;&lt;h1 id=&quot;动态SQL&quot;&gt;&lt;a href=&quot;#动态SQL&quot; class=&quot;headerlink&quot; title=&quot;动态SQL&quot;&gt;&lt;/a&gt;动态SQL&lt;/h1&gt;&lt;h2 id=&quot;lt-if-gt-元素&quot;&gt;&lt;a href=&quot;#lt-if-gt-元素&quot; class=&quot;headerlink&quot; title=&quot;&amp;lt; if &amp;gt;元素&quot;&gt;&lt;/a&gt;&amp;lt; if &amp;gt;元素&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;blockquote&gt;&lt;p&gt;通过对姓名的模糊搜索，使用if判断姓名是否为空，如果为空，则是查询所有用户&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--    使用if元素根据条件动态查询用户信息--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;selectUserByIf&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;resultType&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;cn.test.beans.MyUser&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;parameterType&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;cn.test.beans.MyUser&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        select * from user where 1 = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;test&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;uname != null and uname != &#39;&#39;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 这里是根据姓名模糊查找 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            and uname like concat(&#39;%&#39;, #&amp;#123;uname&amp;#125;, &#39;%&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;if&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- concat()函数， 将多个字符串连接成一个字符串 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;select&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="mybatis" scheme="https://www.lacknb.cn/categories/mybatis/"/>
    
    
      <category term="mybatis" scheme="https://www.lacknb.cn/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>Git笔记</title>
    <link href="https://www.lacknb.cn/2019/09/11/Git%E7%AC%94%E8%AE%B0/"/>
    <id>https://www.lacknb.cn/2019/09/11/Git笔记/</id>
    <published>2019-09-11T10:40:00.000Z</published>
    <updated>2019-09-11T10:40:45.828Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Oct 17 2019 21:00:00 GMT+0800 (CST) --><h1 id="Git笔记"><a href="#Git笔记" class="headerlink" title="Git笔记"></a>Git笔记</h1><p><strong>工作区（写代码）—&gt; git add 暂存区（临时存储） —&gt; git commit 本地库（历史版本）</strong></p><h2 id="初始化-git-init"><a href="#初始化-git-init" class="headerlink" title="初始化 git init"></a>初始化 git init</h2><ul><li>会生成 .git隐藏目录<ul><li><img src="https://s2.ax1x.com/2019/09/10/naSAmT.png" alt></li></ul></li></ul><h2 id="形式-设置签名"><a href="#形式-设置签名" class="headerlink" title="形式 (设置签名)"></a>形式 (设置签名)</h2><ol><li><p>用户名：</p></li><li><p>Email地址：</p></li><li><p>作用：</p><a id="more"></a><ol><li>区分不同开发人员的身份</li></ol></li><li><p>辨析：</p><ol><li>这里设置的签名和登录远程库（代码托管中心）的帐号、密码 没有任何关系</li></ol></li><li><p>命令：</p><ol><li><p>项目级别/仓库级别：</p><ol><li>仅在当前本地库范围内有效<ol><li>git config user.name xxx</li><li>git config user.email <a href="mailto:xxx@xx.com" target="_blank" rel="noopener">xxx@xx.com</a></li></ol></li></ol></li><li><p>系统用户级别：</p><ol><li><p>登录当前操作系统的用户范围</p><ol><li><p>git config –global user.name xxx</p></li><li><p>git config –global user.email <a href="mailto:xxx@xx.com" target="_blank" rel="noopener">xxx@xx.com</a></p></li><li><p><img src="https://s2.ax1x.com/2019/09/10/na98Fe.png" alt></p></li></ol></li></ol></li></ol></li></ol><ol start="3"><li><p>优先级：</p><ol><li>就近原则：项目级别优先于系统级别，二者都有时采用项目级别的签名</li><li>如果只有系统用户级别的签名，就以系统用户级别的签名为准<ol><li>二者都没有 是不允许的</li></ol></li></ol></li><li><p>设置之后的值就会显示 在config文件中. /.git/config</p><ol><li><img src="https://s2.ax1x.com/2019/09/10/napqZ8.png" alt></li></ol></li></ol><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><ul><li>git status 状态查看操作<ul><li>查看工作区、暂存区状态</li></ul></li></ul><blockquote><p>在vim 编辑器中 : set nu 显示行号。 如果提交的时候 用的nano编辑器，可以在config文件中，在core中后面添加 editor=vim 即可使用vim编辑器了。</p></blockquote><ul><li><p>添加操作</p><ul><li>git add filename</li><li>将工作去的 “新建/修改” 添加到暂存区</li></ul></li><li><p>git commit 提交到仓库</p><ul><li><p>将暂存区的内容提交到本地库</p></li><li><p><img src="https://s2.ax1x.com/2019/09/10/nakmbq.png" alt></p></li></ul></li></ul><ul><li>git commit -m “需要附加的信息” 文件名</li></ul><h2 id="怎么实现版本的前进与后退"><a href="#怎么实现版本的前进与后退" class="headerlink" title="怎么实现版本的前进与后退"></a>怎么实现版本的前进与后退</h2><blockquote><p>*<em>git log *</em>查看历史版本</p></blockquote><ul><li>多屏显示控制方式：<ul><li>空格向下翻页</li><li>b向上翻页</li><li>q退出</li></ul></li></ul><p><img src="https://s2.ax1x.com/2019/09/10/naVZKH.png" alt></p><ul><li>git log –pretty=oneline</li><li>git log –oneline<ul><li>只显示当前使用版本的 以后的旧版本</li></ul></li><li>git reflog</li></ul><h2 id="前进后退"><a href="#前进后退" class="headerlink" title="前进后退"></a>前进后退</h2><ul><li>HEAD - &gt; 的移动</li><li>基于索引值的操作<ul><li>git reset –hard hash索引值<ul><li><img src="https://s2.ax1x.com/2019/09/10/naeEBd.png" alt></li></ul></li></ul></li><li>使用^符号进行操作（只能后退）<ul><li>git reset –hard HEAD^ （回退一个版本）</li><li>git reset –hard HEAD^^^ （回退三个版本）</li></ul></li><li>使用~符号进行操作 （也是只能后退的）<ul><li>git reset –hard HEAD~3 （回退三个版本）</li><li>~n 就是后退n步</li></ul></li></ul><hr><h2 id="reset命令的三个参数对比"><a href="#reset命令的三个参数对比" class="headerlink" title="reset命令的三个参数对比"></a>reset命令的三个参数对比</h2><ul><li>–soft参数<ul><li>仅仅在本地库移动HEAD指针</li></ul></li><li>–mixed参数<ul><li>在本地库移动HEAD指针</li><li>重置暂存区</li></ul></li><li>–hard参数<ul><li>在本地库移动HEAD指针</li><li>重置暂存区</li><li>重置工作区</li></ul></li></ul><h2 id="删除文件找回"><a href="#删除文件找回" class="headerlink" title="删除文件找回"></a>删除文件找回</h2><ul><li>前提： 删除前，文件存在时的状态提交到了本地库</li><li>操作：git reset –hard 指针位置<ul><li>删除操作已经提交到本地库： 指针位置指向历史记录</li><li>删除操作未提交到本地库： 指针位置使用HEAD</li></ul></li></ul><h2 id="比较文件差异"><a href="#比较文件差异" class="headerlink" title="比较文件差异"></a>比较文件差异</h2><ul><li>git diff [文件名]<ul><li>将工作区中的文件和暂存区进行比较</li></ul></li><li>git diff [本地库中历史版本]..[文件名]<ul><li>将工作区中的文件和本地库历史记录比较</li></ul></li><li>不带文件名比较多个文件</li></ul><h1 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h1><ul><li>Master</li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Oct 17 2019 21:00:00 GMT+0800 (CST) --&gt;&lt;h1 id=&quot;Git笔记&quot;&gt;&lt;a href=&quot;#Git笔记&quot; class=&quot;headerlink&quot; title=&quot;Git笔记&quot;&gt;&lt;/a&gt;Git笔记&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;工作区（写代码）—&amp;gt; git add 暂存区（临时存储） —&amp;gt; git commit 本地库（历史版本）&lt;/strong&gt;&lt;/p&gt;&lt;h2 id=&quot;初始化-git-init&quot;&gt;&lt;a href=&quot;#初始化-git-init&quot; class=&quot;headerlink&quot; title=&quot;初始化 git init&quot;&gt;&lt;/a&gt;初始化 git init&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;会生成 .git隐藏目录&lt;ul&gt;&lt;li&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/09/10/naSAmT.png&quot; alt&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;形式-设置签名&quot;&gt;&lt;a href=&quot;#形式-设置签名&quot; class=&quot;headerlink&quot; title=&quot;形式 (设置签名)&quot;&gt;&lt;/a&gt;形式 (设置签名)&lt;/h2&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;用户名：&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Email地址：&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;作用：&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
    
      <category term="git" scheme="https://www.lacknb.cn/categories/git/"/>
    
    
      <category term="git" scheme="https://www.lacknb.cn/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis使用注解入门案例</title>
    <link href="https://www.lacknb.cn/2019/09/06/Mybatis%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8B/"/>
    <id>https://www.lacknb.cn/2019/09/06/Mybatis使用注解入门案例/</id>
    <published>2019-09-06T08:29:00.000Z</published>
    <updated>2019-10-17T13:12:43.164Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Oct 17 2019 21:12:43 GMT+0800 (CST) --><hr><h1 id="创建Maven工程"><a href="#创建Maven工程" class="headerlink" title="创建Maven工程"></a>创建Maven工程</h1><ul><li><p>数据库另一个文章的、<a href="http://gitsilence.gitee.io:4000/2019/09/01/Untitled/#%E9%85%8D%E7%BD%AEpow-xml" target="_blank" rel="noopener">点击进入</a></p></li><li><p>目录结构如图所示<img src="https://s2.ax1x.com/2019/09/06/nMFqpD.png" alt></p><ul><li>在resources中创建包的时候，不要直接创建com.config.xml, 正确方式应该是：　com/config/xml</li></ul></li><li><p>pow.xml的配置、　<a href="http://gitsilence.gitee.io:4000/2019/09/01/Untitled/#%E9%85%8D%E7%BD%AEpow-xml" target="_blank" rel="noopener">点击进入</a></p></li><li><p><strong>使用注解方式，不需要创建Mapper.xml, 忘了删除了…</strong></p><a id="more"></a></li><li><p>实体类User.java</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lacknb.beans;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String uname;</span><br><span class="line">    <span class="keyword">private</span> String usex;</span><br><span class="line">    <span class="keyword">private</span> Integer uid;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> uname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUname</span><span class="params">(String uname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.uname = uname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> usex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsex</span><span class="params">(String usex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.usex = usex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getUid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> uid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUid</span><span class="params">(Integer uid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.uid = uid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"User&#123;"</span> +</span><br><span class="line">                <span class="string">"uname='"</span> + uname + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", usex='"</span> + usex + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", uid="</span> + uid +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>创建接口IUserDao.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lacknb.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.lacknb.beans.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IUserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"select * from user"</span>)</span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>创建测试类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lacknb.mybatis02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.lacknb.beans.User;</span><br><span class="line"><span class="keyword">import</span> cn.lacknb.dao.IUserDao;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取配置文件</span></span><br><span class="line">        InputStream config = Resources.getResourceAsStream(<span class="string">"com/config/xml/mybatis-config.xml"</span>);</span><br><span class="line">        <span class="comment">// 创建SqlSessionFactory</span></span><br><span class="line">        SqlSessionFactoryBuilder builder = <span class="keyword">new</span> SqlSessionFactoryBuilder();</span><br><span class="line">        SqlSessionFactory factory = builder.build(config);</span><br><span class="line">        <span class="comment">// 使用工厂类生产SqlSession对象</span></span><br><span class="line">        SqlSession session = factory.openSession();</span><br><span class="line">        <span class="comment">// 使用Sqlsession创建Dao接口的代理对象</span></span><br><span class="line">        IUserDao dao = session.getMapper(IUserDao.class);</span><br><span class="line">        <span class="comment">// 使用代理对象执行方法</span></span><br><span class="line">        List&lt;User&gt; users = dao.findAll();</span><br><span class="line">        <span class="keyword">for</span> (User user: users)&#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">        session.close();</span><br><span class="line">        config.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>mybatis-config.xml文件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    配置环境--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--       配置mysql的环境， 和default保持一致--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--           配置事务的类型　ＪＤＢＣ  --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            配置数据源（连接池）--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/mybatis?characterEncoding=utf8"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        映射文件的位置--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;mapper resource="com/config/xml/Mapper.xml"/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        使用注解的方式--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">"cn.lacknb.dao.IUserDao"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>显示日志文件log4j.properties</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># global logging configuration</span><br><span class="line">log4j.rootLogger=ERROR, stdout</span><br><span class="line"># Mybatis logging configuration...</span><br><span class="line"># 将包com.mybatis下的日志等级设为DEBUG</span><br><span class="line">log4j.logger.com.mybatis=DEBUG</span><br><span class="line"># Console output ...</span><br><span class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</span><br><span class="line"></span><br><span class="line">log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Oct 17 2019 21:12:43 GMT+0800 (CST) --&gt;&lt;hr&gt;&lt;h1 id=&quot;创建Maven工程&quot;&gt;&lt;a href=&quot;#创建Maven工程&quot; class=&quot;headerlink&quot; title=&quot;创建Maven工程&quot;&gt;&lt;/a&gt;创建Maven工程&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;数据库另一个文章的、&lt;a href=&quot;http://gitsilence.gitee.io:4000/2019/09/01/Untitled/#%E9%85%8D%E7%BD%AEpow-xml&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;点击进入&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;目录结构如图所示&lt;img src=&quot;https://s2.ax1x.com/2019/09/06/nMFqpD.png&quot; alt&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;在resources中创建包的时候，不要直接创建com.config.xml, 正确方式应该是：　com/config/xml&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;pow.xml的配置、　&lt;a href=&quot;http://gitsilence.gitee.io:4000/2019/09/01/Untitled/#%E9%85%8D%E7%BD%AEpow-xml&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;点击进入&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;使用注解方式，不需要创建Mapper.xml, 忘了删除了…&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="mybatis" scheme="https://www.lacknb.cn/categories/mybatis/"/>
    
    
      <category term="mybatis" scheme="https://www.lacknb.cn/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>MybatisUtils工具类</title>
    <link href="https://www.lacknb.cn/2019/09/06/MybatisUtils%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    <id>https://www.lacknb.cn/2019/09/06/MybatisUtils工具类/</id>
    <published>2019-09-06T08:17:00.000Z</published>
    <updated>2019-10-17T13:12:49.458Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Oct 17 2019 21:12:49 GMT+0800 (CST) --><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><ul><li><blockquote><h2 id="SqlSession"><a href="#SqlSession" class="headerlink" title="SqlSession"></a>SqlSession</h2><p>每个线程都应该有它自己的 SqlSession 实例。<strong>SqlSession 的实例不是线程安全的</strong>，因此是不能被共享的，所以它的最佳的作用域是请求或方法作用域。<strong>绝对不能将 SqlSession 实例的引用放在一个类的静态域</strong>，甚至一个类的实例变量也不行。 也绝不能将 SqlSession 实例的引用放在任何类型的托管作用域中，比如 Servlet 框架中的 HttpSession。 如果你现在正在使用一种 Web 框架，要考虑 SqlSession 放在一个和 HTTP 请求对象相似的作用域中。 换句话说，每次收到的 HTTP 请求，就可以打开一个 SqlSession，返回一个响应，就关闭它。 这个关闭操作是很重要的，你应该把这个关闭操作放到 finally 块中以确保每次都能执行关闭。</p></blockquote></li></ul><p><a href="http://gitsilence.gitee.io/2019/09/05/Mybatis%E4%B8%80%E4%BA%9B%E7%BB%86%E8%8A%82%E8%AF%A6%E8%A7%A3-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/" target="_blank" rel="noopener">Mybatis一些细节详解-持续更新</a></p><a id="more"></a><h2 id="MybatisUtils-java"><a href="#MybatisUtils-java" class="headerlink" title="MybatisUtils.java"></a>MybatisUtils.java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mybatis.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory factory;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream in = Resources.getResourceAsStream(<span class="string">"mybatis-config.xml"</span>);</span><br><span class="line">            factory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSession <span class="title">getSession</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> factory.openSession();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Oct 17 2019 21:12:49 GMT+0800 (CST) --&gt;&lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;blockquote&gt;&lt;h2 id=&quot;SqlSession&quot;&gt;&lt;a href=&quot;#SqlSession&quot; class=&quot;headerlink&quot; title=&quot;SqlSession&quot;&gt;&lt;/a&gt;SqlSession&lt;/h2&gt;&lt;p&gt;每个线程都应该有它自己的 SqlSession 实例。&lt;strong&gt;SqlSession 的实例不是线程安全的&lt;/strong&gt;，因此是不能被共享的，所以它的最佳的作用域是请求或方法作用域。&lt;strong&gt;绝对不能将 SqlSession 实例的引用放在一个类的静态域&lt;/strong&gt;，甚至一个类的实例变量也不行。 也绝不能将 SqlSession 实例的引用放在任何类型的托管作用域中，比如 Servlet 框架中的 HttpSession。 如果你现在正在使用一种 Web 框架，要考虑 SqlSession 放在一个和 HTTP 请求对象相似的作用域中。 换句话说，每次收到的 HTTP 请求，就可以打开一个 SqlSession，返回一个响应，就关闭它。 这个关闭操作是很重要的，你应该把这个关闭操作放到 finally 块中以确保每次都能执行关闭。&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;http://gitsilence.gitee.io/2019/09/05/Mybatis%E4%B8%80%E4%BA%9B%E7%BB%86%E8%8A%82%E8%AF%A6%E8%A7%A3-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Mybatis一些细节详解-持续更新&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="mybatis" scheme="https://www.lacknb.cn/categories/mybatis/"/>
    
    
      <category term="mybatis" scheme="https://www.lacknb.cn/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis一些细节详解[持续更新]</title>
    <link href="https://www.lacknb.cn/2019/09/05/Mybatis%E4%B8%80%E4%BA%9B%E7%BB%86%E8%8A%82%E8%AF%A6%E8%A7%A3-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/"/>
    <id>https://www.lacknb.cn/2019/09/05/Mybatis一些细节详解-持续更新/</id>
    <published>2019-09-05T08:14:00.000Z</published>
    <updated>2019-10-17T13:12:56.508Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Oct 17 2019 21:12:56 GMT+0800 (CST) --><h2 id="原文来自mybatis官网，点此进入"><a href="#原文来自mybatis官网，点此进入" class="headerlink" title="原文来自mybatis官网，点此进入"></a><a href="http://www.mybatis.org/mybatis-3/zh/getting-started.html" target="_blank" rel="noopener">原文来自mybatis官网，点此进入</a></h2><h1 id="mybatis中的命名解析"><a href="#mybatis中的命名解析" class="headerlink" title="mybatis中的命名解析"></a>mybatis中的命名解析</h1><p><strong>为了减少输入量，MyBatis中，命名空间(Namespaces)的作用并不大，是可选的。但现在，随着命名空间越发重要，你必须指定命名空间</strong></p><p><strong><em>命名空间的作用有两个，一个是利用更长的完全限定名来将不同的语句隔离开来，同时也实现了你上面见到的接口绑定。就算你觉得暂时用不到接口绑定，你也应该遵循这里的规定，以防哪天你改变了注意。长远看来,只要将命名空间置于合适的Java包命名空间之中，你的代码会变得更加整洁，也有利于你更方便地使用Mybatis。</em></strong></p><a id="more"></a><p>*<em>命名解析: *</em>　为了减少输入量，MyBatis对所有的命名配置元素（包括语句，结果映射，缓存等）使用如下的命名解析规则。</p><ul><li><p>完全限定名 (比如　“com.mypackage.MyMapper.selectAllThings”)将被直接用于查找及使用。</p></li><li><p>短名称　(比如　“selectAllThings”)如果全局唯一也可以作为一个单独的引用。如果不唯一，有两个或两个以上的相同名称（比如　“com.foo.selectAllThings” 和　“com.bar.selectAllThings”, 那么使用时就会产生”短名称不唯一”的错误，这种情况下就必须使用完全限定名。</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.mybatis.example;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogMapper</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Select</span>(<span class="string">"SELECT * FROM blog WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">  <span class="function">Blog <span class="title">selectBlog</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><blockquote><p>使用注解来映射简单语句会使代码显得更加简洁，然而对于稍微复杂一点的语句，Java 注解就力不从心了，并且会显得更加混乱。<br>因此，如果你需要完成很复杂的事情，那么最好使用 XML 来映射语句。选择何种方式来配置映射，以及认为映射语句定义的一致性是否重要，这些完全取决于你和你的团队。 换句话说，永远不要拘泥于一种方式，你可以很轻松的在基于注解和 XML 的语句映射方式间自由移植和切换。</p></blockquote></li></ul><h1 id="作用域（Scope）和生命周期"><a href="#作用域（Scope）和生命周期" class="headerlink" title="作用域（Scope）和生命周期"></a>作用域（Scope）和生命周期</h1><p>理解我们目前已经讨论过的不同作用域和生命周期类是至关重要的，因为错误的使用会导致非常严重的并发问题。</p><hr><p>提示 对象生命周期和依赖注入框架</p><p>依赖注入框架可以创建线程安全的、基于事务的 SqlSession 和映射器，并将它们直接注入到你的 bean 中，因此可以直接忽略它们的生命周期。 如果对如何通过依赖注入框架来使用 MyBatis 感兴趣，可以研究一下 MyBatis-Spring 或 MyBatis-Guice 两个子项目。</p><hr><h2 id="SqlSessionFactoryBuilder"><a href="#SqlSessionFactoryBuilder" class="headerlink" title="SqlSessionFactoryBuilder"></a>SqlSessionFactoryBuilder</h2><p>这个类可以被实例化、使用和丢弃，一旦创建了 SqlSessionFactory，就不再需要它了。 因此 SqlSessionFactoryBuilder 实例的最佳作用域是方法作用域（也就是局部方法变量）。 你可以重用 SqlSessionFactoryBuilder 来创建多个 SqlSessionFactory 实例，但是最好还是不要让其一直存在，以保证所有的 XML 解析资源可以被释放给更重要的事情。</p><h2 id="SqlSessionFactory"><a href="#SqlSessionFactory" class="headerlink" title="SqlSessionFactory"></a>SqlSessionFactory</h2><p>SqlSessionFactory 一旦被创建就应该在应用的运行期间一直存在，没有任何理由丢弃它或重新创建另一个实例。 使用 SqlSessionFactory 的最佳实践是在应用运行期间不要重复创建多次，多次重建 SqlSessionFactory 被视为一种代码“坏味道（bad smell）”。因此 SqlSessionFactory 的最佳作用域是应用作用域。 有很多方法可以做到，最简单的就是使用单例模式或者静态单例模式。</p><h2 id="SqlSession"><a href="#SqlSession" class="headerlink" title="SqlSession"></a>SqlSession</h2><p>每个线程都应该有它自己的 SqlSession 实例。SqlSession 的实例不是线程安全的，因此是不能被共享的，所以它的最佳的作用域是请求或方法作用域。 绝对不能将 SqlSession 实例的引用放在一个类的静态域，甚至一个类的实例变量也不行。 也绝不能将 SqlSession 实例的引用放在任何类型的托管作用域中，比如 Servlet 框架中的 HttpSession。 如果你现在正在使用一种 Web 框架，要考虑 SqlSession 放在一个和 HTTP 请求对象相似的作用域中。 换句话说，每次收到的 HTTP 请求，就可以打开一个 SqlSession，返回一个响应，就关闭它。 这个关闭操作是很重要的，你应该把这个关闭操作放到 finally 块中以确保每次都能执行关闭。 下面的示例就是一个确保 SqlSession 关闭的标准模式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> (SqlSession session = sqlSessionFactory.openSession()) &#123;</span><br><span class="line">  <span class="comment">// 你的应用逻辑代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在你的所有的代码中一致地使用这种模式来保证所有数据库资源都能被正确地关闭。</p><h2 id="映射器实例"><a href="#映射器实例" class="headerlink" title="映射器实例"></a>映射器实例</h2><p>映射器是一些由你创建的、绑定你映射的语句的接口。映射器接口的实例是从 SqlSession 中获得的。因此从技术层面讲，任何映射器实例的最大作用域是和请求它们的 SqlSession 相同的。尽管如此，映射器实例的最佳作用域是方法作用域。 也就是说，映射器实例应该在调用它们的方法中被请求，用过之后即可丢弃。 并不需要显式地关闭映射器实例，尽管在整个请求作用域保持映射器实例也不会有什么问题，但是你很快会发现，像 SqlSession 一样，在这个作用域上管理太多的资源的话会难于控制。 为了避免这种复杂性，最好把映射器放在方法作用域内。下面的示例就展示了这个实践：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> (SqlSession session = sqlSessionFactory.openSession()) &#123;</span><br><span class="line">  BlogMapper mapper = session.getMapper(BlogMapper.class);</span><br><span class="line">  <span class="comment">// 你的应用逻辑代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Resource属性、url属性、uri属性"><a href="#Resource属性、url属性、uri属性" class="headerlink" title="Resource属性、url属性、uri属性"></a>Resource属性、url属性、uri属性</h2><ul><li><p>resource属性：</p><ul><li>常用的，用于指定配置文件的位置，是按照类路径的写法来写，并且必须存在于类路径下。</li></ul></li><li><p>url属性：</p><ul><li><p>是要求按照Url的写法来写地址</p></li><li><p>URL: Uniform Resource Locator 统一资源定位符。它是可以唯一标识一个资源的位置。‘</p></li><li><p>例如写法：</p><ul><li><properties url="file:///media/nianshao/59D5FCE97201B8A7/java/apache-maven-3.6.1/conf/settings.xml"></properties></li></ul></li></ul></li></ul><ul><li><p>它的写法：</p><ul><li><a href="http://localhost:8080/mybatis/demo01Servlet" target="_blank" rel="noopener">http://localhost:8080/mybatis/demo01Servlet</a></li><li>协议 主机 端口 URI</li></ul></li></ul><ul><li>URI： Uniform Resource Identifier 统一资源标识符。它是在应用中可以唯一定位一个资源的。</li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Oct 17 2019 21:12:56 GMT+0800 (CST) --&gt;&lt;h2 id=&quot;原文来自mybatis官网，点此进入&quot;&gt;&lt;a href=&quot;#原文来自mybatis官网，点此进入&quot; class=&quot;headerlink&quot; title=&quot;原文来自mybatis官网，点此进入&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.mybatis.org/mybatis-3/zh/getting-started.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原文来自mybatis官网，点此进入&lt;/a&gt;&lt;/h2&gt;&lt;h1 id=&quot;mybatis中的命名解析&quot;&gt;&lt;a href=&quot;#mybatis中的命名解析&quot; class=&quot;headerlink&quot; title=&quot;mybatis中的命名解析&quot;&gt;&lt;/a&gt;mybatis中的命名解析&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;为了减少输入量，MyBatis中，命名空间(Namespaces)的作用并不大，是可选的。但现在，随着命名空间越发重要，你必须指定命名空间&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;命名空间的作用有两个，一个是利用更长的完全限定名来将不同的语句隔离开来，同时也实现了你上面见到的接口绑定。就算你觉得暂时用不到接口绑定，你也应该遵循这里的规定，以防哪天你改变了注意。长远看来,只要将命名空间置于合适的Java包命名空间之中，你的代码会变得更加整洁，也有利于你更方便地使用Mybatis。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="mybatis" scheme="https://www.lacknb.cn/categories/mybatis/"/>
    
    
      <category term="mybatis" scheme="https://www.lacknb.cn/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>scrapy爬52古装网高清壁纸并下载</title>
    <link href="https://www.lacknb.cn/2019/08/26/scrapy%E7%88%AC52%E5%8F%A4%E8%A3%85%E7%BD%91%E9%AB%98%E6%B8%85%E5%A3%81%E7%BA%B8%E5%B9%B6%E4%B8%8B%E8%BD%BD/"/>
    <id>https://www.lacknb.cn/2019/08/26/scrapy爬52古装网高清壁纸并下载/</id>
    <published>2019-08-26T02:32:00.000Z</published>
    <updated>2019-10-17T13:13:42.866Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Oct 17 2019 21:13:43 GMT+0800 (CST) --><h2 id="1-创建项目"><a href="#1-创建项目" class="headerlink" title="1. 创建项目"></a>1. 创建项目</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建爬虫项目</span></span><br><span class="line">scrapy startproject GuzhuangWallpaper</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入爬虫项目的目录，生成爬虫文件(模板)</span></span><br><span class="line">scrapy genspider guzhuang www.52guzhuang.com</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="2-setting文件的配置"><a href="#2-setting文件的配置" class="headerlink" title="2. setting文件的配置"></a>2. setting文件的配置</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Scrapy settings for GuzhuangWallpaper project</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For simplicity, this file contains only settings considered important or</span></span><br><span class="line"><span class="comment"># commonly used. You can find more settings consulting the documentation:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     https://doc.scrapy.org/en/latest/topics/settings.html</span></span><br><span class="line"><span class="comment">#     https://doc.scrapy.org/en/latest/topics/downloader-middleware.html</span></span><br><span class="line"><span class="comment">#     https://doc.scrapy.org/en/latest/topics/spider-middleware.html</span></span><br><span class="line"></span><br><span class="line">BOT_NAME = <span class="string">'GuzhuangWallpaper'</span></span><br><span class="line"></span><br><span class="line">SPIDER_MODULES = [<span class="string">'GuzhuangWallpaper.spiders'</span>]</span><br><span class="line">NEWSPIDER_MODULE = <span class="string">'GuzhuangWallpaper.spiders'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Crawl responsibly by identifying yourself (and your website) on the user-agent</span></span><br><span class="line">USER_AGENT = <span class="string">'User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.86 Safari/537.36'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Obey robots.txt rules</span></span><br><span class="line">ROBOTSTXT_OBEY = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">LOG_LEVEL = <span class="string">'WARNING'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置下载参数</span></span><br><span class="line"><span class="comment"># FILES_STORE = "D:"  # 文件的存储路径</span></span><br><span class="line">IMAGES_STORE = <span class="string">"/media/nianshao/59D5FCE97201B8A7/download02/古装壁纸"</span>  <span class="comment"># 图片的存储路径</span></span><br><span class="line"><span class="comment"># 避免下载最近90天已经下载过的文件内容</span></span><br><span class="line">FILES_EXPIRES = <span class="number">90</span></span><br><span class="line"><span class="comment"># 避免下载最近90天已经下载过的图像内容</span></span><br><span class="line">IMAGES_EXPIRES = <span class="number">0</span></span><br><span class="line"><span class="comment"># 设置图片缩略图</span></span><br><span class="line">IMAGES_THUMBS = &#123;</span><br><span class="line">    <span class="string">'small'</span>: (<span class="number">50</span>, <span class="number">50</span>),</span><br><span class="line">    <span class="string">'big'</span>: (<span class="number">250</span>, <span class="number">250</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#该字段的值为xxxItem中定义的存储图片链接的img_urls字段</span></span><br><span class="line">IMAGES_URLS_FIELD = <span class="string">"img_urls"</span></span><br><span class="line"><span class="comment"># 该字段的值为xxxItem中定义的存储图片信息的imgages字段</span></span><br><span class="line">IMAGES_RESULT_FIELD = <span class="string">"images"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 图片过滤器，最小高度和宽度，低于此尺寸不下载</span></span><br><span class="line">IMAGES_MIN_HEIGHT = <span class="number">110</span></span><br><span class="line">IMAGES_MIN_WIDTH = <span class="number">110</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure maximum concurrent requests performed by Scrapy (default: 16)</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS = 32</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure a delay for requests for the same website (default: 0)</span></span><br><span class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/settings.html#download-delay</span></span><br><span class="line"><span class="comment"># See also autothrottle settings and docs</span></span><br><span class="line"><span class="comment">#DOWNLOAD_DELAY = 3</span></span><br><span class="line"><span class="comment"># The download delay setting will honor only one of:</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS_PER_DOMAIN = 16</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS_PER_IP = 16</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable cookies (enabled by default)</span></span><br><span class="line"><span class="comment">#COOKIES_ENABLED = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable Telnet Console (enabled by default)</span></span><br><span class="line"><span class="comment">#TELNETCONSOLE_ENABLED = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Override the default request headers:</span></span><br><span class="line">DEFAULT_REQUEST_HEADERS = &#123;</span><br><span class="line">  <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'</span>,</span><br><span class="line">  <span class="string">'Accept-Language'</span>: <span class="string">'en'</span>,</span><br><span class="line">  <span class="string">'Referer'</span>: <span class="string">'http://www.52guzhuang.com/forum-59-2.html'</span>,</span><br><span class="line">    <span class="string">'Cookie'</span>: <span class="string">'8ZxE_2132_saltkey=It2jtbtX; 8ZxE_2132_lastvisit=1566439893; bdshare_firstime=1566443802012; 8ZxE_2132_atarget=1; security_session_verify=27962fc0952df38b5fd0b1dd5d5b4097; ZDEDebuggerPresent=php,phtml,php3; Qs_lvt_192466=1566443795%2C1566632328; 8ZxE_2132_visitedfid=59D45; 8ZxE_2132_st_t=0%7C1566645295%7C7bc18059531f8726ac78d0664c62a87a; 8ZxE_2132_forum_lastvisit=D_45_1566643250D_59_1566645295; 8ZxE_2132_viewid=tid_58630; 8ZxE_2132_st_p=0%7C1566645504%7C2616708e5e9e0d761d5c513cf26d362a; 8ZxE_2132_sendmail=1; Qs_pv_192466=220429305054871900%2C4055271188718522400%2C577107211184728000%2C1215782351179700500%2C3219074084875213300; 8ZxE_2132_lastact=1566645606%09forum.php%09ajax'</span>,</span><br><span class="line">    <span class="string">'Host'</span>: <span class="string">'www.52guzhuang.com'</span>,</span><br><span class="line">    <span class="string">'Pragma'</span>: <span class="string">'no-cache'</span>,</span><br><span class="line">    <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Opera/9.80 (Windows NT 6.0) Presto/2.12.388 Version/12.14'</span>,</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable spider middlewares</span></span><br><span class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/spider-middleware.html</span></span><br><span class="line"><span class="comment">#SPIDER_MIDDLEWARES = &#123;</span></span><br><span class="line"><span class="comment">#    'GuzhuangWallpaper.middlewares.GuzhuangwallpaperSpiderMiddleware': 543,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable downloader middlewares</span></span><br><span class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/downloader-middleware.html</span></span><br><span class="line"><span class="comment">#DOWNLOADER_MIDDLEWARES = &#123;</span></span><br><span class="line"><span class="comment">#    'GuzhuangWallpaper.middlewares.GuzhuangwallpaperDownloaderMiddleware': 543,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable extensions</span></span><br><span class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/extensions.html</span></span><br><span class="line"><span class="comment">#EXTENSIONS = &#123;</span></span><br><span class="line"><span class="comment">#    'scrapy.extensions.telnet.TelnetConsole': None,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure item pipelines</span></span><br><span class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">   <span class="string">'scrapy.pipelines.images.ImagesPipeline'</span>: <span class="number">1</span>,</span><br><span class="line">   <span class="string">'GuzhuangWallpaper.pipelines.GuzhuangwallpaperPipeline'</span>: <span class="number">300</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable and configure the AutoThrottle extension (disabled by default)</span></span><br><span class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/autothrottle.html</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_ENABLED = True</span></span><br><span class="line"><span class="comment"># The initial download delay</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_START_DELAY = 5</span></span><br><span class="line"><span class="comment"># The maximum download delay to be set in case of high latencies</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_MAX_DELAY = 60</span></span><br><span class="line"><span class="comment"># The average number of requests Scrapy should be sending in parallel to</span></span><br><span class="line"><span class="comment"># each remote server</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_TARGET_CONCURRENCY = 1.0</span></span><br><span class="line"><span class="comment"># Enable showing throttling stats for every response received:</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_DEBUG = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable and configure HTTP caching (disabled by default)</span></span><br><span class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/downloader-middleware.html#httpcache-middleware-settings</span></span><br><span class="line"><span class="comment">#HTTPCACHE_ENABLED = True</span></span><br><span class="line"><span class="comment">#HTTPCACHE_EXPIRATION_SECS = 0</span></span><br><span class="line"><span class="comment">#HTTPCACHE_DIR = 'httpcache'</span></span><br><span class="line"><span class="comment">#HTTPCACHE_IGNORE_HTTP_CODES = []</span></span><br><span class="line"><span class="comment">#HTTPCACHE_STORAGE = 'scrapy.extensions.httpcache.FilesystemCacheStorage'</span></span><br></pre></td></tr></table></figure><h2 id="3-爬虫文件的编写"><a href="#3-爬虫文件的编写" class="headerlink" title="3. 爬虫文件的编写"></a>3. 爬虫文件的编写</h2><blockquote><ul><li><strong>items.py</strong></li></ul></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define here the models for your scraped items</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># See documentation in:</span></span><br><span class="line"><span class="comment"># https://doc.scrapy.org/en/latest/topics/items.html</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GuzhuangwallpaperItem</span><span class="params">(scrapy.Item)</span>:</span></span><br><span class="line">    <span class="comment"># define the fields for your item here like:</span></span><br><span class="line">    <span class="comment"># name = scrapy.Field()</span></span><br><span class="line">    img_urls = scrapy.Field()  <span class="comment"># 固定字段 与 setting中的一致</span></span><br></pre></td></tr></table></figure><blockquote><ul><li><strong>pipelines.py</strong></li></ul></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define your item pipelines here</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Don't forget to add your pipeline to the ITEM_PIPELINES setting</span></span><br><span class="line"><span class="comment"># See: https://doc.scrapy.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> scrapy.exceptions <span class="keyword">import</span> DropItem</span><br><span class="line"><span class="keyword">from</span> scrapy.pipelines.images <span class="keyword">import</span> ImagesPipeline  <span class="comment"># 内置的图片通道</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GuzhuangwallpaperPipeline</span><span class="params">(ImagesPipeline)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">item_completed</span><span class="params">(self, results, item, info)</span>:</span></span><br><span class="line">        image_path = [x[<span class="string">'path'</span>] <span class="keyword">for</span> ok, x <span class="keyword">in</span> results <span class="keyword">if</span> ok]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> image_path:</span><br><span class="line">            <span class="keyword">raise</span> DropItem(<span class="string">'Item contains no images'</span>)</span><br><span class="line">        item[<span class="string">'image_paths'</span>] = image_path</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">        print(<span class="string">"正在下载"</span>, item[<span class="string">'img_urls'</span>])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><blockquote><ul><li><strong>guzhuang.py</strong></li></ul></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> ..items <span class="keyword">import</span> GuzhuangwallpaperItem</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GuzhuangSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">'guzhuang'</span></span><br><span class="line">    allowed_domains = [<span class="string">'www.52guzhuang.com'</span>]</span><br><span class="line">    start_urls = [<span class="string">'http://www.52guzhuang.com/forum-59-1.html'</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.base_url = <span class="string">"http://www.52guzhuang.com/"</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        urls = response.xpath(<span class="string">'//div[@class="v-meta-title"]/a[1]/@href'</span>).extract()</span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(url, callback=self.get_picture, )</span><br><span class="line">            <span class="comment"># break</span></span><br><span class="line">            <span class="comment"># sleep(1)</span></span><br><span class="line">        <span class="comment"># next_page = response.xpath('//a[@class="nxt"]/text()[last()]').extract_first()</span></span><br><span class="line">        <span class="comment"># if next_page == '下一页':</span></span><br><span class="line">        <span class="comment">#     href = response.xpath('//a[@class="nxt"]/@href[last()]').extract_first()</span></span><br><span class="line">        <span class="comment">#     yield scrapy.Request(self.base_url + href, callback=self.parse, )</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_picture</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        item = GuzhuangwallpaperItem()</span><br><span class="line">        img_urls = response.xpath(<span class="string">'//img[@class="zoom"]/@file'</span>).extract()</span><br><span class="line">        next_page = response.xpath(<span class="string">'//div[@class="pg"]/a[last()]/text()'</span>).extract_first()</span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> img_urls:</span><br><span class="line">            item[<span class="string">'img_urls'</span>] = [self.base_url + url]</span><br><span class="line">            print(url)</span><br><span class="line">            <span class="keyword">yield</span> item</span><br><span class="line">        <span class="keyword">if</span> next_page == <span class="string">'下一页'</span>:</span><br><span class="line">            href = response.xpath(<span class="string">'//div[@class="pg"]/a[last()]/@href'</span>).extract_first()</span><br><span class="line">            pic_url = self.base_url + href</span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(pic_url, callback=self.get_picture)</span><br><span class="line">            <span class="comment"># sleep(1)</span></span><br></pre></td></tr></table></figure><h2 id="4-运行爬虫"><a href="#4-运行爬虫" class="headerlink" title="4. 运行爬虫"></a>4. 运行爬虫</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy crawl guzhuang</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Oct 17 2019 21:13:43 GMT+0800 (CST) --&gt;&lt;h2 id=&quot;1-创建项目&quot;&gt;&lt;a href=&quot;#1-创建项目&quot; class=&quot;headerlink&quot; title=&quot;1. 创建项目&quot;&gt;&lt;/a&gt;1. 创建项目&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 创建爬虫项目&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scrapy startproject GuzhuangWallpaper&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 进入爬虫项目的目录，生成爬虫文件(模板)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scrapy genspider guzhuang www.52guzhuang.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="爬虫" scheme="https://www.lacknb.cn/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="爬虫" scheme="https://www.lacknb.cn/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="scrapy" scheme="https://www.lacknb.cn/tags/scrapy/"/>
    
  </entry>
  
  <entry>
    <title>ognl表达式和值栈</title>
    <link href="https://www.lacknb.cn/2019/08/20/ognl%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%92%8C%E5%80%BC%E6%A0%88/"/>
    <id>https://www.lacknb.cn/2019/08/20/ognl表达式和值栈/</id>
    <published>2019-08-20T00:33:00.000Z</published>
    <updated>2019-10-17T13:14:32.260Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Oct 17 2019 21:14:32 GMT+0800 (CST) --><hr><h1 id="OGNL表达式"><a href="#OGNL表达式" class="headerlink" title="OGNL表达式"></a>OGNL表达式</h1><ul><li>OGNL的全称是对象图导航语言，使用这种表达式语言，可以通过某种表达式语法，存取Java对象任意属性，调用Java对象的方法，同时能够自动实现必要的类型转换。</li></ul><ul><li><ul><li>如果把表达式看作是一个带有语义的字符串，那么OGNL无疑成为这个语义字符串与Java对象之间的沟通的桥梁。</li></ul></li></ul><a id="more"></a><h5 id="Struts默认的表达式语言就是OGNL，它具有以下特点："><a href="#Struts默认的表达式语言就是OGNL，它具有以下特点：" class="headerlink" title="Struts默认的表达式语言就是OGNL，它具有以下特点："></a>Struts默认的表达式语言就是OGNL，它具有以下特点：</h5><ul><li><blockquote><p>支持对象方法调用。例如： objName.methodName()。</p></blockquote></li><li><blockquote><p>支持类静态方法调用和值访问，表达式的格式为@类全名(包含包路径)@方法名(值名)。例如：　@java.lang.String@format(‘foo %s’, ‘bar’)。</p></blockquote></li><li><blockquote><p>支持赋值操作和表达式关联。例如： price = 100, discount = 0.8, 在方法calculatePrice()中进行乘法计算会返回80。</p></blockquote></li><li><blockquote><p>访问OGNL上下文(ognl Context) 和　ActionContext。</p></blockquote></li><li><blockquote><p>操作集合对象。</p></blockquote></li><li><blockquote><p>ognl的操作实际上就是围绕着ognl结构的三个要素而进行的，分别是表达式、根对象、上下文环境，　下面分别讲解这三个要素。</p></blockquote></li></ul><h3 id="1-表达式"><a href="#1-表达式" class="headerlink" title="1. 表达式"></a>1. 表达式</h3><ul><li><blockquote><p>ognl的getValue()方法中有两个参数：　第一个参数是是表达式。表达式是整个ognl的核心，ognl会根据表达式去对象中取值。所有ognl操作都针对表达式解析后进行的。它表明了此次ognl操作要　“做什么”。表达式就是一个带有语法含义的字符串，这个字符串规定了操作的类型和操作的内容。ognl支持大量的表达式语法，不仅支持这种　“链式”　对象访问路径，还支持在表达式中进行简单的运算。</p></blockquote></li></ul><hr><h3 id="2-根对象（ROOT）"><a href="#2-根对象（ROOT）" class="headerlink" title="2. 根对象（ROOT）"></a>2. 根对象（ROOT）</h3><ul><li><blockquote><p>OGNL的getValue()方法中的第二个参数就是Root对象，Root对象可以理解为OGNL的操作对象，表达式规定了　“做什么”，　而Root对象则规定了　“对谁操作”。OGNL称为对象图导航语言，所谓对象图，即以任意一个对象为根，通过OGNL可以访问这个对象关联的其他对象。</p></blockquote></li></ul><hr><h3 id="3-Context对象"><a href="#3-Context对象" class="headerlink" title="3. Context对象"></a>3. Context对象</h3><ul><li><blockquote><p>实际上OGNL的取值还需要一个上下文环境。设置了Root对象，OGNL可以对Root对象进行取值或写值等操作，Root对象所在环境就是OGNL的上下文环境（Context）。上下文环境规定了OGNL的操作　“在哪里进行”。上下文环境Context是一个Map类型的对象，在表达式中访问Context对象，需要使用 “#” 号加上对象名称, 即　“＃对象名称”　的形式。</p></blockquote></li></ul><h3 id="例子："><a href="#例子：" class="headerlink" title="例子："></a>例子：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lacknb.ognl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> ognl.Ognl;</span><br><span class="line"><span class="keyword">import</span> ognl.OgnlException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestOgnlContext</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> OgnlException </span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        Group g = <span class="keyword">new</span> Group();</span><br><span class="line">        Branch b = <span class="keyword">new</span> Branch();</span><br><span class="line">        b.setBranchId(<span class="string">"test"</span>);</span><br><span class="line">        g.setBranch(b);</span><br><span class="line">        user.setGroup(g);</span><br><span class="line">        <span class="comment">// 用java来导航访问</span></span><br><span class="line">        System.out.println(<span class="string">"java方式－"</span> + user.getGroup().getBranch().getBranchId());</span><br><span class="line">        <span class="comment">// 利用OGNL表达式访问</span></span><br><span class="line">        System.out.println(<span class="string">"OGNＬ方式－"</span> + Ognl.getValue(<span class="string">"group.branch.branchId"</span>, user));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置user对象的username的属性值为itcast</span></span><br><span class="line">        user.setUsername(<span class="string">"itcast"</span>);</span><br><span class="line">        <span class="comment">// 创建context对象</span></span><br><span class="line">        Map context = <span class="keyword">new</span> HashMap();</span><br><span class="line">        <span class="comment">// 将user对象放入context对象中</span></span><br><span class="line">        context.put(<span class="string">"u"</span>, user);</span><br><span class="line">        <span class="comment">// 输出使用OGNL表达式获取context对象中的user对象的username值</span></span><br><span class="line">        System.out.println(<span class="string">"获取context中数据结果为-"</span> + Ognl.getValue(<span class="string">"#u.username"</span>, context, user));</span><br><span class="line">        System.out.println(<span class="string">"获取context中对象结果为-"</span> + Ognl.getValue(<span class="string">"#u.group.branch.branchId"</span>, context, user));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><blockquote><p>输出结果</p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">java方式－test</span><br><span class="line">OGNＬ方式－test</span><br><span class="line">获取context中数据结果为-itcast</span><br><span class="line">获取context中对象结果为-test</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Oct 17 2019 21:14:32 GMT+0800 (CST) --&gt;&lt;hr&gt;&lt;h1 id=&quot;OGNL表达式&quot;&gt;&lt;a href=&quot;#OGNL表达式&quot; class=&quot;headerlink&quot; title=&quot;OGNL表达式&quot;&gt;&lt;/a&gt;OGNL表达式&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;OGNL的全称是对象图导航语言，使用这种表达式语言，可以通过某种表达式语法，存取Java对象任意属性，调用Java对象的方法，同时能够自动实现必要的类型转换。&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;ul&gt;&lt;li&gt;如果把表达式看作是一个带有语义的字符串，那么OGNL无疑成为这个语义字符串与Java对象之间的沟通的桥梁。&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="struts2" scheme="https://www.lacknb.cn/categories/struts2/"/>
    
    
      <category term="struts2" scheme="https://www.lacknb.cn/tags/struts2/"/>
    
  </entry>
  
  <entry>
    <title>Struts2的拦截器</title>
    <link href="https://www.lacknb.cn/2019/08/17/Struts2%E7%9A%84%E6%8B%A6%E6%88%AA%E5%99%A8%E6%A0%88/"/>
    <id>https://www.lacknb.cn/2019/08/17/Struts2的拦截器栈/</id>
    <published>2019-08-17T09:47:00.000Z</published>
    <updated>2019-10-14T13:19:26.029Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Oct 17 2019 21:00:00 GMT+0800 (CST) --><hr><p>拦截器：</p><pre><code>拦截器链　和　拦截器栈</code></pre><hr><hr><h3 id="拦截器的工作原理："><a href="#拦截器的工作原理：" class="headerlink" title="拦截器的工作原理："></a>拦截器的工作原理：</h3><pre><code>通常情况下，拦截器都是以代理的方式调用的，它在一个action执行前后进行拦截围绕着Action和Result的执行而执行首先执行Action配置的拦截器，在Action与Result执行之后，拦截器会再次执行（与先前调用的顺序相反），在此链式执行的过程中，每一个拦截器在执行execute方法之前都可以直接返回。</code></pre><hr><a id="more"></a><h3 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h3><pre><code>    要想要让拦截器起作用，首先要对它进行配置。拦截器的配置在struts.xml文件中完成的，它通常以&lt;interceptor&gt;标签开头，以&lt;/interceptor&gt;标签结束。定义拦截器的语法如下：</code></pre><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"interceptorName"</span> <span class="attr">class</span>=<span class="string">"interceptorClass"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"paramName"</span>&gt;</span>paramValue<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">interceptor</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><ul><li>上述语法格式中，name属性用来指定拦截器的名称，class属性用于指定<br>拦截器的实现类。有时，在定义拦截器时需要传入的参数，这时需要使用<br>param标签，其中name属性用来指定参数的名称，paramValue表示参数的值</li></ul></blockquote><hr><h3 id="拦截器栈"><a href="#拦截器栈" class="headerlink" title="拦截器栈"></a>拦截器栈</h3><pre><code>在实际开发中，经常需要在Action执行前同时执行多个拦截动作，如用户登录检查  、登录日志记录及权限检查等，这时，可以把多个拦截器组成一个拦截器栈。在  使用时，可以将栈内的多个拦截器当成一个整体来引用。当拦截器栈被附加到一  个Action时，在执行Action之前必须执行拦截器栈中的每一个拦截器。</code></pre><blockquote><ul><li>定义拦截器使用<interceptors>元素和<interceptor-stack>子元素<br>当配置多个拦截器时，需要使用<interceptor-ref>元素来指定多个拦截器<br>配置语法如下:</interceptor-ref></interceptor-stack></interceptors></li></ul></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">interceptors</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">interceptor-stack</span> <span class="attr">name</span>=<span class="string">"interceptorStackName"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"interceptorName"</span>&gt;</span><span class="tag">&lt;/<span class="name">interceptor-ref</span>&gt;</span></span><br><span class="line">        ....</span><br><span class="line">      <span class="tag">&lt;/<span class="name">interceptor-stack</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">interceptors</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><ul><li>在上述语法中，interceptorStackName值表示配置的拦截器栈的名称<br>interceptorName值表示拦截器的名称。除此之外，在一个拦截器栈中还可以<br>包括另一个拦截器栈。代码如下：</li></ul></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"default"</span> <span class="attr">namespace</span>=<span class="string">"/"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span> &gt;</span></span><br><span class="line">  <span class="comment">&lt;!--声明拦截器--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">interceptors</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"interceptor1"</span> <span class="attr">class</span>=<span class="string">"interceptorClass"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"interceptor2"</span> <span class="attr">class</span>=<span class="string">"interceptorClass"</span> /&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--定义一个拦截器栈myStack，该拦截器栈中包括两个拦截器和一个拦截器栈--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">interceptor-stack</span> <span class="attr">name</span>=<span class="string">"myStack"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"defaultStack"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"interceptor1"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"interceptor1"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">interceptor-stack</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">interceptors</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><ul><li>在上述代码中，定义的拦截器栈是myStack，在myStack栈中，除了引用两个<br>自定义的拦截器interceptor1和interceptor2外，还引用了一个内置拦截器栈<br>defalultStack，这个拦截器是必须要引入的。</li></ul></blockquote><h3 id="默认拦截器"><a href="#默认拦截器" class="headerlink" title="默认拦截器"></a>默认拦截器</h3><blockquote><ul><li>如果想对一个包下的action使用相同的拦截器，则需要为该包中的每一个<br>action都重复指定同一个拦截器，这样写过于繁琐。这时，可以使用默认拦截<br>器，默认拦截器可以对其指定的包中所有的action都能起到拦截的作用。一<br>旦为某一个包指定了默认拦截器，并且该包中的action未显式地指定拦截器<br>则会使用默认拦截器。反之，<strong>若此包中的action中显式地指出了某个拦截器<br>，则该默认拦截器将会被屏蔽。此时，如果还想使用默认拦截器，则需要用<br>户手动配置该默认拦截器的引用。</strong></li></ul></blockquote><blockquote><ul><li>配置默认拦截器需要使用<default-interceptor-ref>元素，此元素为<br><package>元素的子元素。其语法如下</package></default-interceptor-ref></li></ul></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">default-interceptor-ref</span> <span class="attr">name</span>=<span class="string">"拦截器(栈)的名称"</span> /&gt;</span></span><br></pre></td></tr></table></figure><blockquote><ul><li>上述语法格式中，name属性的值必须是已存在的拦截器或拦截器栈的<br>名称。下面用该语法格式配置一个默认拦截器，示例代码如下：</li></ul></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"default"</span> <span class="attr">namespace</span>=<span class="string">"/"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span> &gt;</span></span><br><span class="line">  <span class="comment">&lt;!--声明拦截器--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">interceptors</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"interceptor1"</span> <span class="attr">class</span>=<span class="string">"interceptorClass"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"interceptor2"</span> <span class="attr">class</span>=<span class="string">"interceptorClass"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--定义一个配置默认拦截器栈myStack，该拦截器栈包含两个拦截器和一个拦截器栈--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">interceptor-stack</span> <span class="attr">name</span>=<span class="string">"myStack"</span> &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"interceptor1"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"interceptor2"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"defaultStack"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">interceptor-stack</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置包下的默认配置器，既可以是拦截器，也可以是拦截器栈--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">default-interceptor-ref</span> <span class="attr">name</span>=<span class="string">"myStack"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"login"</span> <span class="attr">class</span>=<span class="string">"cn.itcast.action.LoginAction"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"input"</span>&gt;</span>/login.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">interceptors</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><ul><li>在上面代码中，指定了包下面的的默认拦截器为一个拦截器栈，该拦截器<br>栈将会作于包下所有的action。</li></ul></blockquote><p><strong>注意</strong>：　每一个包下只能定义一个默认拦截器，如果需要多个拦截器作为默<br>认拦截器，则可以将这些拦截器定义为一个拦截器栈，再将这个拦截器作为默认<br>默认拦截器即可。</p><h3 id="自定义拦截器"><a href="#自定义拦截器" class="headerlink" title="自定义拦截器"></a>自定义拦截器</h3><h4 id="实现自定义拦截器"><a href="#实现自定义拦截器" class="headerlink" title="实现自定义拦截器"></a><em>实现自定义拦截器</em></h4><pre><code>在程序开发过程中，如果需要开发自己的拦截器类，就需要直接或间接地实现      com.opensymphony.xwork2.interceptor.Interceptor接口，具体代码如下:</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Interceptor</span> <span class="keyword">extends</span> <span class="title">Serializable</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">String <span class="title">interceptor</span><span class="params">(ActionInvocation invocation)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该接口提供了一下三个方法。</p><blockquote><ul><li>void init(): 该方法在拦截器被创建之后会立即被调用，它在拦截器的生命<br>周期内只能被调用一次。可以在该方法对相关资源进行必要的初始化。</li></ul></blockquote><blockquote><ul><li>void destroy(): 该方法和init()方法相对应，在拦截器实例被销毁之前，将<br>调用该方法来释放与拦截器相关的资源。它在拦截器的生命周期内也只被调用一次</li></ul></blockquote><blockquote><ul><li>String interceptor(ActionInvocation invocation) throws Exception:<br>该方法是拦截器的核心方法，用来添加真正执行拦截工作的代码，实现具体的拦截<br>操作。它返回一个字符串作为逻辑视图，系统根据返回的字符串跳转到对应的视图<br>资源。每拦截一个动作请求，该方法就会被调用一次。该方法的ActionInvocation<br>参数包含了被拦截的Action的引用，可以通过该参数的invoke()方法，将控制权交<br>给下一个拦截器或者转给Action的execute()方法。</li></ul></blockquote><ul><li>如果需要自定义的拦截器，只需要实现Interceptor接口的三个方法即可。然而在<br>实际开发过程中，除了实现Interceptor接口可以自定义拦截器外，更常用的一种<br>方式是继承抽象拦截类AbstractInterceptor。该类实现了Interceptor接口，并且<br>提供了init()方法和destroy()方法的空实现。使用时，可以直接继承该抽象类，而并不用实现那些不必要的方法。拦截器类AbstractInterceptor中定义的方法如下所示：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractInterceptor</span> <span class="keyword">implements</span> <span class="title">Interceptor</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> String <span class="title">interceptor</span><span class="params">(ActionInvocation invocation)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>从上述代码中可以看出，AbstractInterceptor类已经实现了Interceptor接口的<br>所有方法，一般情况下，只需继承AbstractInterceptor类，实现interceptor()方法<br>就可以创建自定义拦截器。</li></ul><blockquote><ul><li>只有当自定义拦截器<strong><em>需要打开系统资源时</em></strong>，才需要<strong><em>覆盖AbstractInterceptor类<br>的init()方法和destroy()方法。</em></strong>与实现Interceptor接口相比，继承AbstractInte-rceptor类的方法更为简单。</li></ul></blockquote><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Oct 17 2019 21:00:00 GMT+0800 (CST) --&gt;&lt;hr&gt;&lt;p&gt;拦截器：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;拦截器链　和　拦截器栈&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;&lt;hr&gt;&lt;h3 id=&quot;拦截器的工作原理：&quot;&gt;&lt;a href=&quot;#拦截器的工作原理：&quot; class=&quot;headerlink&quot; title=&quot;拦截器的工作原理：&quot;&gt;&lt;/a&gt;拦截器的工作原理：&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;通常情况下，拦截器都是以代理的方式调用的，它在一个action执行前后进行拦截
围绕着Action和Result的执行而执行

首先执行Action配置的拦截器，在Action与Result执行之后，拦截器会再次执行
（与先前调用的顺序相反），在此链式执行的过程中，每一个拦截器在执行execute
方法之前都可以直接返回。&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
    
    </summary>
    
    
      <category term="struts2" scheme="https://www.lacknb.cn/categories/struts2/"/>
    
    
  </entry>
  
</feed>
